{
    "˭言ᱚ敕ᛑ": "˭言ᱚ敕ᛑ",
    "({})": "({})",
    "({'versusClassTypeName':['\\u91cd\\u88c5\\u7cfb'],'versusClassTypePow':7,'versusClassTypeHit':10,'note':'\\u7279\\u52b9\\u679c\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+10'})": "({'versusClassTypeName':['\\u91cd\\u88c5\\u7cfb'],'versusClassTypePow':7,'versusClassTypeHit':10,'note':'\\u7279\\u52b9\\u679c\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+10'})",
    "({'movePow':1})": "({'movePow':1})",
    "({'unOnly':true})": "({'unOnly':true})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':7,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':7,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'mace':true})": "({'mace':true})",
    "({'versusRaceName':['\\u4e0d\\u6b7b','\\u9b54\\u7269'],'versusRacePow':4,'versusRaceHit':30,'keyword':'\\u7279\\u52b9','text':'\\u30e2\\u30f3\\u30b9\\u30bf\\u30fc','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})": "({'versusRaceName':['\\u4e0d\\u6b7b','\\u9b54\\u7269'],'versusRacePow':4,'versusRaceHit':30,'keyword':'\\u7279\\u52b9','text':'\\u30e2\\u30f3\\u30b9\\u30bf\\u30fc','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})",
    "({'movePow':1,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20'})": "({'movePow':1,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20'})",
    "({'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20'})": "({'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20'})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':10,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':10,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'movePow':1,'hurl':-15,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-15'})": "({'movePow':1,'hurl':-15,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-15'})",
    "({'unInfo':true})": "({'unInfo':true})",
    "({'round':2,'note':'\\u5fc5\\u305a\\u8ffd\\u6483\\u304c\\u767a\\u751f'})": "({'round':2,'note':'\\u5fc5\\u305a\\u8ffd\\u6483\\u304c\\u767a\\u751f'})",
    "({'versusRaceName':['\\u4e0d\\u6b7b','\\u9b54\\u7269'],'versusRacePow':17,'versusRaceHit':30,'keyword':'\\u7279\\u52b9','text':'\\u30e2\\u30f3\\u30b9\\u30bf\\u30fc','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})": "({'versusRaceName':['\\u4e0d\\u6b7b','\\u9b54\\u7269'],'versusRacePow':17,'versusRaceHit':30,'keyword':'\\u7279\\u52b9','text':'\\u30e2\\u30f3\\u30b9\\u30bf\\u30fc','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})",
    "({'change':true,'note':'\\u62b5\\u6297\\u3092\\u9632\\u5fa1\\u5bfe\\u8c61\\u3068\\u3059\\u308b'})": "({'change':true,'note':'\\u62b5\\u6297\\u3092\\u9632\\u5fa1\\u5bfe\\u8c61\\u3068\\u3059\\u308b'})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':17,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':17,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'movePow':1,'hurl':-20,'keyword':'\\u7279\\u52b9','text':'HP\\u5168\\u5feb','versusMaxHpPow':15,'note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'movePow':1,'hurl':-20,'keyword':'\\u7279\\u52b9','text':'HP\\u5168\\u5feb','versusMaxHpPow':15,'note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'mace':true,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20'})": "({'mace':true,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20'})",
    "({'mace':true,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20','keyword2':'\\u7279\\u52b9','text2':'\\u8853\\uff1e\\u529b','excelMagicPow':4,'excelMagicHit':30,'note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})": "({'mace':true,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20','keyword2':'\\u7279\\u52b9','text2':'\\u8853\\uff1e\\u529b','excelMagicPow':4,'excelMagicHit':30,'note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':8,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':8,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'invalid':'\\u5f13','unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u5f13\\u306b\\u3088\\u308b\\u7279\\u52b9\\u3092\\u7121\\u52b9\\u5316'})": "({'invalid':'\\u5f13','unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u5f13\\u306b\\u3088\\u308b\\u7279\\u52b9\\u3092\\u7121\\u52b9\\u5316'})",
    "({'hurl':-10,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-10'})": "({'hurl':-10,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-10'})",
    "({'unDisplay':true,'note':'\\u30c7\\u30d0\\u30c3\\u30b0\\u7528\\u3067\\u3054\\u3056\\u308b\\u305e\\uff01'})": "({'unDisplay':true,'note':'\\u30c7\\u30d0\\u30c3\\u30b0\\u7528\\u3067\\u3054\\u3056\\u308b\\u305e\\uff01'})",
    "({'movePow':1,'moveHit':3,'note':'\\u79fb\\u52d5\\u3059\\u308b\\u6bce\\u306b\\u547d\\u4e2d+3'})": "({'movePow':1,'moveHit':3,'note':'\\u79fb\\u52d5\\u3059\\u308b\\u6bce\\u306b\\u547d\\u4e2d+3'})",
    "({'total':true,'allCounter':true,'unBonus':true,'keyword':'\\u9632\\u5fa1\\u5bfe\\u8c61','note':'\\u5b88\\u5099\\u3068\\u62b5\\u6297\\u306e\\u5408\\u7b97','keyword2':'\\u7279\\u6b8a\\u52b9\\u679c','note2':'\\u8ddd\\u96e2\\u306b\\u95a2\\u4fc2\\u306a\\u304f\\u53cd\\u6483'})": "({'total':true,'allCounter':true,'unBonus':true,'keyword':'\\u9632\\u5fa1\\u5bfe\\u8c61','note':'\\u5b88\\u5099\\u3068\\u62b5\\u6297\\u306e\\u5408\\u7b97','keyword2':'\\u7279\\u6b8a\\u52b9\\u679c','note2':'\\u8ddd\\u96e2\\u306b\\u95a2\\u4fc2\\u306a\\u304f\\u53cd\\u6483'})",
    "({'movePow':1,'WaitEQ':true})": "({'movePow':1,'WaitEQ':true})",
    "({'getStateId':19,'keyword':'\\u4f7f\\u7528\\u8005','text':'\\u67af\\u6e07\\u4ed8\\u4e0e'})": "({'getStateId':19,'keyword':'\\u4f7f\\u7528\\u8005','text':'\\u67af\\u6e07\\u4ed8\\u4e0e'})",
    "({'unDisplay':true,'keyword':'\\u6210\\u9577\\u7387\\u30dc\\u30fc\\u30ca\\u30b9','note':'\\u6240\\u6301\\u3059\\u308b\\u3068\\u4e8c\\u5ea6\\u3068\\u624b\\u653e\\u305b\\u306a\\u3044'})": "({'unDisplay':true,'keyword':'\\u6210\\u9577\\u7387\\u30dc\\u30fc\\u30ca\\u30b9','note':'\\u6240\\u6301\\u3059\\u308b\\u3068\\u4e8c\\u5ea6\\u3068\\u624b\\u653e\\u305b\\u306a\\u3044'})",
    "({'versusClassTypeName':['\\u9a0e\\u99ac\\u7cfb','\\u98db\\u884c\\u7cfb'],'versusClassTypePow':11,'versusClassTypeHit':10,'note':'\\u7279\\u52b9\\u679c\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+10'})": "({'versusClassTypeName':['\\u9a0e\\u99ac\\u7cfb','\\u98db\\u884c\\u7cfb'],'versusClassTypePow':11,'versusClassTypeHit':10,'note':'\\u7279\\u52b9\\u679c\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+10'})",
    "({'unDisplay':true,'keyword':'\\u6210\\u9577\\u7387\\u30dc\\u30fc\\u30ca\\u30b9','note':'\\u5168\\u3066\\u306e\\u6210\\u9577\\u7387 + 5%'})": "({'unDisplay':true,'keyword':'\\u6210\\u9577\\u7387\\u30dc\\u30fc\\u30ca\\u30b9','note':'\\u5168\\u3066\\u306e\\u6210\\u9577\\u7387 + 5%'})",
    "({'unDisplay':true,'keyword':'\\u30c9\\u30fc\\u30d4\\u30f3\\u30b0\\u30a2\\u30a4\\u30c6\\u30e0','text':'\\u79fb\\u52d5\\u4ee5\\u5916\\u306e\\u5168\\u80fd\\u529b + 1'})": "({'unDisplay':true,'keyword':'\\u30c9\\u30fc\\u30d4\\u30f3\\u30b0\\u30a2\\u30a4\\u30c6\\u30e0','text':'\\u79fb\\u52d5\\u4ee5\\u5916\\u306e\\u5168\\u80fd\\u529b + 1'})",
    "({'unDisplay':true,'keyword':'\\u63db\\u91d1\\u30a2\\u30a4\\u30c6\\u30e0'})": "({'unDisplay':true,'keyword':'\\u63db\\u91d1\\u30a2\\u30a4\\u30c6\\u30e0'})",
    "({'unDisplay':true,'DopingStrongPoint':true,'keyword':'\\u30c9\\u30fc\\u30d4\\u30f3\\u30b0\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u3082\\u3063\\u3068\\u3082\\u9ad8\\u3044\\u80fd\\u529b\\u306e\\u3044\\u305a\\u308c\\u304b + 2','note2':'\\uff08HP\\u3001\\u79fb\\u52d5\\u306f\\u5bfe\\u8c61\\u5916\\uff09'})": "({'unDisplay':true,'DopingStrongPoint':true,'keyword':'\\u30c9\\u30fc\\u30d4\\u30f3\\u30b0\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u3082\\u3063\\u3068\\u3082\\u9ad8\\u3044\\u80fd\\u529b\\u306e\\u3044\\u305a\\u308c\\u304b + 2','note2':'\\uff08HP\\u3001\\u79fb\\u52d5\\u306f\\u5bfe\\u8c61\\u5916\\uff09'})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':12,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d','round':1,'note2':'\\u8ffd\\u6483\\u4e0d\\u53ef'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':12,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d','round':1,'note2':'\\u8ffd\\u6483\\u4e0d\\u53ef'})",
    "({'versusRaceName':['\\u4e0d\\u6b7b','\\u9b54\\u7269'],'versusRacePow':8,'versusRaceHit':30,'keyword':'\\u7279\\u52b9','text':'\\u30e2\\u30f3\\u30b9\\u30bf\\u30fc','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})": "({'versusRaceName':['\\u4e0d\\u6b7b','\\u9b54\\u7269'],'versusRacePow':8,'versusRaceHit':30,'keyword':'\\u7279\\u52b9','text':'\\u30e2\\u30f3\\u30b9\\u30bf\\u30fc','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+30'})",
    "({'round':1,'note':'\\u8ffd\\u6483\\u4e0d\\u53ef'})": "({'round':1,'note':'\\u8ffd\\u6483\\u4e0d\\u53ef'})",
    "({'change':true,'keyword':'\\u9632\\u5fa1\\u5bfe\\u8c61','text':'\\u62b5\\u6297','versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':10,'versusClassTypeHit':0,'keyword2':'\\u7279\\u52b9','text2':'\\u98db\\u884c\\u7cfb','note2':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'change':true,'keyword':'\\u9632\\u5fa1\\u5bfe\\u8c61','text':'\\u62b5\\u6297','versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':10,'versusClassTypeHit':0,'keyword2':'\\u7279\\u52b9','text2':'\\u98db\\u884c\\u7cfb','note2':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'versusClassTypeName':['\\u91cd\\u88c5\\u7cfb'],'versusClassTypePow':12,'versusClassTypeHit':10,'note':'\\u7279\\u52b9\\u679c\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+10'})": "({'versusClassTypeName':['\\u91cd\\u88c5\\u7cfb'],'versusClassTypePow':12,'versusClassTypeHit':10,'note':'\\u7279\\u52b9\\u679c\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d\\uff06\\u547d\\u4e2d+10'})",
    "({'invalid':'\\u65a7','unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u65a7\\u306b\\u3088\\u308b\\u7279\\u52b9\\u3092\\u7121\\u52b9\\u5316'})": "({'invalid':'\\u65a7','unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u65a7\\u306b\\u3088\\u308b\\u7279\\u52b9\\u3092\\u7121\\u52b9\\u5316'})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':14,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':14,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'reduce':0.5,'movePow':2,'round':1,'remove':false,'keyword':'\\u7279\\u6b8a\\u6b66\\u5668','text':'\\u53cd\\u6483\\u30fb\\u518d\\u79fb\\u52d5\\u4e0d\\u53ef','note':'\\u6575\\u9632\\u5fa1\\u534a\\u6e1b\\u30fb\\u79fb\\u52d5\\u30dc\\u30fc\\u30ca\\u30b9\\u5897'})": "({'reduce':0.5,'movePow':2,'round':1,'remove':false,'keyword':'\\u7279\\u6b8a\\u6b66\\u5668','text':'\\u53cd\\u6483\\u30fb\\u518d\\u79fb\\u52d5\\u4e0d\\u53ef','note':'\\u6575\\u9632\\u5fa1\\u534a\\u6e1b\\u30fb\\u79fb\\u52d5\\u30dc\\u30fc\\u30ca\\u30b9\\u5897'})",
    "({'damage_con':0.5,'recovery_con':0.5,'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u30c0\\u30e1\\u30fc\\u30b8\\uff06\\u56de\\u5fa9\\u91cf\\u3092\\u534a\\u6e1b'})": "({'damage_con':0.5,'recovery_con':0.5,'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u30c0\\u30e1\\u30fc\\u30b8\\uff06\\u56de\\u5fa9\\u91cf\\u3092\\u534a\\u6e1b'})",
    "({'mace':true,'versusParamName':'\\u6280','versusParamPow':12,'versusParamHit':30,'keyword':'\\u7279\\u52b9','text':'\\u5df1\\u3088\\u308a\\u6280\\u304c\\u4e0a','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff13\\u500d\\uff06\\u547d\\u4e2d+30'})": "({'mace':true,'versusParamName':'\\u6280','versusParamPow':12,'versusParamHit':30,'keyword':'\\u7279\\u52b9','text':'\\u5df1\\u3088\\u308a\\u6280\\u304c\\u4e0a','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff13\\u500d\\uff06\\u547d\\u4e2d+30'})",
    "({'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20','WaitEQ':true})": "({'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20','WaitEQ':true})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':12,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':12,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'keyword':'\\u4f7f\\u7528\\u6642','text':'\\u6311\\u767a\\u4ed8\\u4e0e'})": "({'keyword':'\\u4f7f\\u7528\\u6642','text':'\\u6311\\u767a\\u4ed8\\u4e0e'})",
    "({'invalid':'all','unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u5168\\u3066\\u306e\\u7279\\u52b9\\u3092\\u7121\\u52b9\\u5316'})": "({'invalid':'all','unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u5168\\u3066\\u306e\\u7279\\u52b9\\u3092\\u7121\\u52b9\\u5316'})",
    "({'unInfo':true,'unOnly':true,'keyword':'\\u30b9\\u30c6\\u30fc\\u30c8\\u56de\\u5fa9\\u306e\\u8f1d\\u77f3'})": "({'unInfo':true,'unOnly':true,'keyword':'\\u30b9\\u30c6\\u30fc\\u30c8\\u56de\\u5fa9\\u306e\\u8f1d\\u77f3'})",
    "({'getStateId':5,'keyword':'\\u4f7f\\u7528\\u8005','text':'\\u546a\\u3044\\u4ed8\\u4e0e'})": "({'getStateId':5,'keyword':'\\u4f7f\\u7528\\u8005','text':'\\u546a\\u3044\\u4ed8\\u4e0e'})",
    "({'versusStateName':'\\u6bd2','versusStatePow':34,'versusStateHit':999,'keyword':'\\u7279\\u52b9','text':'\\u6bd2','note':'\\u7279\\u653b\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff13\\u500d\\uff06\\u5fc5\\u4e2d'})": "({'versusStateName':'\\u6bd2','versusStatePow':34,'versusStateHit':999,'keyword':'\\u7279\\u52b9','text':'\\u6bd2','note':'\\u7279\\u653b\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff13\\u500d\\uff06\\u5fc5\\u4e2d'})",
    "({'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u3042\\u308b\\u7981\\u8853\\u3092\\u62e1\\u6563\\u3055\\u305b\\u308b'})": "({'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u3042\\u308b\\u7981\\u8853\\u3092\\u62e1\\u6563\\u3055\\u305b\\u308b'})",
    "({'mace':true,'round':2,'note':'\\u5fc5\\u305a\\u8ffd\\u6483\\u304c\\u767a\\u751f'})": "({'mace':true,'round':2,'note':'\\u5fc5\\u305a\\u8ffd\\u6483\\u304c\\u767a\\u751f'})",
    "({'mace':true,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20','note':'\\u88c5\\u5099\\u8005\\u306b\\u6bce\\u30bf\\u30fc\\u30f35\\u306e\\u30c0\\u30e1\\u30fc\\u30b8','versusRaceName':['\\u6226\\u95d8\\u54e1','\\u975e\\u6226\\u95d8\\u54e1'],'versusRacePow':10,'versusRaceHit':0,'keyword2':'\\u7279\\u52b9','text2':'\\u4eba\\u9593','note2':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'mace':true,'hurl':-20,'keyword':'\\u6295\\u64f2\\u6642','text':'\\u547d\\u4e2d-20','note':'\\u88c5\\u5099\\u8005\\u306b\\u6bce\\u30bf\\u30fc\\u30f35\\u306e\\u30c0\\u30e1\\u30fc\\u30b8','versusRaceName':['\\u6226\\u95d8\\u54e1','\\u975e\\u6226\\u95d8\\u54e1'],'versusRacePow':10,'versusRaceHit':0,'keyword2':'\\u7279\\u52b9','text2':'\\u4eba\\u9593','note2':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'reduce':0.5,'note':'\\u76f8\\u624b\\u306e\\u9632\\u5fa1\\u534a\\u6e1b'})": "({'reduce':0.5,'note':'\\u76f8\\u624b\\u306e\\u9632\\u5fa1\\u534a\\u6e1b'})",
    "({'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u4f55\\u304b\\u306e\\u8853\\u306b\\u4f7f\\u3046\\u3088\\u3046\\u3060\\u304c\\u2026\\uff1f'})": "({'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u4f55\\u304b\\u306e\\u8853\\u306b\\u4f7f\\u3046\\u3088\\u3046\\u3060\\u304c\\u2026\\uff1f'})",
    "({'damage_con':0.7,'recovery_con':0.7,'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u30c0\\u30e1\\u30fc\\u30b8\\uff06\\u56de\\u5fa9\\u91cf\\u309270%\\u306b\\u3059\\u308b'})": "({'damage_con':0.7,'recovery_con':0.7,'unDisplay':true,'keyword':'\\u7279\\u6b8a\\u30a2\\u30a4\\u30c6\\u30e0','note':'\\u30c0\\u30e1\\u30fc\\u30b8\\uff06\\u56de\\u5fa9\\u91cf\\u309270%\\u306b\\u3059\\u308b'})",
    "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':13,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})": "({'versusClassTypeName':['\\u98db\\u884c\\u7cfb'],'versusClassTypePow':13,'versusClassTypeHit':0,'keyword':'\\u7279\\u52b9','text':'\\u98db\\u884c\\u7cfb','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff12\\u500d'})",
    "({'mace':true,'versusParamName':'\\u901f\\u3055','versusParamPow':12,'versusParamHit':30,'keyword':'\\u7279\\u52b9','text':'\\u5df1\\u3088\\u308a\\u901f\\u3055\\u304c\\u4e0a','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff13\\u500d\\uff06\\u547d\\u4e2d+30'})": "({'mace':true,'versusParamName':'\\u901f\\u3055','versusParamPow':12,'versusParamHit':30,'keyword':'\\u7279\\u52b9','text':'\\u5df1\\u3088\\u308a\\u901f\\u3055\\u304c\\u4e0a','note':'\\u7279\\u52b9\\u6210\\u7acb\\u6642\\u3001\\u5a01\\u529b\\uff13\\u500d\\uff06\\u547d\\u4e2d+30'})",
    "({'movePow':1,'round':2,'note':'\\u5fc5\\u305a\\u8ffd\\u6483\\u304c\\u767a\\u751f'})": "({'movePow':1,'round':2,'note':'\\u5fc5\\u305a\\u8ffd\\u6483\\u304c\\u767a\\u751f'})",
    "({'isInitialStartup':false,'AutoMessageIndex':1,'isStillTop':false,'isColosseum':false,'verGolo':true})": "({'isInitialStartup':false,'AutoMessageIndex':1,'isStillTop':false,'isColosseum':false,'verGolo':true})",
    "杏卧Ȁ": "杏卧Ȁ",
    "瘁牯楢s": "瘁牯楢s",
    "瘃牯楢㡳": "瘃牯楢㡳",
    "砿⁧헇婷짔ਁ쳂㶃篇헹뫝墜ꔏኌ飿": "砿⁧헇婷짔ਁ쳂㶃篇헹뫝墜ꔏኌ飿",
    "噴乔ᧈ弘㬝冾㸳": "噴乔ᧈ弘㬝冾㸳",
    "튃礇n": "튃礇n",
    "嶉黋挆߬Ȍᙠ띷૸핤ż췁阭ს踴潓΃Ḝ怀<梾鰽癦狀Ⴔ筹ፆ蟜쯬斾䐪㞾鐸쟣㯿㈱䘯ṇ繑": "嶉黋挆߬Ȍᙠ띷૸핤ż췁阭ს踴潓΃Ḝ怀<梾鰽癦狀Ⴔ筹ፆ蟜쯬斾䐪㞾鐸쟣㯿(株)䘯ṇ繑",
    "퍙杛穖ᙟ덖頑朅肾츳뻁굥햵⪚ꇡં": "퍙杛穖ᙟ덖頑朅肾츳뻁굥햵⪚ꇡં",
    "쌘晰◺뛖궾볕ꪪ₩": "쌘晰◺뛖궾볕ꪪ₩",
    "뱙枕䁫䵴짤힡ꪧ㜪糀ᡠ䛭⧌属㩳줅䗢ホ靮鶴翹並꧒꺝㜭硨฻ʹ䔀龍ꁽ⓲䗝䫕㏭敀鷽À偠怏뵭揸琈곔춁䰠屋鎀⠅ׇ㫇彰䄟᧲쐟༃뀼鸉]": "뱙枕䁫䵴짤힡ꪧ㜪糀ᡠ䛭⧌属㩳줅䗢ホ靮鶴翹並꧒꺝㜭硨฻ʹ䔀龍ꁽ⓲䗝䫕14日敀鷽À偠怏뵭揸琈곔춁䰠屋鎀⠅ׇ㫇彰䄟᧲쐟༃뀼鸉]",
    "﫝屸晣耰π܃": "﫝屸晣耰π܃",
    "ﰘ뀃尝背ⱣḀ籨嵏嚪࣑醾ᣞ﬈由⻉Ҏ㟔潤ퟅ貇됕﷨㻒⍨ࣼ㔋啕䅁": "حم뀃尝背ⱣḀ籨嵏嚪࣑醾ᣞ﬈由⻉Ҏ㟔潤ퟅ貇됕﷨㻒⍨ࣼ㔋啕䅁",
    "⬭涰᫵ࢾ즾怡켂볍䄁": "⬭涰᫵ࢾ즾怡켂볍䄁",
    "㎹섳ᶀ虓a풰㝝퐅」샀欖ⰱ㭘奠蝫挝싊嬰ٓ녫똰ˆퟪ샂쌘歚±놃띥낶㖀嬀ŠⲰ": "MV섳ᶀ虓a풰㝝퐅」샀欖ⰱ㭘奠蝫挝싊嬰ٓ녫똰ˆퟪ샂쌘歚±놃띥낶㖀嬀ŠⲰ",
    "杏卧": "杏卧",
    "脾躻鸷삃ٸ⥱˥⪊蓈⡳ሁ삄㠀捎枕1匀㴹ಝ저⁈貃䖞摇呂͌洰鹒ൎ͌怀퐘ᒩ鰆̙　袵≮": "脾躻鸷삃يٴ⥱˥⪊蓈⡳ሁ삄㠀捎枕1匀㴹ಝ저?!貃䖞摇呂͌洰鹒ൎ͌怀퐘ᒩ鰆̙ 袵≮",
    "岅殴ᤠ": "岅殴ᤠ",
    "囓ꏀ": "囓ꏀ",
    "Ⲝ䜀礀切媄䬠⫆ꄜ辙Ǝ": "Ⲝ䜀礀切媄䬠⫆ꄜ辙Ǝ",
    "ӁႰ쀀\u001f": "ӁႰ쀀\u001f",
    "樷蠀ṿ": "樷蠀ṿ",
    "ⓥ՟﵎厡ƇY쎀༌꘼ᙢ": "v՟﵎厡ƇY쎀་꘼ᙢ",
    "壾ᾅ闝嵝峚傴즀獡飯幝进뾥⅔扠!㾀": "壾ᾅ闝嵝峚傴즀獡飯幝进뾥2⁄3扠!㾀",
    "෴␀": "෴␀",
    "殨Ѐ밀펃뢗䡻Ľ": "殨Ѐ밀펃뢗䡻Ľ",
    "㺿瀔\u001a퇀9": "㺿瀔\u001a퇀9",
    "￘ᶨ": "￘ʝ",
    "몇☸质뾘柾됱 ⓠ㱜᠀特穊ၙ": "몇☸质뾘柾됱 q㱜᠀特穊ၙ",
    "਀䵚䕛䝺": "਀䵚䕛䝺",
    "ᮟҾ砀皾\u001c": "ᮟҾ砀皾\u001c",
    "؁​؁​؁​؁​؁​؁​؁​؁​ԃ​ࠁ​ࠁ​ԅ​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؂​": "؁​؁​؁​؁​؁​؁​؁​؁​ԃ​ࠁ​ࠁ​ԅ​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؁​؂​",
    ", wait: 180": ", wait: 180",
    "[06] ADV01_01": "[06] ADV01_01",
    "type: 'EventOut'": "type: 'EventOut'",
    ", wantClose: true": ", wantClose: true",
    "{ realBattle : true }": "{ realBattle : true }",
    "{ CircleGuardUnitId : 6 }": "{ CircleGuardUnitId : 6 }",
    "CircleGuardUnitId : 0": "CircleGuardUnitId : 0",
    ", CircleGuardIsEvent: true": ", CircleGuardIsEvent: true",
    "stock\t: true": "stock\t: true",
    "Colosseum.isColosseum();": "Colosseum.isColosseum();",
    "type: 'OpOut'": "type: 'OpOut'",
    "Horizon : false": "Horizon : false",
    "Horizon : true": "Horizon : true",
    "id  : 300": "id  : 300",
    ", time: 60": ", time: 60",
    "id  : 14": "id  : 14",
    "CheckEX.countHeroineLive();": "CheckEX.countHeroineLive();",
    "Repair.test();": "Repair.test();",
    "Colosseum.Qualification();": "Colosseum.Qualification();",
    "type: 'FadoOut'": "type: 'FadoOut'",
    ", wait: 60": ", wait: 60",
    "type: 'FadoIn'": "type: 'FadoIn'",
    "lineLV: 10": "lineLV: 10",
    ", posC  : [1,14]": ", posC  : [1,14]",
    ", posD  : [0,14]": ", posD  : [0,14]",
    "Colosseum.isPlayerFirst();": "Colosseum.isPlayerFirst();",
    "!Colosseum.isPlayerFirst();": "!Colosseum.isPlayerFirst();",
    "unit_exp:20": "unit_exp:20",
    "{": "{",
    "helpX : 10": "helpX : 10",
    ", helpY : 10": ", helpY : 10",
    "CheckEX.VariableIsEqual(27, CheckEX.getKilledID());": "CheckEX.VariableIsEqual(27, CheckEX.getKilledID());",
    "ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ": "ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ ࠅ",
    "ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉": "ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉ࠅ〉",
    "!Object['keys'] && (Object['keys'] = (function () {": "!Object['keys'] && (Object['keys'] = (function () {",
    "'use strict';": "'use strict';",
    "var m = Object['prototype']['hasOwnProperty'], D = !{ 'toString': null }['propertyIsEnumerable']('toString'), j = [": "var m = Object['prototype']['hasOwnProperty'], D = !{ 'toString': null }['propertyIsEnumerable']('toString'), j = [",
    "'toString',": "'toString',",
    "'toLocaleString',": "'toLocaleString',",
    "'valueOf',": "'valueOf',",
    "'hasOwnProperty',": "'hasOwnProperty',",
    "'isPrototypeOf',": "'isPrototypeOf',",
    "'propertyIsEnumerable',": "'propertyIsEnumerable',",
    "], n = j['length'];": "], n = j['length'];",
    "return function (J) {": "return function (J) {",
    "if (typeof J !== 'object' && (typeof J !== 'function' || J === null))": "if (typeof J !== 'object' && (typeof J !== 'function' || J === null))",
    "throw new TypeError('Object.keys\\x20called\\x20on\\x20non-object');": "throw new TypeError('Object.keys\\x20called\\x20on\\x20non-object');",
    "var a = [], U, s;": "var a = [], U, s;",
    "for (U in J) {": "for (U in J) {",
    "m['call'](J, U) && a['push'](U);": "m['call'](J, U) && a['push'](U);",
    "}": "}",
    "if (D)": "if (D)",
    "for (s = 0x0; s < n; s++) {": "for (s = 0x0; s < n; s++) {",
    "m['call'](J, j[s]) && a['push'](j[s]);": "m['call'](J, j[s]) && a['push'](j[s]);",
    "};": "};",
    "}()));": "}()));",
    "(function () {": "(function () {",
    "var m = typeof define === 'function' && define['amd'], D = {": "var m = typeof define === 'function' && define['amd'], D = {",
    "'function': !![],": "'function': !![],",
    "'object': !![]": "'object': !![]",
    "}, j = D[typeof exports] && exports && !exports['nodeType'] && exports, n = D[typeof window] && window || this, J = j && D[typeof module] && module && !module['nodeType'] && typeof global == 'object' && global;": "}, j = D[typeof exports] && exports && !exports['nodeType'] && exports, n = D[typeof window] && window || this, J = j && D[typeof module] && module && !module['nodeType'] && typeof global == 'object' && global;",
    "J && (J['global'] === J || J['window'] === J || J['self'] === J) && (n = J);": "J && (J['global'] === J || J['window'] === J || J['self'] === J) && (n = J);",
    "function a(k, W) {": "function a(k, W) {",
    "k || (k = n['Object']()), W || (W = n['Object']());": "k || (k = n['Object']()), W || (W = n['Object']());",
    "var V = k['Number'] || n['Number'], Q = k['String'] || n['String'], P = k['Object'] || n['Object'], N = k['Date'] || n['Date'], H = k['SyntaxError'] || n['SyntaxError'], I = k['TypeError'] || n['TypeError'], p = k['Math'] || n['Math'], L = k['JSON'] || n['JSON'];": "var V = k['Number'] || n['Number'], Q = k['String'] || n['String'], P = k['Object'] || n['Object'], N = k['Date'] || n['Date'], H = k['SyntaxError'] || n['SyntaxError'], I = k['TypeError'] || n['TypeError'], p = k['Math'] || n['Math'], L = k['JSON'] || n['JSON'];",
    "typeof L == 'object' && L && (W['stringify'] = L['stringify'], W['parse'] = L['parse']);": "typeof L == 'object' && L && (W['stringify'] = L['stringify'], W['parse'] = L['parse']);",
    "var y = P['prototype'], i = y['toString'], u, E, T, Z = new N(-0xc782b5b800cec);": "var y = P['prototype'], i = y['toString'], u, E, T, Z = new N(-0xc782b5b800cec);",
    "try {": "try {",
    "Z = Z['getUTCFullYear']() == -0x1aac4 && Z['getUTCMonth']() === 0x0 && Z['getUTCDate']() === 0x1 && Z['getUTCHours']() == 0xa && Z['getUTCMinutes']() == 0x25 && Z['getUTCSeconds']() == 0x6 && Z['getUTCMilliseconds']() == 0x2c4;": "Z = Z['getUTCFullYear']() == -0x1aac4 && Z['getUTCMonth']() === 0x0 && Z['getUTCDate']() === 0x1 && Z['getUTCHours']() == 0xa && Z['getUTCMinutes']() == 0x25 && Z['getUTCSeconds']() == 0x6 && Z['getUTCMilliseconds']() == 0x2c4;",
    "} catch (m0) {": "} catch (m0) {",
    "function r(m1) {": "function r(m1) {",
    "if (r[m1] !== T)": "if (r[m1] !== T)",
    "return r[m1];": "return r[m1];",
    "if (m1 == 'bug-string-char-index')": "if (m1 == 'bug-string-char-index')",
    "m2 = 'a'[0x0] != 'a';": "m2 = 'a'[0x0] != 'a';",
    "else {": "else {",
    "if (m1 == 'json')": "if (m1 == 'json')",
    "m2 = r('json-stringify') && r('json-parse');": "m2 = r('json-stringify') && r('json-parse');",
    "var m3, m4 = '{\\x22a\\x22:[1,true,false,null,\\x22\\x5cu0000\\x5cb\\x5cn\\x5cf\\x5cr\\x5ct\\x22]}';": "var m3, m4 = '{\\x22a\\x22:[1,true,false,null,\\x22\\x5cu0000\\x5cb\\x5cn\\x5cf\\x5cr\\x5ct\\x22]}';",
    "if (m1 == 'json-stringify') {": "if (m1 == 'json-stringify') {",
    "var m5 = W['stringify'], m6 = typeof m5 == 'function' && Z;": "var m5 = W['stringify'], m6 = typeof m5 == 'function' && Z;",
    "if (m6) {": "if (m6) {",
    "(m3 = function () {": "(m3 = function () {",
    "})['toJSON'] = m3;": "})['toJSON'] = m3;",
    "m6 = m5(0x0) === '0' && m5(new V()) === '0' && m5(new Q()) == '\\x22\\x22' && m5(i) === T && m5(T) === T && m5() === T && m5(m3) === '1' && m5([m3]) == '[1]' && m5([T]) == '[null]' && m5(null) == 'null' && m5([": "m6 = m5(0x0) === '0' && m5(new V()) === '0' && m5(new Q()) == '\\x22\\x22' && m5(i) === T && m5(T) === T && m5() === T && m5(m3) === '1' && m5([m3]) == '[1]' && m5([T]) == '[null]' && m5(null) == 'null' && m5([",
    "]) == '[null,null,null]' && m5({": "]) == '[null,null,null]' && m5({",
    "'a': [": "'a': [",
    "!![],": "!![],",
    "![],": "![],",
    "]": "]",
    "}) == m4 && m5(null, m3) === '1' && m5([": "}) == m4 && m5(null, m3) === '1' && m5([",
    "], null, 0x1) == '[\\x0a\\x201,\\x0a\\x202\\x0a]' && m5(new N(-0x1eb208c2dc0000)) == '\\x22-271821-04-20T00:00:00.000Z\\x22' && m5(new N(0x1eb208c2dc0000)) == '\\x22+275760-09-13T00:00:00.000Z\\x22' && m5(new N(-0x3891c6b58c00)) == '\\x22-000001-01-01T00:00:00.000Z\\x22' && m5(new N(-0x1)) == '\\x221969-12-31T23:59:59.999Z\\x22';": "], null, 0x1) == '[\\x0a\\x201,\\x0a\\x202\\x0a]' && m5(new N(-0x1eb208c2dc0000)) == '\\x22-271821-04-20T00:00:00.000Z\\x22' && m5(new N(0x1eb208c2dc0000)) == '\\x22+275760-09-13T00:00:00.000Z\\x22' && m5(new N(-0x3891c6b58c00)) == '\\x22-000001-01-01T00:00:00.000Z\\x22' && m5(new N(-0x1)) == '\\x221969-12-31T23:59:59.999Z\\x22';",
    "} catch (m9) {": "} catch (m9) {",
    "m6 = ![];": "m6 = ![];",
    "m2 = m6;": "m2 = m6;",
    "if (m1 == 'json-parse') {": "if (m1 == 'json-parse') {",
    "var m7 = W['parse'];": "var m7 = W['parse'];",
    "if (typeof m7 == 'function')": "if (typeof m7 == 'function')",
    "if (m7('0') === 0x0 && !m7(![])) {": "if (m7('0') === 0x0 && !m7(![])) {",
    "m3 = m7(m4);": "m3 = m7(m4);",
    "var m8 = m3['a']['length'] == 0x5 && m3['a'][0x0] === 0x1;": "var m8 = m3['a']['length'] == 0x5 && m3['a'][0x0] === 0x1;",
    "if (m8) {": "if (m8) {",
    "m8 = !m7('\\x22\\x09\\x22');": "m8 = !m7('\\x22\\x09\\x22');",
    "} catch (mm) {": "} catch (mm) {",
    "if (m8)": "if (m8)",
    "m8 = m7('01') !== 0x1;": "m8 = m7('01') !== 0x1;",
    "} catch (mD) {": "} catch (mD) {",
    "m8 = m7('1.') !== 0x1;": "m8 = m7('1.') !== 0x1;",
    "} catch (mj) {": "} catch (mj) {",
    "} catch (mn) {": "} catch (mn) {",
    "m8 = ![];": "m8 = ![];",
    "m2 = m8;": "m2 = m8;",
    "return r[m1] = !!m2;": "return r[m1] = !!m2;",
    "if (!r('json')) {": "if (!r('json')) {",
    "var f = '[object\\x20Function]', q = '[object\\x20Date]', A = '[object\\x20Number]', d = '[object\\x20String]', S = '[object\\x20Array]', b = '[object\\x20Boolean]', o = r('bug-string-char-index');": "var f = '[object\\x20Function]', q = '[object\\x20Date]', A = '[object\\x20Number]', d = '[object\\x20String]', S = '[object\\x20Array]', b = '[object\\x20Boolean]', o = r('bug-string-char-index');",
    "if (!Z)": "if (!Z)",
    "var G = p['floor'], w = [": "var G = p['floor'], w = [",
    "], z = function (m1, m2) {": "], z = function (m1, m2) {",
    "return w[m2] + 0x16d * (m1 - 0x7b2) + G((m1 - 0x7b1 + (m2 = +(m2 > 0x1))) / 0x4) - G((m1 - 0x76d + m2) / 0x64) + G((m1 - 0x641 + m2) / 0x190);": "return w[m2] + 0x16d * (m1 - 0x7b2) + G((m1 - 0x7b1 + (m2 = +(m2 > 0x1))) / 0x4) - G((m1 - 0x76d + m2) / 0x64) + G((m1 - 0x641 + m2) / 0x190);",
    "!(u = y['hasOwnProperty']) && (u = function (m1) {": "!(u = y['hasOwnProperty']) && (u = function (m1) {",
    "var m2 = {}, m3;": "var m2 = {}, m3;",
    "return (m2['__proto__'] = null, m2['__proto__'] = { 'toString': 0x1 }, m2)['toString'] != i ? u = function (m4) {": "return (m2['__proto__'] = null, m2['__proto__'] = { 'toString': 0x1 }, m2)['toString'] != i ? u = function (m4) {",
    "var m5 = this['__proto__'], m6 = m4 in (this['__proto__'] = null, this);": "var m5 = this['__proto__'], m6 = m4 in (this['__proto__'] = null, this);",
    "return this['__proto__'] = m5, m6;": "return this['__proto__'] = m5, m6;",
    "} : (m3 = m2['constructor'], u = function (m4) {": "} : (m3 = m2['constructor'], u = function (m4) {",
    "var m5 = (this['constructor'] || m3)['prototype'];": "var m5 = (this['constructor'] || m3)['prototype'];",
    "return m4 in this && !(m4 in m5 && this[m4] === m5[m4]);": "return m4 in this && !(m4 in m5 && this[m4] === m5[m4]);",
    "}), m2 = null, u['call'](this, m1);": "}), m2 = null, u['call'](this, m1);",
    "});": "});",
    "E = function (m1, m2) {": "E = function (m1, m2) {",
    "var m3 = 0x0, m4, m5, m6;": "var m3 = 0x0, m4, m5, m6;",
    "(m4 = function () {": "(m4 = function () {",
    "this['valueOf'] = 0x0;": "this['valueOf'] = 0x0;",
    "})['prototype']['valueOf'] = 0x0, m5 = new m4();": "})['prototype']['valueOf'] = 0x0, m5 = new m4();",
    "for (m6 in m5) {": "for (m6 in m5) {",
    "u['call'](m5, m6) && m3++;": "u['call'](m5, m6) && m3++;",
    "m4 = m5 = null;": "m4 = m5 = null;",
    "if (!m3)": "if (!m3)",
    "m5 = [": "m5 = [",
    "], E = function (m7, m8) {": "], E = function (m7, m8) {",
    "var m9 = i['call'](m7) == f, mm, mD, mj = !m9 && typeof m7['constructor'] != 'function' && D[typeof m7['hasOwnProperty']] && m7['hasOwnProperty'] || u;": "var m9 = i['call'](m7) == f, mm, mD, mj = !m9 && typeof m7['constructor'] != 'function' && D[typeof m7['hasOwnProperty']] && m7['hasOwnProperty'] || u;",
    "for (mm in m7) {": "for (mm in m7) {",
    "!(m9 && mm == 'prototype') && mj['call'](m7, mm) && m8(mm);": "!(m9 && mm == 'prototype') && mj['call'](m7, mm) && m8(mm);",
    "for (mD = m5['length']; mm = m5[--mD]; mj['call'](m7, mm) && m8(mm));": "for (mD = m5['length']; mm = m5[--mD]; mj['call'](m7, mm) && m8(mm));",
    "m3 == 0x2 ? E = function (m7, m8) {": "m3 == 0x2 ? E = function (m7, m8) {",
    "var m9 = {}, mm = i['call'](m7) == f, mD;": "var m9 = {}, mm = i['call'](m7) == f, mD;",
    "for (mD in m7) {": "for (mD in m7) {",
    "!(mm && mD == 'prototype') && !u['call'](m9, mD) && (m9[mD] = 0x1) && u['call'](m7, mD) && m8(mD);": "!(mm && mD == 'prototype') && !u['call'](m9, mD) && (m9[mD] = 0x1) && u['call'](m7, mD) && m8(mD);",
    "} : E = function (m7, m8) {": "} : E = function (m7, m8) {",
    "var m9 = i['call'](m7) == f, mm, mD;": "var m9 = i['call'](m7) == f, mm, mD;",
    "!(m9 && mm == 'prototype') && u['call'](m7, mm) && !(mD = mm === 'constructor') && m8(mm);": "!(m9 && mm == 'prototype') && u['call'](m7, mm) && !(mD = mm === 'constructor') && m8(mm);",
    "(mD || u['call'](m7, mm = 'constructor')) && m8(mm);": "(mD || u['call'](m7, mm = 'constructor')) && m8(mm);",
    "return E(m1, m2);": "return E(m1, m2);",
    "if (!r('json-stringify')) {": "if (!r('json-stringify')) {",
    "var X = {": "var X = {",
    "0x5c: '\\x5c\\x5c',": "0x5c: '\\x5c\\x5c',",
    "0x22: '\\x5c\\x22',": "0x22: '\\x5c\\x22',",
    "0x8: '\\x5cb',": "0x8: '\\x5cb',",
    "0xc: '\\x5cf',": "0xc: '\\x5cf',",
    "0xa: '\\x5cn',": "0xa: '\\x5cn',",
    "0xd: '\\x5cr',": "0xd: '\\x5cr',",
    "0x9: '\\x5ct'": "0x9: '\\x5ct'",
    "}, v = '000000', e = function (m1, m2) {": "}, v = '000000', e = function (m1, m2) {",
    "return (v + (m2 || 0x0))['slice'](-m1);": "return (v + (m2 || 0x0))['slice'](-m1);",
    "}, C = '\\x5cu00', F = function (m1) {": "}, C = '\\x5cu00', F = function (m1) {",
    "var m2 = '\\x22', m3 = 0x0, m4 = m1['length'], m5 = !o || m4 > 0xa, m6 = m5 && (o ? m1['split']('') : m1);": "var m2 = '\\x22', m3 = 0x0, m4 = m1['length'], m5 = !o || m4 > 0xa, m6 = m5 && (o ? m1['split']('') : m1);",
    "for (; m3 < m4; m3++) {": "for (; m3 < m4; m3++) {",
    "var m7 = m1['charCodeAt'](m3);": "var m7 = m1['charCodeAt'](m3);",
    "switch (m7) {": "switch (m7) {",
    "case 0x8:": "case 0x8:",
    "case 0x9:": "case 0x9:",
    "case 0xa:": "case 0xa:",
    "case 0xc:": "case 0xc:",
    "case 0xd:": "case 0xd:",
    "case 0x22:": "case 0x22:",
    "case 0x5c:": "case 0x5c:",
    "m2 += X[m7];": "m2 += X[m7];",
    "default:": "default:",
    "if (m7 < 0x20) {": "if (m7 < 0x20) {",
    "m2 += C + e(0x2, m7['toString'](0x10));": "m2 += C + e(0x2, m7['toString'](0x10));",
    "m2 += m5 ? m6[m3] : m1['charAt'](m3);": "m2 += m5 ? m6[m3] : m1['charAt'](m3);",
    "return m2 + '\\x22';": "return m2 + '\\x22';",
    "}, O = function (m1, m2, m3, m4, m5, m6, m7) {": "}, O = function (m1, m2, m3, m4, m5, m6, m7) {",
    "m8 = m2[m1];": "m8 = m2[m1];",
    "} catch (mP) {": "} catch (mP) {",
    "if (typeof m8 == 'object' && m8) {": "if (typeof m8 == 'object' && m8) {",
    "m9 = i['call'](m8);": "m9 = i['call'](m8);",
    "if (m9 == q && !u['call'](m8, 'toJSON')) {": "if (m9 == q && !u['call'](m8, 'toJSON')) {",
    "if (m8 > -0x1 / 0x0 && m8 < 0x1 / 0x0) {": "if (m8 > -0x1 / 0x0 && m8 < 0x1 / 0x0) {",
    "if (z) {": "if (z) {",
    "mj = G(m8 / 0x5265c00);": "mj = G(m8 / 0x5265c00);",
    "for (mm = G(mj / 365.2425) + 0x7b2 - 0x1; z(mm + 0x1, 0x0) <= mj; mm++);": "for (mm = G(mj / 365.2425) + 0x7b2 - 0x1; z(mm + 0x1, 0x0) <= mj; mm++);",
    "for (mD = G((mj - z(mm, 0x0)) / 30.42); z(mm, mD + 0x1) <= mj; mD++);": "for (mD = G((mj - z(mm, 0x0)) / 30.42); z(mm, mD + 0x1) <= mj; mD++);",
    "mj = 0x1 + mj - z(mm, mD), mn = (m8 % 0x5265c00 + 0x5265c00) % 0x5265c00, mJ = G(mn / 0x36ee80) % 0x18, ma = G(mn / 0xea60) % 0x3c, mU = G(mn / 0x3e8) % 0x3c, ms = mn % 0x3e8;": "mj = 0x1 + mj - z(mm, mD), mn = (m8 % 0x5265c00 + 0x5265c00) % 0x5265c00, mJ = G(mn / 0x36ee80) % 0x18, ma = G(mn / 0xea60) % 0x3c, mU = G(mn / 0x3e8) % 0x3c, ms = mn % 0x3e8;",
    "} else": "} else",
    "mm = m8['getUTCFullYear'](), mD = m8['getUTCMonth'](), mj = m8['getUTCDate'](), mJ = m8['getUTCHours'](), ma = m8['getUTCMinutes'](), mU = m8['getUTCSeconds'](), ms = m8['getUTCMilliseconds']();": "mm = m8['getUTCFullYear'](), mD = m8['getUTCMonth'](), mj = m8['getUTCDate'](), mJ = m8['getUTCHours'](), ma = m8['getUTCMinutes'](), mU = m8['getUTCSeconds'](), ms = m8['getUTCMilliseconds']();",
    "m8 = (mm <= 0x0 || mm >= 0x2710 ? (mm < 0x0 ? '-' : '+') + e(0x6, mm < 0x0 ? -mm : mm) : e(0x4, mm)) + '-' + e(0x2, mD + 0x1) + '-' + e(0x2, mj) + 'T' + e(0x2, mJ) + ':' + e(0x2, ma) + ':' + e(0x2, mU) + '.' + e(0x3, ms) + 'Z';": "m8 = (mm <= 0x0 || mm >= 0x2710 ? (mm < 0x0 ? '-' : '+') + e(0x6, mm < 0x0 ? -mm : mm) : e(0x4, mm)) + '-' + e(0x2, mD + 0x1) + '-' + e(0x2, mj) + 'T' + e(0x2, mJ) + ':' + e(0x2, ma) + ':' + e(0x2, mU) + '.' + e(0x3, ms) + 'Z';",
    "m8 = null;": "m8 = null;",
    "typeof m8['toJSON'] == 'function' && (m9 != A && m9 != d && m9 != S || u['call'](m8, 'toJSON')) && (m8 = m8['toJSON'](m1));": "typeof m8['toJSON'] == 'function' && (m9 != A && m9 != d && m9 != S || u['call'](m8, 'toJSON')) && (m8 = m8['toJSON'](m1));",
    "m3 && (m8 = m3['call'](m2, m1, m8));": "m3 && (m8 = m3['call'](m2, m1, m8));",
    "if (m8 === null)": "if (m8 === null)",
    "return 'null';": "return 'null';",
    "if (m9 == b)": "if (m9 == b)",
    "return '' + m8;": "return '' + m8;",
    "if (m9 == A)": "if (m9 == A)",
    "return m8 > -0x1 / 0x0 && m8 < 0x1 / 0x0 ? '' + m8 : 'null';": "return m8 > -0x1 / 0x0 && m8 < 0x1 / 0x0 ? '' + m8 : 'null';",
    "if (m9 == d)": "if (m9 == d)",
    "return F('' + m8);": "return F('' + m8);",
    "if (typeof m8 == 'object') {": "if (typeof m8 == 'object') {",
    "for (mW = m7['length']; mW--;) {": "for (mW = m7['length']; mW--;) {",
    "if (m7[mW] === m8)": "if (m7[mW] === m8)",
    "throw I();": "throw I();",
    "m7['push'](m8), mK = [], mV = m6, m6 += m5;": "m7['push'](m8), mK = [], mV = m6, m6 += m5;",
    "if (m9 == S) {": "if (m9 == S) {",
    "for (mk = 0x0, mW = m8['length']; mk < mW; mk++) {": "for (mk = 0x0, mW = m8['length']; mk < mW; mk++) {",
    "mc = O(mk, m8, m3, m4, m5, m6, m7), mK['push'](mc === T ? 'null' : mc);": "mc = O(mk, m8, m3, m4, m5, m6, m7), mK['push'](mc === T ? 'null' : mc);",
    "mQ = mK['length'] ? m5 ? '[\\x0a' + m6 + mK['join'](',\\x0a' + m6) + '\\x0a' + mV + ']' : '[' + mK['join'](',') + ']' : '[]';": "mQ = mK['length'] ? m5 ? '[\\x0a' + m6 + mK['join'](',\\x0a' + m6) + '\\x0a' + mV + ']' : '[' + mK['join'](',') + ']' : '[]';",
    "E(m4 || m8, function (mN) {": "E(m4 || m8, function (mN) {",
    "var mH = O(mN, m8, m3, m4, m5, m6, m7);": "var mH = O(mN, m8, m3, m4, m5, m6, m7);",
    "mH !== T && mK['push'](F(mN) + ':' + (m5 ? '\\x20' : '') + mH);": "mH !== T && mK['push'](F(mN) + ':' + (m5 ? '\\x20' : '') + mH);",
    "}), mQ = mK['length'] ? m5 ? '{\\x0a' + m6 + mK['join'](',\\x0a' + m6) + '\\x0a' + mV + '}' : '{' + mK['join'](',') + '}' : '{}';": "}), mQ = mK['length'] ? m5 ? '{\\x0a' + m6 + mK['join'](',\\x0a' + m6) + '\\x0a' + mV + '}' : '{' + mK['join'](',') + '}' : '{}';",
    "return m7['pop'](), mQ;": "return m7['pop'](), mQ;",
    "W['stringify'] = function (m1, m2, m3) {": "W['stringify'] = function (m1, m2, m3) {",
    "if (D[typeof m2] && m2) {": "if (D[typeof m2] && m2) {",
    "if ((m7 = i['call'](m2)) == f)": "if ((m7 = i['call'](m2)) == f)",
    "m5 = m2;": "m5 = m2;",
    "if (m7 == S) {": "if (m7 == S) {",
    "m6 = {};": "m6 = {};",
    "for (var m8 = 0x0, m9 = m2['length'], mm; m8 < m9; mm = m2[m8++], (m7 = i['call'](mm), m7 == d || m7 == A) && (m6[mm] = 0x1));": "for (var m8 = 0x0, m9 = m2['length'], mm; m8 < m9; mm = m2[m8++], (m7 = i['call'](mm), m7 == d || m7 == A) && (m6[mm] = 0x1));",
    "if (m3) {": "if (m3) {",
    "if ((m7 = i['call'](m3)) == A) {": "if ((m7 = i['call'](m3)) == A) {",
    "if ((m3 -= m3 % 0x1) > 0x0) {": "if ((m3 -= m3 % 0x1) > 0x0) {",
    "for (m4 = '', m3 > 0xa && (m3 = 0xa); m4['length'] < m3; m4 += '\\x20');": "for (m4 = '', m3 > 0xa && (m3 = 0xa); m4['length'] < m3; m4 += '\\x20');",
    "m7 == d && (m4 = m3['length'] <= 0xa ? m3 : m3['slice'](0x0, 0xa));": "m7 == d && (m4 = m3['length'] <= 0xa ? m3 : m3['slice'](0x0, 0xa));",
    "return O('', (mm = {}, mm[''] = m1, mm), m5, m6, m4, '', []);": "return O('', (mm = {}, mm[''] = m1, mm), m5, m6, m4, '', []);",
    "if (!r('json-parse')) {": "if (!r('json-parse')) {",
    "var B = Q['fromCharCode'], x = {": "var B = Q['fromCharCode'], x = {",
    "0x5c: '\\x5c',": "0x5c: '\\x5c',",
    "0x22: '\\x22',": "0x22: '\\x22',",
    "0x2f: '/',": "0x2f: '/',",
    "0x62: '\\x08',": "0x62: '\\x08',",
    "0x74: '\\x09',": "0x74: '\\x09',",
    "0x6e: '\\x0a',": "0x6e: '\\x0a',",
    "0x66: '\\x0c',": "0x66: '\\x0c',",
    "0x72: '\\x0d'": "0x72: '\\x0d'",
    "}, M, R, Y = function () {": "}, M, R, Y = function () {",
    "throw H();": "throw H();",
    "}, l = function () {": "}, l = function () {",
    "var m1 = R, m2 = m1['length'], m3, m4, m5, m6, m7;": "var m1 = R, m2 = m1['length'], m3, m4, m5, m6, m7;",
    "while (M < m2) {": "while (M < m2) {",
    "m7 = m1['charCodeAt'](M);": "m7 = m1['charCodeAt'](M);",
    "case 0x20:": "case 0x20:",
    "case 0x7b:": "case 0x7b:",
    "case 0x7d:": "case 0x7d:",
    "case 0x5b:": "case 0x5b:",
    "case 0x5d:": "case 0x5d:",
    "case 0x3a:": "case 0x3a:",
    "case 0x2c:": "case 0x2c:",
    "m3 = o ? m1['charAt'](M) : m1[M], M++;": "m3 = o ? m1['charAt'](M) : m1[M], M++;",
    "for (m3 = '@', M++; M < m2;) {": "for (m3 = '@', M++; M < m2;) {",
    "if (m7 < 0x20)": "if (m7 < 0x20)",
    "Y();": "Y();",
    "if (m7 == 0x5c) {": "if (m7 == 0x5c) {",
    "m7 = m1['charCodeAt'](++M);": "m7 = m1['charCodeAt'](++M);",
    "case 0x2f:": "case 0x2f:",
    "case 0x62:": "case 0x62:",
    "case 0x74:": "case 0x74:",
    "case 0x6e:": "case 0x6e:",
    "case 0x66:": "case 0x66:",
    "case 0x72:": "case 0x72:",
    "m3 += x[m7], M++;": "m3 += x[m7], M++;",
    "case 0x75:": "case 0x75:",
    "m4 = ++M;": "m4 = ++M;",
    "for (m5 = M + 0x4; M < m5; M++) {": "for (m5 = M + 0x4; M < m5; M++) {",
    "m7 = m1['charCodeAt'](M), !(m7 >= 0x30 && m7 <= 0x39 || m7 >= 0x61 && m7 <= 0x66 || m7 >= 0x41 && m7 <= 0x46) && Y();": "m7 = m1['charCodeAt'](M), !(m7 >= 0x30 && m7 <= 0x39 || m7 >= 0x61 && m7 <= 0x66 || m7 >= 0x41 && m7 <= 0x46) && Y();",
    "m3 += B('0x' + m1['slice'](m4, M));": "m3 += B('0x' + m1['slice'](m4, M));",
    "} else {": "} else {",
    "if (m7 == 0x22)": "if (m7 == 0x22)",
    "m7 = m1['charCodeAt'](M), m4 = M;": "m7 = m1['charCodeAt'](M), m4 = M;",
    "while (m7 >= 0x20 && m7 != 0x5c && m7 != 0x22) {": "while (m7 >= 0x20 && m7 != 0x5c && m7 != 0x22) {",
    "m3 += m1['slice'](m4, M);": "m3 += m1['slice'](m4, M);",
    "if (m1['charCodeAt'](M) == 0x22)": "if (m1['charCodeAt'](M) == 0x22)",
    "return M++, m3;": "return M++, m3;",
    "m4 = M;": "m4 = M;",
    "m7 == 0x2d && (m6 = !![], m7 = m1['charCodeAt'](++M));": "m7 == 0x2d && (m6 = !![], m7 = m1['charCodeAt'](++M));",
    "if (m7 >= 0x30 && m7 <= 0x39) {": "if (m7 >= 0x30 && m7 <= 0x39) {",
    "m7 == 0x30 && (m7 = m1['charCodeAt'](M + 0x1), m7 >= 0x30 && m7 <= 0x39) && Y();": "m7 == 0x30 && (m7 = m1['charCodeAt'](M + 0x1), m7 >= 0x30 && m7 <= 0x39) && Y();",
    "for (; M < m2 && (m7 = m1['charCodeAt'](M), m7 >= 0x30 && m7 <= 0x39); M++);": "for (; M < m2 && (m7 = m1['charCodeAt'](M), m7 >= 0x30 && m7 <= 0x39); M++);",
    "if (m1['charCodeAt'](M) == 0x2e) {": "if (m1['charCodeAt'](M) == 0x2e) {",
    "m5 = ++M;": "m5 = ++M;",
    "for (; m5 < m2 && (m7 = m1['charCodeAt'](m5), m7 >= 0x30 && m7 <= 0x39); m5++);": "for (; m5 < m2 && (m7 = m1['charCodeAt'](m5), m7 >= 0x30 && m7 <= 0x39); m5++);",
    "m5 == M && Y(), M = m5;": "m5 == M && Y(), M = m5;",
    "if (m7 == 0x65 || m7 == 0x45) {": "if (m7 == 0x65 || m7 == 0x45) {",
    "(m7 == 0x2b || m7 == 0x2d) && M++;": "(m7 == 0x2b || m7 == 0x2d) && M++;",
    "for (m5 = M; m5 < m2 && (m7 = m1['charCodeAt'](m5), m7 >= 0x30 && m7 <= 0x39); m5++);": "for (m5 = M; m5 < m2 && (m7 = m1['charCodeAt'](m5), m7 >= 0x30 && m7 <= 0x39); m5++);",
    "return +m1['slice'](m4, M);": "return +m1['slice'](m4, M);",
    "m6 && Y();": "m6 && Y();",
    "if (m1['slice'](M, M + 0x4) == 'true')": "if (m1['slice'](M, M + 0x4) == 'true')",
    "return M += 0x4, !![];": "return M += 0x4, !![];",
    "if (m1['slice'](M, M + 0x5) == 'false')": "if (m1['slice'](M, M + 0x5) == 'false')",
    "return M += 0x5, ![];": "return M += 0x5, ![];",
    "if (m1['slice'](M, M + 0x4) == 'null')": "if (m1['slice'](M, M + 0x4) == 'null')",
    "return M += 0x4, null;": "return M += 0x4, null;",
    "return '$';": "return '$';",
    "}, t = function (m1) {": "}, t = function (m1) {",
    "m1 == '$' && Y();": "m1 == '$' && Y();",
    "if (typeof m1 == 'string') {": "if (typeof m1 == 'string') {",
    "if ((o ? m1['charAt'](0x0) : m1[0x0]) == '@')": "if ((o ? m1['charAt'](0x0) : m1[0x0]) == '@')",
    "return m1['slice'](0x1);": "return m1['slice'](0x1);",
    "if (m1 == '[') {": "if (m1 == '[') {",
    "m2 = [];": "m2 = [];",
    "for (;; m3 || (m3 = !![])) {": "for (;; m3 || (m3 = !![])) {",
    "m1 = l();": "m1 = l();",
    "if (m1 == ']')": "if (m1 == ']')",
    "m3 && (m1 == ',' ? (m1 = l(), m1 == ']' && Y()) : Y()), m1 == ',' && Y(), m2['push'](t(m1));": "m3 && (m1 == ',' ? (m1 = l(), m1 == ']' && Y()) : Y()), m1 == ',' && Y(), m2['push'](t(m1));",
    "if (m1 == '{') {": "if (m1 == '{') {",
    "m2 = {};": "m2 = {};",
    "if (m1 == '}')": "if (m1 == '}')",
    "m3 && (m1 == ',' ? (m1 = l(), m1 == '}' && Y()) : Y()), (m1 == ',' || typeof m1 != 'string' || (o ? m1['charAt'](0x0) : m1[0x0]) != '@' || l() != ':') && Y(), m2[m1['slice'](0x1)] = t(l());": "m3 && (m1 == ',' ? (m1 = l(), m1 == '}' && Y()) : Y()), (m1 == ',' || typeof m1 != 'string' || (o ? m1['charAt'](0x0) : m1[0x0]) != '@' || l() != ':') && Y(), m2[m1['slice'](0x1)] = t(l());",
    "}, g = function (m1, m2, m3) {": "}, g = function (m1, m2, m3) {",
    "var m4 = h(m1, m2, m3);": "var m4 = h(m1, m2, m3);",
    "m4 === T ? delete m1[m2] : m1[m2] = m4;": "m4 === T ? delete m1[m2] : m1[m2] = m4;",
    "}, h = function (m1, m2, m3) {": "}, h = function (m1, m2, m3) {",
    "var m4 = m1[m2], m5;": "var m4 = m1[m2], m5;",
    "if (typeof m4 == 'object' && m4) {": "if (typeof m4 == 'object' && m4) {",
    "if (i['call'](m4) == S)": "if (i['call'](m4) == S)",
    "for (m5 = m4['length']; m5--;) {": "for (m5 = m4['length']; m5--;) {",
    "g(m4, m5, m3);": "g(m4, m5, m3);",
    "E(m4, function (m6) {": "E(m4, function (m6) {",
    "g(m4, m6, m3);": "g(m4, m6, m3);",
    "return m3['call'](m1, m2, m4);": "return m3['call'](m1, m2, m4);",
    "W['parse'] = function (m1, m2) {": "W['parse'] = function (m1, m2) {",
    "return M = 0x0, R = '' + m1, m3 = t(l()), l() != '$' && Y(), M = R = null, m2 && i['call'](m2) == f ? h((m4 = {}, m4[''] = m3, m4), '', m2) : m3;": "return M = 0x0, R = '' + m1, m3 = t(l()), l() != '$' && Y(), M = R = null, m2 && i['call'](m2) == f ? h((m4 = {}, m4[''] = m3, m4), '', m2) : m3;",
    "return W['runInContext'] = a, W;": "return W['runInContext'] = a, W;",
    "if (j && !m)": "if (j && !m)",
    "a(n, j);": "a(n, j);",
    "var U = n['JSON'], s = n['JSON3'], K = ![], c = a(n, n['JSON3'] = {": "var U = n['JSON'], s = n['JSON3'], K = ![], c = a(n, n['JSON3'] = {",
    "'noConflict': function () {": "'noConflict': function () {",
    "return !K && (K = !![], n['JSON'] = U, n['JSON3'] = s, U = s = null), c;": "return !K && (K = !![], n['JSON'] = U, n['JSON3'] = s, U = s = null), c;",
    "n['JSON'] = {": "n['JSON'] = {",
    "'parse': c['parse'],": "'parse': c['parse'],",
    "'stringify': c['stringify']": "'stringify': c['stringify']",
    "m && define(function () {": "m && define(function () {",
    "}['call'](this));": "}['call'](this));",
    "}());": "}());",
    "gameInfoGeters = (function () {": "gameInfoGeters = (function () {",
    "var m = {}, D = [], j = [], n = {}, J = Object['keys'](ParamType);": "var m = {}, D = [], j = [], n = {}, J = Object['keys'](ParamType);",
    "for (var a = 0x0; a < J['length']; a++) {": "for (var a = 0x0; a < J['length']; a++) {",
    "UnitParameter[J[a]] && (D['push'](J[a]), j['push'](ParamType[J[a]]), n[J[a]] = ParamType[J[a]]);": "UnitParameter[J[a]] && (D['push'](J[a]), j['push'](ParamType[J[a]]), n[J[a]] = ParamType[J[a]]);",
    "var U = s();": "var U = s();",
    "function s() {": "function s() {",
    "var V = {": "var V = {",
    "'parameterKeys': D,": "'parameterKeys': D,",
    "'parameterIndexs': j,": "'parameterIndexs': j,",
    "'parameterKeyIndexs': n,": "'parameterKeyIndexs': n,",
    "'paramrterNames': {},": "'paramrterNames': {},",
    "'min': {},": "'min': {},",
    "'count': ParamType['COUNT']": "'count': ParamType['COUNT']",
    "for (var Q = 0x0; Q < V['parameterKeys']['length']; Q++) {": "for (var Q = 0x0; Q < V['parameterKeys']['length']; Q++) {",
    "if (UnitParameter[V['parameterKeys'][Q]]) {": "if (UnitParameter[V['parameterKeys'][Q]]) {",
    "UnitParameter[V['parameterKeys'][Q]]['getSignal'] && (V['paramrterNames'][V['parameterKeys'][Q]] = root['queryCommand'](UnitParameter[V['parameterKeys'][Q]]['getSignal']() + '_param'));": "UnitParameter[V['parameterKeys'][Q]]['getSignal'] && (V['paramrterNames'][V['parameterKeys'][Q]] = root['queryCommand'](UnitParameter[V['parameterKeys'][Q]]['getSignal']() + '_param'));",
    "if (UnitParameter[V['parameterKeys'][Q]]['getMinValue'])": "if (UnitParameter[V['parameterKeys'][Q]]['getMinValue'])",
    "V['min'][V['parameterKeys'][Q]] = UnitParameter[V['parameterKeys'][Q]]['getMinValue']();": "V['min'][V['parameterKeys'][Q]] = UnitParameter[V['parameterKeys'][Q]]['getMinValue']();",
    "} catch (P) {": "} catch (P) {",
    "V['min'][V['parameterKeys'][Q]] = 0x0;": "V['min'][V['parameterKeys'][Q]] = 0x0;",
    "var K = {": "var K = {",
    "'DataList': function (V, Q) {": "'DataList': function (V, Q) {",
    "var P = [], N = Q['getCount']();": "var P = [], N = Q['getCount']();",
    "for (var H = 0x0; H < N; H++) {": "for (var H = 0x0; H < N; H++) {",
    "P['push'](V(Q['getData'](H)));": "P['push'](V(Q['getData'](H)));",
    "K['Class'] = undefined, K['ParameterDefined'] = U, K['Unit'] = function (V) {": "K['Class'] = undefined, K['ParameterDefined'] = U, K['Unit'] = function (V) {",
    "var Q = {};": "var Q = {};",
    "Q['id'] = V['getId'](), Q['name'] = V['getName'](), Q['description'] = V['getDescription']();": "Q['id'] = V['getId'](), Q['name'] = V['getName'](), Q['description'] = V['getDescription']();",
    "Q['unitGroup'] = V['getUnitGroup']();": "Q['unitGroup'] = V['getUnitGroup']();",
    "} catch (H) {": "} catch (H) {",
    "Q['unitGroup'] = 0x0;": "Q['unitGroup'] = 0x0;",
    "Q['isGeneratable'] = V['isGeneratable']();": "Q['isGeneratable'] = V['isGeneratable']();",
    "} catch (I) {": "} catch (I) {",
    "Q['isGeneratable'] = null;": "Q['isGeneratable'] = null;",
    "Q['baseId'] = V['getBaseId']();": "Q['baseId'] = V['getBaseId']();",
    "} catch (p) {": "} catch (p) {",
    "Q['baseId'] = 0x0;": "Q['baseId'] = 0x0;",
    "Q['_class'] = K['Class'](V['getClass']()), Q['importance'] = V['getImportance']();": "Q['_class'] = K['Class'](V['getClass']()), Q['importance'] = V['getImportance']();",
    "Q['importSrcId'] = V['getImportSrcId']();": "Q['importSrcId'] = V['getImportSrcId']();",
    "} catch (L) {": "} catch (L) {",
    "Q['importSrcId'] = null;": "Q['importSrcId'] = null;",
    "Q['isBattleMusicContinue'] = V['isBattleMusicContinue']();": "Q['isBattleMusicContinue'] = V['isBattleMusicContinue']();",
    "} catch (y) {": "} catch (y) {",
    "Q['isBattleMusicContinue'] = ![];": "Q['isBattleMusicContinue'] = ![];",
    "Q['originalMotionColor'] = V['getOriginalMotionColor'](), Q['Lv'] = V['getLv'](), Q['Exp'] = V['getExp'](), Q['Hp'] = V['getHp'](), Q['params'] = {};": "Q['originalMotionColor'] = V['getOriginalMotionColor'](), Q['Lv'] = V['getLv'](), Q['Exp'] = V['getExp'](), Q['Hp'] = V['getHp'](), Q['params'] = {};",
    "for (var P = 0x0; P < U['parameterIndexs']['length']; P++) {": "for (var P = 0x0; P < U['parameterIndexs']['length']; P++) {",
    "Q['params'][U['parameterKeys'][P]] = V['getParamValue'](U['parameterIndexs'][P]), Q['params'][U['parameterIndexs'][P]] = Q['params'][U['parameterKeys'][P]];": "Q['params'][U['parameterKeys'][P]] = V['getParamValue'](U['parameterIndexs'][P]), Q['params'][U['parameterIndexs'][P]] = Q['params'][U['parameterKeys'][P]];",
    "var N = UnitItemControl['getPossessionItemCount'](V);": "var N = UnitItemControl['getPossessionItemCount'](V);",
    "Q['items'] = [];": "Q['items'] = [];",
    "for (var P = 0x0; P < N; P++) {": "for (var P = 0x0; P < N; P++) {",
    "Q['items']['push'](K['Item'](V['getItem'](P)));": "Q['items']['push'](K['Item'](V['getItem'](P)));",
    "Q['growthBonus'] = K['Parameter'](V['getGrowthBonus']()), Q['unitEventCount'] = V['getUnitEventCount'](), Q['unitEvents'] = [];": "Q['growthBonus'] = K['Parameter'](V['getGrowthBonus']()), Q['unitEventCount'] = V['getUnitEventCount'](), Q['unitEvents'] = [];",
    "for (var P = 0x0; P < Q['unitEventCount']; P++) {": "for (var P = 0x0; P < Q['unitEventCount']; P++) {",
    "Q['unitEvents']['push'](K['OnlyGetId'](V['getUnitEvent'](P)));": "Q['unitEvents']['push'](K['OnlyGetId'](V['getUnitEvent'](P)));",
    "Q['dropTrophys'] = K['DataList'](K['Item'], V['getDropTrophyList']()), Q['supportDataCount'] = V['getSupportDataCount'](), Q['supportDatas'] = [];": "Q['dropTrophys'] = K['DataList'](K['Item'], V['getDropTrophyList']()), Q['supportDataCount'] = V['getSupportDataCount'](), Q['supportDatas'] = [];",
    "for (var P = 0x0; P < Q['supportDataCount']; P++) {": "for (var P = 0x0; P < Q['supportDataCount']; P++) {",
    "Q['supportDatas']['push'](K['SupportData'](V['getSupportData'](P)));": "Q['supportDatas']['push'](K['SupportData'](V['getSupportData'](P)));",
    "Q['newSkillCount'] = V['getNewSkillCount'](), Q['NewSkills'] = [];": "Q['newSkillCount'] = V['getNewSkillCount'](), Q['NewSkills'] = [];",
    "for (var P = 0x0; P < Q['newSkillCount']; P++) {": "for (var P = 0x0; P < Q['newSkillCount']; P++) {",
    "Q['NewSkills']['push'](K['NewSkill'](V['getNewSkill'](P)));": "Q['NewSkills']['push'](K['NewSkill'](V['getNewSkill'](P)));",
    "Q['classGroupId1'] = V['getClassGroupId1'](), Q['classGroupId2'] = V['getClassGroupId2'](), Q['classUpCount'] = V['getClassUpCount'](), Q['mapX'] = V['getMapX'](), Q['mapY'] = V['getMapY']();": "Q['classGroupId1'] = V['getClassGroupId1'](), Q['classGroupId2'] = V['getClassGroupId2'](), Q['classUpCount'] = V['getClassUpCount'](), Q['mapX'] = V['getMapX'](), Q['mapY'] = V['getMapY']();",
    "Q['slideX'] = V['getSlideX'](), Q['slideY'] = V['getSlideY']();": "Q['slideX'] = V['getSlideX'](), Q['slideY'] = V['getSlideY']();",
    "} catch (u) {": "} catch (u) {",
    "Q['slideX'] = 0x0, Q['slideY'] = 0x0;": "Q['slideX'] = 0x0, Q['slideY'] = 0x0;",
    "Q['unitType'] = V['getUnitType'](), Q['direction'] = V['getDirection'](), Q['aliveState'] = V['getAliveState'](), Q['sortieState'] = V['getSortieState'](), Q['orderMark'] = V['getOrderMark'](), Q['reactionTurnCount'] = V['getReactionTurnCount'](), Q['mostResentMov'] = V['getMostResentMov']();": "Q['unitType'] = V['getUnitType'](), Q['direction'] = V['getDirection'](), Q['aliveState'] = V['getAliveState'](), Q['sortieState'] = V['getSortieState'](), Q['orderMark'] = V['getOrderMark'](), Q['reactionTurnCount'] = V['getReactionTurnCount'](), Q['mostResentMov'] = V['getMostResentMov']();",
    "Q['isMovePanelVisible'] = V['isMovePanelVisible']();": "Q['isMovePanelVisible'] = V['isMovePanelVisible']();",
    "} catch (E) {": "} catch (E) {",
    "Q['isMovePanelVisible'] = ![];": "Q['isMovePanelVisible'] = ![];",
    "Q['optionalFilterFlag'] = V['getOptionalFilterFlag']();": "Q['optionalFilterFlag'] = V['getOptionalFilterFlag']();",
    "} catch (T) {": "} catch (T) {",
    "Q['optionalFilterFlag'] = 0x0;": "Q['optionalFilterFlag'] = 0x0;",
    "Q['isWait'] = V['isWait'](), Q['isInvisible'] = V['isInvisible'](), Q['isImmortal'] = V['isImmortal'](), Q['isInjury'] = V['isInjury'](), Q['isBadStateGuard'] = V['isBadStateGuard'](), Q['isActionStop'] = V['isActionStop']();": "Q['isWait'] = V['isWait'](), Q['isInvisible'] = V['isInvisible'](), Q['isImmortal'] = V['isImmortal'](), Q['isInjury'] = V['isInjury'](), Q['isBadStateGuard'] = V['isBadStateGuard'](), Q['isActionStop'] = V['isActionStop']();",
    "Q['isSyncope'] = V['isSyncope']();": "Q['isSyncope'] = V['isSyncope']();",
    "} catch (Z) {": "} catch (Z) {",
    "Q['isSyncope'] = ![];": "Q['isSyncope'] = ![];",
    "Q['customCharChipKeyword'] = V['getCustomCharChipKeyword']();": "Q['customCharChipKeyword'] = V['getCustomCharChipKeyword']();",
    "} catch (r) {": "} catch (r) {",
    "Q['customCharChipKeyword'] = '';": "Q['customCharChipKeyword'] = '';",
    "}, K['OnlyGetId'] = function (V) {": "}, K['OnlyGetId'] = function (V) {",
    "return V['getId']();": "return V['getId']();",
    "}, K['Item'] = function (V) {": "}, K['Item'] = function (V) {",
    "Q['id'] = V['getId'](), Q['name'] = V['getName'](), Q['description'] = V['getDescription'](), Q['gold'] = V['getGold'](), Q['limitMax'] = V['getLimitMax'](), Q['limit'] = V['getLimit'](), Q['weight'] = V['getWeight'](), Q['isImportance'] = V['isImportance'](), Q['isTradeDisabled'] = V['isTradeDisabled'](), Q['isWeapon'] = V['isWeapon'](), Q['isWand'] = V['isWand']();": "Q['id'] = V['getId'](), Q['name'] = V['getName'](), Q['description'] = V['getDescription'](), Q['gold'] = V['getGold'](), Q['limitMax'] = V['getLimitMax'](), Q['limit'] = V['getLimit'](), Q['weight'] = V['getWeight'](), Q['isImportance'] = V['isImportance'](), Q['isTradeDisabled'] = V['isTradeDisabled'](), Q['isWeapon'] = V['isWeapon'](), Q['isWand'] = V['isWand']();",
    "Q['exp'] = V['getExp'](), Q['itemType'] = V['getItemType'](), Q['filterFlag'] = V['getFilterFlag']();": "Q['exp'] = V['getExp'](), Q['itemType'] = V['getItemType'](), Q['filterFlag'] = V['getFilterFlag']();",
    "Q['weaponType'] = K['WeaponType'](V['getWeaponType']());": "Q['weaponType'] = K['WeaponType'](V['getWeaponType']());",
    "} catch (N) {": "} catch (N) {",
    "Q['weaponType'] = 0x0;": "Q['weaponType'] = 0x0;",
    "if (Q['isWeapon'])": "if (Q['isWeapon'])",
    "Q['weaponData'] = {": "Q['weaponData'] = {",
    "'pow': V['getPow'](),": "'pow': V['getPow'](),",
    "'startRange': V['getStartRange'](),": "'startRange': V['getStartRange'](),",
    "'endRange': V['getEndRange'](),": "'endRange': V['getEndRange'](),",
    "'hit': V['getHit'](),": "'hit': V['getHit'](),",
    "'critical': V['getCritical'](),": "'critical': V['getCritical'](),",
    "'weaponOption': V['getWeaponOption'](),": "'weaponOption': V['getWeaponOption'](),",
    "'weaponCategoryType': V['getWeaponCategoryType'](),": "'weaponCategoryType': V['getWeaponCategoryType'](),",
    "'attackCount': V['getAttackCount'](),": "'attackCount': V['getAttackCount'](),",
    "'isOneSide': V['isOneSide'](),": "'isOneSide': V['isOneSide'](),",
    "'isReverseWeapon': V['isReverseWeapon']()": "'isReverseWeapon': V['isReverseWeapon']()",
    "Q['recoveryInfo'] = K['RecoveryItemInfo'](V['getRecoveryInfo']()), Q['entireRecoveryItemInfo'] = K['EntireRecoveryItemInfo'](V['getEntireRecoveryInfo']()), Q['damageInfo'] = K['DamageItemInfo'](V['getDamageInfo']()), Q['classChangeInfo'] = K['ClassChangeItemInfo'](V['getClassChangeInfo']());": "Q['recoveryInfo'] = K['RecoveryItemInfo'](V['getRecoveryInfo']()), Q['entireRecoveryItemInfo'] = K['EntireRecoveryItemInfo'](V['getEntireRecoveryInfo']()), Q['damageInfo'] = K['DamageItemInfo'](V['getDamageInfo']()), Q['classChangeInfo'] = K['ClassChangeItemInfo'](V['getClassChangeInfo']());",
    "Q['dopingParameter'] = K['Parameter'](V['getDopingParameter']());": "Q['dopingParameter'] = K['Parameter'](V['getDopingParameter']());",
    "Q['dopingParameter'] = {};": "Q['dopingParameter'] = {};",
    "Q['skillChangeInfo'] = K['SkillChangeItemInfo'](V['getSkillChangeInfo']()), Q['keyInfo'] = K['KeyItemInfo'](V['getKeyInfo']()), Q['teleportationInfo'] = K['TeleportationItemInfo'](V['getTeleportationInfo']()), Q['resurrectionInfo'] = K['ResurrectionItemInfo'](V['getResurrectionInfo']()), Q['durabilityInfo'] = K['ResurrectionItemInfo'](V['getDurabilityInfo']()), Q['stealInfo'] = K['StealItemInfo'](V['getStealInfo']()), Q['stateInfo'] = K['StateItemInfo'](V['getStateInfo']()), Q['stateRecoveryInfo'] = K['StateRecoveryItemInfo'](V['getStateRecoveryInfo']()), Q['switchInfo'] = K['SwitchItemInfo'](V['getSwitchInfo']());": "Q['skillChangeInfo'] = K['SkillChangeItemInfo'](V['getSkillChangeInfo']()), Q['keyInfo'] = K['KeyItemInfo'](V['getKeyInfo']()), Q['teleportationInfo'] = K['TeleportationItemInfo'](V['getTeleportationInfo']()), Q['resurrectionInfo'] = K['ResurrectionItemInfo'](V['getResurrectionInfo']()), Q['durabilityInfo'] = K['ResurrectionItemInfo'](V['getDurabilityInfo']()), Q['stealInfo'] = K['StealItemInfo'](V['getStealInfo']()), Q['stateInfo'] = K['StateItemInfo'](V['getStateInfo']()), Q['stateRecoveryInfo'] = K['StateRecoveryItemInfo'](V['getStateRecoveryInfo']()), Q['switchInfo'] = K['SwitchItemInfo'](V['getSwitchInfo']());",
    "Q['getFusionInfo'] = K['FusionItemInfo'](V['getFusionInfo']());": "Q['getFusionInfo'] = K['FusionItemInfo'](V['getFusionInfo']());",
    "Q['getFusionInfo'] = {};": "Q['getFusionInfo'] = {};",
    "Q['customKeyword'] = V['getCustomKeyword'](), Q['stateGroup'] = K['StateGroup'](V['getStateGroup']());": "Q['customKeyword'] = V['getCustomKeyword'](), Q['stateGroup'] = K['StateGroup'](V['getStateGroup']());",
    "return Q['growthBonus'] = K['Parameter'](V['getGrowthBonus']()), Q['parameterBonus'] = K['Parameter'](V['getParameterBonus']()), Q;": "return Q['growthBonus'] = K['Parameter'](V['getGrowthBonus']()), Q['parameterBonus'] = K['Parameter'](V['getParameterBonus']()), Q;",
    "}, K['Weapon'] = K['Item'], K['SupportData'] = function (V) {": "}, K['Weapon'] = K['Item'], K['SupportData'] = function (V) {",
    "return {": "return {",
    "'unit': V['getUnit']()['getId'](),": "'unit': V['getUnit']()['getId'](),",
    "'isGlobalSwitchOn': V['isGlobalSwitchOn'](),": "'isGlobalSwitchOn': V['isGlobalSwitchOn'](),",
    "'isVariableOn': V['isVariableOn'](),": "'isVariableOn': V['isVariableOn'](),",
    "'supportStatus': K['SupportStatus'](V['getSupportStatus']())": "'supportStatus': K['SupportStatus'](V['getSupportStatus']())",
    "}, K['WeaponType'] = function (V) {": "}, K['WeaponType'] = function (V) {",
    "var Q = V['getCompatibleCount'](), P = [];": "var Q = V['getCompatibleCount'](), P = [];",
    "for (var N = 0x0; N < Q; N++) {": "for (var N = 0x0; N < Q; N++) {",
    "P[N] = K['CompatibleData'](V['getCompatibleData'](N));": "P[N] = K['CompatibleData'](V['getCompatibleData'](N));",
    "'id': V['getId'](),": "'id': V['getId'](),",
    "'name': V['getName'](),": "'name': V['getName'](),",
    "'description': V['getDescription'](),": "'description': V['getDescription'](),",
    "'breakedWeapon': K['OnlyGetId'](V['getBreakedWeapon']()),": "'breakedWeapon': K['OnlyGetId'](V['getBreakedWeapon']()),",
    "'isStockTradeVisible': V['isStockTradeVisible'](),": "'isStockTradeVisible': V['isStockTradeVisible'](),",
    "'isHitDecrement': V['isHitDecrement'](),": "'isHitDecrement': V['isHitDecrement'](),",
    "'getCompatibleCount': Q,": "'getCompatibleCount': Q,",
    "'compatibleDatas': P": "'compatibleDatas': P",
    "}, K['CompatibleData'] = function (V) {": "}, K['CompatibleData'] = function (V) {",
    "'srcObject': V['getSrcObject'](),": "'srcObject': V['getSrcObject'](),",
    "}, K['Metamorphoze'] = function (V) {": "}, K['Metamorphoze'] = function (V) {",
    "var Q = V['getConvertItemCount'](), P = [], N = [];": "var Q = V['getConvertItemCount'](), P = [], N = [];",
    "for (var H = 0x0; H < Q; H++) {": "for (var H = 0x0; H < Q; H++) {",
    "P[H] = K['Item'](V['getConvertItemSrc'](H)), N[H] = K['Item'](V['getConvertItemDest'](H));": "P[H] = K['Item'](V['getConvertItemSrc'](H)), N[H] = K['Item'](V['getConvertItemDest'](H));",
    "'_class': K['Class'](V['getClass']()),": "'_class': K['Class'](V['getClass']()),",
    "'cancelFlag': V['getCancelFlag'](),": "'cancelFlag': V['getCancelFlag'](),",
    "'cancelTurn': V['getCancelTurn'](),": "'cancelTurn': V['getCancelTurn'](),",
    "'cancelManualName': V['getCancelManualName'](),": "'cancelManualName': V['getCancelManualName'](),",
    "'convertItemCount': Q": "'convertItemCount': Q",
    "}, K['Fusion'] = function (V) {": "}, K['Fusion'] = function (V) {",
    "'fusionType': V['getFusionType'](),": "'fusionType': V['getFusionType'](),",
    "'filterFlag': V['getFilterFlag'](),": "'filterFlag': V['getFilterFlag'](),",
    "'catchName': V['getCatchName'](),": "'catchName': V['getCatchName'](),",
    "'releaseName': V['getReleaseName'](),": "'releaseName': V['getReleaseName'](),",
    "'tradeName': V['getTradeName'](),": "'tradeName': V['getTradeName'](),",
    "'isUnitTradable': V['isUnitTradable'](),": "'isUnitTradable': V['isUnitTradable'](),",
    "'isItemTradable': V['isItemTradable'](),": "'isItemTradable': V['isItemTradable'](),",
    "'fusionReleaseType': V['getFusionReleaseType'](),": "'fusionReleaseType': V['getFusionReleaseType'](),",
    "'skillIncludedObjectFlag': V['getSkillIncludedObjectFlag'](),": "'skillIncludedObjectFlag': V['getSkillIncludedObjectFlag'](),",
    "'metamorphozeData': K['Metamorphoze'](V['getMetamorphozeData']())": "'metamorphozeData': K['Metamorphoze'](V['getMetamorphozeData']())",
    "}, K['FusionItemInfo'] = function (V) {": "}, K['FusionItemInfo'] = function (V) {",
    "'fusionData': K['Fusion'](V['getFusionData']()),": "'fusionData': K['Fusion'](V['getFusionData']()),",
    "'invocationType': V['getInvocationType'](),": "'invocationType': V['getInvocationType'](),",
    "'invocationValue': V['getInvocationValue']()": "'invocationValue': V['getInvocationValue']()",
    "}, K['SwitchItemInfo'] = function (V) {": "}, K['SwitchItemInfo'] = function (V) {",
    "return { 'startSwitchChange': 'SwitchItemInfo?' };": "return { 'startSwitchChange': 'SwitchItemInfo?' };",
    "}, K['StateGroup'] = function (V) {": "}, K['StateGroup'] = function (V) {",
    "return { 'isAllBadState': V['isAllBadState']() };": "return { 'isAllBadState': V['isAllBadState']() };",
    "}, K['StateRecoveryItemInfo'] = function (V) {": "}, K['StateRecoveryItemInfo'] = function (V) {",
    "return { 'stateGroup': K['StateGroup'](V['getStateGroup']()) };": "return { 'stateGroup': K['StateGroup'](V['getStateGroup']()) };",
    "}, K['StateItemInfo'] = function (V) {": "}, K['StateItemInfo'] = function (V) {",
    "return { 'stateInvocation': K['StateInvocation'](V['getStateInvocation']()) };": "return { 'stateInvocation': K['StateInvocation'](V['getStateInvocation']()) };",
    "}, K['StateInvocation'] = function (V) {": "}, K['StateInvocation'] = function (V) {",
    "var Q = {": "var Q = {",
    "Q['state'] = K['State'](V['getState']());": "Q['state'] = K['State'](V['getState']());",
    "Q['state'] = null;": "Q['state'] = null;",
    "}, K['State'] = function (V) {": "}, K['State'] = function (V) {",
    "'turn': V['getTurn'](),": "'turn': V['getTurn'](),",
    "'autoRecoveryValue': V['getAutoRecoveryValue'](),": "'autoRecoveryValue': V['getAutoRecoveryValue'](),",
    "'badStateFlag': V['getBadStateFlag'](),": "'badStateFlag': V['getBadStateFlag'](),",
    "'badStateOption': V['getBadStateOption'](),": "'badStateOption': V['getBadStateOption'](),",
    "'turnChangeValue': V['getTurnChangeValue'](),": "'turnChangeValue': V['getTurnChangeValue'](),",
    "'isBadState': V['isBadState'](),": "'isBadState': V['isBadState'](),",
    "'getDopingParameter': K['Parameter'](V['getDopingParameter']())": "'getDopingParameter': K['Parameter'](V['getDopingParameter']())",
    "}, K['StealItemInfo'] = function (V) {": "}, K['StealItemInfo'] = function (V) {",
    "return { 'stealFlag': V['getStealFlag']() };": "return { 'stealFlag': V['getStealFlag']() };",
    "}, K['DurabilityItemInfo'] = function (V) {": "}, K['DurabilityItemInfo'] = function (V) {",
    "return { 'durabilityChangeType': V['getDurabilityChangeType']() };": "return { 'durabilityChangeType': V['getDurabilityChangeType']() };",
    "}, K['ResurrectionItemInfo'] = function (V) {": "}, K['ResurrectionItemInfo'] = function (V) {",
    "return { 'resurrectionType': V['getResurrectionType']() };": "return { 'resurrectionType': V['getResurrectionType']() };",
    "}, K['TeleportationItemInfo'] = function (V) {": "}, K['TeleportationItemInfo'] = function (V) {",
    "'rangeValue': V['getRangeValue'](),": "'rangeValue': V['getRangeValue'](),",
    "'rangeType': V['getRangeType']()": "'rangeType': V['getRangeType']()",
    "}, K['KeyItemInfo'] = function (V) {": "}, K['KeyItemInfo'] = function (V) {",
    "'keyFlag': V['getKeyFlag'](),": "'keyFlag': V['getKeyFlag'](),",
    "'isAdvancedKey': V['isAdvancedKey']()": "'isAdvancedKey': V['isAdvancedKey']()",
    "}, K['SupportStatus'] = function (V) {": "}, K['SupportStatus'] = function (V) {",
    "'power': V['getPower'](),": "'power': V['getPower'](),",
    "'defense': V['getDefense'](),": "'defense': V['getDefense'](),",
    "'avoid': V['getAvoid'](),": "'avoid': V['getAvoid'](),",
    "'criticalAvoid': V['getCriticalAvoid']()": "'criticalAvoid': V['getCriticalAvoid']()",
    "}, K['SupportStats'] = K['SupportStatus'], K['Skill'] = function (V) {": "}, K['SupportStats'] = K['SupportStatus'], K['Skill'] = function (V) {",
    "'isSkillDisplayable': V['isSkillDisplayable'](),": "'isSkillDisplayable': V['isSkillDisplayable'](),",
    "'skillType': V['getSkillType'](),": "'skillType': V['getSkillType'](),",
    "'skillValue': V['getSkillValue'](),": "'skillValue': V['getSkillValue'](),",
    "'skillSubValue': V['getSkillSubValue'](),": "'skillSubValue': V['getSkillSubValue'](),",
    "'invocationValue': V['getInvocationValue'](),": "'invocationValue': V['getInvocationValue'](),",
    "'rangeType': V['getRangeType'](),": "'rangeType': V['getRangeType'](),",
    "'supportStatus': K['SupportStatus'](V['getSupportStatus']()),": "'supportStatus': K['SupportStatus'](V['getSupportStatus']()),",
    "'customKeyword': V['getCustomKeyword']()": "'customKeyword': V['getCustomKeyword']()",
    "}, K['SkillChangeItemInfo'] = function (V) {": "}, K['SkillChangeItemInfo'] = function (V) {",
    "'skill': K['Skill'](V['getSkill']()),": "'skill': K['Skill'](V['getSkill']()),",
    "'skillControlType': V['getSkillControlType']()": "'skillControlType': V['getSkillControlType']()",
    "}, K['Parameter'] = function (V) {": "}, K['Parameter'] = function (V) {",
    "for (var P = 0x0; P < D['length']; P++) {": "for (var P = 0x0; P < D['length']; P++) {",
    "Q[D[P]] = V['getAssistValue'](n[P]);": "Q[D[P]] = V['getAssistValue'](n[P]);",
    "}, K['ParameterLike'] = function (V, Q) {": "}, K['ParameterLike'] = function (V, Q) {",
    "var P = {};": "var P = {};",
    "for (var N = 0x0; N < D['length']; N++) {": "for (var N = 0x0; N < D['length']; N++) {",
    "P[D[N]] = V[Q](j[N]);": "P[D[N]] = V[Q](j[N]);",
    "}, K['RecoveryItemInfo'] = function (V) {": "}, K['RecoveryItemInfo'] = function (V) {",
    "'recoveryValue': V['getRecoveryValue'](),": "'recoveryValue': V['getRecoveryValue'](),",
    "'recoveryType': V['getRecoveryType']()": "'recoveryType': V['getRecoveryType']()",
    "}, K['EntireRecoveryItemInfo'] = K['RecoveryItemInfo'], K['DamageItemInfo'] = function (V) {": "}, K['EntireRecoveryItemInfo'] = K['RecoveryItemInfo'], K['DamageItemInfo'] = function (V) {",
    "'damageValue': V['getDamageValue'](),": "'damageValue': V['getDamageValue'](),",
    "'damageType': V['getDamageType'](),": "'damageType': V['getDamageType'](),",
    "'hit': V['getHit']()": "'hit': V['getHit']()",
    "}, K['ClassChangeItemInfo'] = function (V) {": "}, K['ClassChangeItemInfo'] = function (V) {",
    "var Q = V['getClassGroupCount'](), P = [];": "var Q = V['getClassGroupCount'](), P = [];",
    "P['push'](K['ClassGroup'](V['getClassGroupData'](N)));": "P['push'](K['ClassGroup'](V['getClassGroupData'](N)));",
    "'isClassInfoDisplayable': V['isClassInfoDisplayable'](),": "'isClassInfoDisplayable': V['isClassInfoDisplayable'](),",
    "'isLevelReset': V['isLevelReset'](),": "'isLevelReset': V['isLevelReset'](),",
    "'classGroupCount': Q,": "'classGroupCount': Q,",
    "'classGroupData': P": "'classGroupData': P",
    "}, K['ClassGroup'] = function (V) {": "}, K['ClassGroup'] = function (V) {",
    "var Q = V['getClassGroupEntryCount'](), P = [];": "var Q = V['getClassGroupEntryCount'](), P = [];",
    "P['push'](K['ClassGroupEntry'](V['getClassGroupEntryData'](N)));": "P['push'](K['ClassGroupEntry'](V['getClassGroupEntryData'](N)));",
    "'classGroupEntrysCnt': Q,": "'classGroupEntrysCnt': Q,",
    "'classGroupEntrys': P": "'classGroupEntrys': P",
    "}, K['ClassGroupEntry'] = function (V) {": "}, K['ClassGroupEntry'] = function (V) {",
    "var Q = [], P = [];": "var Q = [], P = [];",
    "for (var N = 0x0; N < U['parameterIndexs']; N++) {": "for (var N = 0x0; N < U['parameterIndexs']; N++) {",
    "Q[U['parameterIndexs'][N]] = V['getParameterValue'](U['parameterIndexs'][N]), Q[U['parameterKeys'][N]] = Q[U['parameterIndexs'][N]], P[U['parameterIndexs'][N]] = V['getConditionValue'](U['parameterIndexs'][N]), P[U['parameterKeys'][N]] = P[U['parameterIndexs'][N]];": "Q[U['parameterIndexs'][N]] = V['getParameterValue'](U['parameterIndexs'][N]), Q[U['parameterKeys'][N]] = Q[U['parameterIndexs'][N]], P[U['parameterIndexs'][N]] = V['getConditionValue'](U['parameterIndexs'][N]), P[U['parameterKeys'][N]] = P[U['parameterIndexs'][N]];",
    "'parameterValue': Q,": "'parameterValue': Q,",
    "'conditionValue': P": "'conditionValue': P",
    "}, K['Class'] = function (V) {": "}, K['Class'] = function (V) {",
    "var Q = V['getMaxLv']();": "var Q = V['getMaxLv']();",
    "return Q === -0x1 && (Q = DataConfig['getMaxLv']()), {": "return Q === -0x1 && (Q = DataConfig['getMaxLv']()), {",
    "'classMotionFlag': V['getClassMotionFlag'](),": "'classMotionFlag': V['getClassMotionFlag'](),",
    "'classType': K['ClassType'](V['getClassType']()),": "'classType': K['ClassType'](V['getClassType']()),",
    "'classOption': V['getClassOption'](),": "'classOption': V['getClassOption'](),",
    "'getBonusExp': V['getBonusExp'](),": "'getBonusExp': V['getBonusExp'](),",
    "'getClassRank': V['getClassRank'](),": "'getClassRank': V['getClassRank'](),",
    "'growthBonus': K['Parameter'](V['getGrowthBonus']()),": "'growthBonus': K['Parameter'](V['getGrowthBonus']()),",
    "'parameterBonus': K['Parameter'](V['getParameterBonus']()),": "'parameterBonus': K['Parameter'](V['getParameterBonus']()),",
    "'maxParameter': K['ParameterLike'](V, 'getMaxParameter'),": "'maxParameter': K['ParameterLike'](V, 'getMaxParameter'),",
    "'maxLv': Q": "'maxLv': Q",
    "}, K['ClassType'] = function (V) {": "}, K['ClassType'] = function (V) {",
    "'moveTypeId': V['getMoveTypeId'](),": "'moveTypeId': V['getMoveTypeId'](),",
    "'isTerrainBonusEnabled': V['isTerrainBonusEnabled']()": "'isTerrainBonusEnabled': V['isTerrainBonusEnabled']()",
    "}, K['PrototypeInfo'] = function (V) {": "}, K['PrototypeInfo'] = function (V) {",
    "'initialArray': V['getInitialArray']()": "'initialArray': V['getInitialArray']()",
    "}, K['Difficulty'] = function (V) {": "}, K['Difficulty'] = function (V) {",
    "'baseExperience': V['getBaseExperience'](),": "'baseExperience': V['getBaseExperience'](),",
    "'difficultyOption': V['getDifficultyOption']()": "'difficultyOption': V['getDifficultyOption']()",
    "}, K['Race'] = function (V) {": "}, K['Race'] = function (V) {",
    "'description': V['getDescription']()": "'description': V['getDescription']()",
    "}, K['OriginalData'] = function (V) {": "}, K['OriginalData'] = function (V) {",
    "'originalContent': K['OriginalContent'](V['getOriginalContent']())": "'originalContent': K['OriginalContent'](V['getOriginalContent']())",
    "}, K['TerrainGroup'] = function (V) {": "}, K['TerrainGroup'] = function (V) {",
    "'name': V['getName']()": "'name': V['getName']()",
    "}, K['Terrain'] = function (V) {": "}, K['Terrain'] = function (V) {",
    "'def': V['getDef'](),": "'def': V['getDef'](),",
    "'mdf': V['getMdf'](),": "'mdf': V['getMdf'](),",
    "'skillReferenceList': K['DataList'](K['Skill'], V['getSkillReferenceList']()),": "'skillReferenceList': K['DataList'](K['Skill'], V['getSkillReferenceList']()),",
    "'passableAggregation': K['Aggregation'](V['getPassableAggregation']()),": "'passableAggregation': K['Aggregation'](V['getPassableAggregation']()),",
    "'terrainGroup': K['TerrainGroup'](V['getTerrainGroup']())": "'terrainGroup': K['TerrainGroup'](V['getTerrainGroup']())",
    "}, K['Aggregation'] = function (V) {": "}, K['Aggregation'] = function (V) {",
    "var Q = [], P = [], N = [], H = V['getObjectCount']();": "var Q = [], P = [], N = [], H = V['getObjectCount']();",
    "for (var I = 0x0; I < H; I++) {": "for (var I = 0x0; I < H; I++) {",
    "var p = V['getObjectData'](I), L = V['getObjectType'](I), y = c(ObjectType, V['getObjectType'](I)), u = function (E) {": "var p = V['getObjectData'](I), L = V['getObjectType'](I), y = c(ObjectType, V['getObjectType'](I)), u = function (E) {",
    "switch (L) {": "switch (L) {",
    "case ObjectType['UNIT']:": "case ObjectType['UNIT']:",
    "u = K['Unit'];": "u = K['Unit'];",
    "case ObjectType['CLASS']:": "case ObjectType['CLASS']:",
    "u = K['Class'];": "u = K['Class'];",
    "case ObjectType['WEAPON']:": "case ObjectType['WEAPON']:",
    "u = K['Weapon'];": "u = K['Weapon'];",
    "case ObjectType['SKILL']:": "case ObjectType['SKILL']:",
    "u = K['Skill'];": "u = K['Skill'];",
    "case ObjectType['STATE']:": "case ObjectType['STATE']:",
    "u = K['State'];": "u = K['State'];",
    "case ObjectType['TERRAIN']:": "case ObjectType['TERRAIN']:",
    "u = K['Terrain'];": "u = K['Terrain'];",
    "case ObjectType['FUSION']:": "case ObjectType['FUSION']:",
    "u = K['Fusion'];": "u = K['Fusion'];",
    "case ObjectType['NULL']:": "case ObjectType['NULL']:",
    "u = function () {": "u = function () {",
    "Q['push'](u(p)), P['push'](L), N['push'](y);": "Q['push'](u(p)), P['push'](L), N['push'](y);",
    "'items': Q,": "'items': Q,",
    "'itemsType': P,": "'itemsType': P,",
    "'itemsTypeName': N,": "'itemsTypeName': N,",
    "'getMatchType': V['getMatchType']()": "'getMatchType': V['getMatchType']()",
    "}, K['OriginalContent'] = function (V) {": "}, K['OriginalContent'] = function (V) {",
    "'unit': K['Unit'](V['getUnit']()),": "'unit': K['Unit'](V['getUnit']()),",
    "'item': K['Item'](V['getItem']()),": "'item': K['Item'](V['getItem']()),",
    "'targetAggregation': K['Aggregation'](V['getTargetAggregation']()),": "'targetAggregation': K['Aggregation'](V['getTargetAggregation']()),",
    "}, K['Event'] = function (V) {": "}, K['Event'] = function (V) {",
    "'eventType': V['getEventType'](),": "'eventType': V['getEventType'](),",
    "'executedMark': V['getExecutedMark'](),": "'executedMark': V['getExecutedMark'](),",
    "'isEvent': V['isEvent'](),": "'isEvent': V['isEvent'](),",
    "'associateRecollectionEvent': null,": "'associateRecollectionEvent': null,",
    "'placeEventInfo': null,": "'placeEventInfo': null,",
    "'talkEventInfo': null,": "'talkEventInfo': null,",
    "'communicationEventInfo': null,": "'communicationEventInfo': null,",
    "'recollectionEventInfo': null,": "'recollectionEventInfo': null,",
    "'unitEventInfo': null,": "'unitEventInfo': null,",
    "'commonEventInfo': null,": "'commonEventInfo': null,",
    "'restEventInfo': null": "'restEventInfo': null",
    "Q['associateRecollectionEvent'] = K['Event'](V['getAssociateRecollectionEvent']());": "Q['associateRecollectionEvent'] = K['Event'](V['getAssociateRecollectionEvent']());",
    "Q['restEventInfo'] = K['RestEventInfo'](V['getRestEventInfo']());": "Q['restEventInfo'] = K['RestEventInfo'](V['getRestEventInfo']());",
    "Q['restEventInfo'] = null;": "Q['restEventInfo'] = null;",
    "switch (Q['eventType']) {": "switch (Q['eventType']) {",
    "case EventType['PLACE']:": "case EventType['PLACE']:",
    "Q['placeEventInfo'] = K['PlaceEventInfo'](V['getPlaceEventInfo']());": "Q['placeEventInfo'] = K['PlaceEventInfo'](V['getPlaceEventInfo']());",
    "case EventType['AUTO']:": "case EventType['AUTO']:",
    "case EventType['TALK']:": "case EventType['TALK']:",
    "Q['talkEventInfo'] = K['TalkEventInfo'](V['getTalkEventInfo']());": "Q['talkEventInfo'] = K['TalkEventInfo'](V['getTalkEventInfo']());",
    "case EventType['UNIT']:": "case EventType['UNIT']:",
    "Q['unitEventInfo'] = K['UnitEventInfo'](V['getUnitEventInfo']());": "Q['unitEventInfo'] = K['UnitEventInfo'](V['getUnitEventInfo']());",
    "case EventType['OPENING']:": "case EventType['OPENING']:",
    "case EventType['ENDING']:": "case EventType['ENDING']:",
    "case EventType['COMMUNICATION']:": "case EventType['COMMUNICATION']:",
    "Q['communicationEventInfo'] = K['CommunicationEventInfo'](V['getCommunicationEventInfo']());": "Q['communicationEventInfo'] = K['CommunicationEventInfo'](V['getCommunicationEventInfo']());",
    "case EventType['RECOLLECTION']:": "case EventType['RECOLLECTION']:",
    "Q['recollectionEventInfo'] = K['RecollectionEventInfo'](V['getRecollectionEventInfo']());": "Q['recollectionEventInfo'] = K['RecollectionEventInfo'](V['getRecollectionEventInfo']());",
    "case EventType['DYNAMIC']:": "case EventType['DYNAMIC']:",
    "case EventType['MAPCOMMON']:": "case EventType['MAPCOMMON']:",
    "Q['commonEventInfo'] = K['CommonEventInfo'](V['getCommonEventInfo']());": "Q['commonEventInfo'] = K['CommonEventInfo'](V['getCommonEventInfo']());",
    "}, K['RestEventInfo'] = function (V) {": "}, K['RestEventInfo'] = function (V) {",
    "'restAutoType': V['getRestAutoType'](),": "'restAutoType': V['getRestAutoType'](),",
    "'communicationEventType': V['getCommunicationEventType'](),": "'communicationEventType': V['getCommunicationEventType'](),",
    "'pos': V['getPos']()": "'pos': V['getPos']()",
    "}, K['CommonEventInfo'] = function (V) {": "}, K['CommonEventInfo'] = function (V) {",
    "'isFirst': V['isFirst']()": "'isFirst': V['isFirst']()",
    "}, K['UnitEventInfo'] = function (V) {": "}, K['UnitEventInfo'] = function (V) {",
    "'unitEventType': 0x0,": "'unitEventType': 0x0,",
    "'battleUnit': 0x0,": "'battleUnit': 0x0,",
    "'commandText': V['getCommandText']()": "'commandText': V['getCommandText']()",
    "}, K['Trophy'] = function (V) {": "}, K['Trophy'] = function (V) {",
    "'flag': V['getFlag'](),": "'flag': V['getFlag'](),",
    "'gold': V['getGold'](),": "'gold': V['getGold'](),",
    "'bonus': V['getBonus'](),": "'bonus': V['getBonus'](),",
    "'isImmediately': V['isImmediately']()": "'isImmediately': V['isImmediately']()",
    "}, K['ShopData'] = function (V) {": "}, K['ShopData'] = function (V) {",
    "var Q = V['getShopItemArray'](), P = [];": "var Q = V['getShopItemArray'](), P = [];",
    "for (var N = 0x0; N < Q['length']; N++) {": "for (var N = 0x0; N < Q['length']; N++) {",
    "P[N] = K['Item'](Q[N]);": "P[N] = K['Item'](Q[N]);",
    "'shopItemArray': P,": "'shopItemArray': P,",
    "'shopLayout': K['ShopLayout'](V['getShopLayout']()),": "'shopLayout': K['ShopLayout'](V['getShopLayout']()),",
    "'isShopDisplayable': V['isShopDisplayable']()": "'isShopDisplayable': V['isShopDisplayable']()",
    "}, K['PlaceEventInfo'] = function (V) {": "}, K['PlaceEventInfo'] = function (V) {",
    "'x': V['getX'](),": "'x': V['getX'](),",
    "'y': V['getY'](),": "'y': V['getY'](),",
    "'placeEventType': V['getPlaceEventType'](),": "'placeEventType': V['getPlaceEventType'](),",
    "'trophy': K['Trophy'](V['getTrophy']()),": "'trophy': K['Trophy'](V['getTrophy']()),",
    "'customKeyword': V['getCustomKeyword'](),": "'customKeyword': V['getCustomKeyword'](),",
    "'commandText': V['getCommandText'](),": "'commandText': V['getCommandText'](),",
    "'placeCustomType': V['getPlaceCustomType'](),": "'placeCustomType': V['getPlaceCustomType'](),",
    "'isRandomBackground': K['ShopData'](V['getShopData']())": "'isRandomBackground': K['ShopData'](V['getShopData']())",
    "}, K['RecollectionEventInfo'] = function (V) {": "}, K['RecollectionEventInfo'] = function (V) {",
    "'firstUnit': 0x0,": "'firstUnit': 0x0,",
    "'secondUnit': 0x0,": "'secondUnit': 0x0,",
    "'rank': V['getRank'](),": "'rank': V['getRank'](),",
    "'isRandomBackground': V['isRandomBackground'](),": "'isRandomBackground': V['isRandomBackground'](),",
    "'isExtraDisplayable': V['isExtraDisplayable']()": "'isExtraDisplayable': V['isExtraDisplayable']()",
    "}, K['TalkEventInfo'] = function (V) {": "}, K['TalkEventInfo'] = function (V) {",
    "'srcUnit': 0x0,": "'srcUnit': 0x0,",
    "'destUnit': 0x0,": "'destUnit': 0x0,",
    "'isMutual': V['isMutual'](),": "'isMutual': V['isMutual'](),",
    "'isSrcActive': V['isSrcActive'](),": "'isSrcActive': V['isSrcActive'](),",
    "}, K['CommunicationEventInfo'] = function (V) {": "}, K['CommunicationEventInfo'] = function (V) {",
    "return { 'communicationEventType': V['getCommunicationEventType']() };": "return { 'communicationEventType': V['getCommunicationEventType']() };",
    "}, K['CharacterDictionary'] = function (V) {": "}, K['CharacterDictionary'] = function (V) {",
    "var Q = V['getPageCount'](), P = [];": "var Q = V['getPageCount'](), P = [];",
    "P[N] = V['getPageText'](N);": "P[N] = V['getPageText'](N);",
    "'formalName': V['getFormalName'](),": "'formalName': V['getFormalName'](),",
    "'pageCount': Q,": "'pageCount': Q,",
    "'pageTexts': P": "'pageTexts': P",
    "}, K['WordDictionary'] = function (V) {": "}, K['WordDictionary'] = function (V) {",
    "}, K['GalleryDictionary'] = function (V) {": "}, K['GalleryDictionary'] = function (V) {",
    "P[N] = V['getGraphicsType'](N);": "P[N] = V['getGraphicsType'](N);",
    "'graphicsType': P": "'graphicsType': P",
    "}, K['GraphicsDictionary'] = K['GalleryDictionary'], K['MediaDictionary'] = function (V) {": "}, K['GraphicsDictionary'] = K['GalleryDictionary'], K['MediaDictionary'] = function (V) {",
    "'mediaType': V['getMediaType'](),": "'mediaType': V['getMediaType'](),",
    "'isMediaEnabled': V['isMediaEnabled']()": "'isMediaEnabled': V['isMediaEnabled']()",
    "}, K['ShopLayout'] = function (V) {": "}, K['ShopLayout'] = function (V) {",
    "'commandName': V['getCommandName'](),": "'commandName': V['getCommandName'](),",
    "'message_0': V['getMessage'](0x0)": "'message_0': V['getMessage'](0x0)",
    "}, K['RestShop'] = function (V) {": "}, K['RestShop'] = function (V) {",
    "'shopItemArray': Q,": "'shopItemArray': Q,",
    "'bonusNumberArray': V['getBonusNumberArray'](),": "'bonusNumberArray': V['getBonusNumberArray'](),",
    "}, K['ReinforcementPage'] = function (V) {": "}, K['ReinforcementPage'] = function (V) {",
    "'directionType': V['getDirectionType'](),": "'directionType': V['getDirectionType'](),",
    "'startTurn': V['getStartTurn'](),": "'startTurn': V['getStartTurn'](),",
    "'endTurn': V['getEndTurn'](),": "'endTurn': V['getEndTurn'](),",
    "'turnType': V['getTurnType'](),": "'turnType': V['getTurnType'](),",
    "'isForce': V['isForce'](),": "'isForce': V['isForce'](),",
    "'isRelativeTurn': V['isRelativeTurn'](),": "'isRelativeTurn': V['isRelativeTurn'](),",
    "'isCondition': V['isCondition'](),": "'isCondition': V['isCondition'](),",
    "'sourceUnit': K['Unit'](V['getSourceUnit']())": "'sourceUnit': K['Unit'](V['getSourceUnit']())",
    "}, K['ReinforcementPos'] = function (V) {": "}, K['ReinforcementPos'] = function (V) {",
    "var Q = V['getReinforcementPageCount'](), P = [];": "var Q = V['getReinforcementPageCount'](), P = [];",
    "P[N] = K['ReinforcementPage'](V['getReinforcementPage'](N));": "P[N] = K['ReinforcementPage'](V['getReinforcementPage'](N));",
    "'reinforcementPageCount': Q,": "'reinforcementPageCount': Q,",
    "'reinforcementPage': P": "'reinforcementPage': P",
    "}, K['ForceSortie'] = function (V) {": "}, K['ForceSortie'] = function (V) {",
    "'number': V['getNumber']()": "'number': V['getNumber']()",
    "}, K['SwitchTable'] = function (V) {": "}, K['SwitchTable'] = function (V) {",
    "var Q = V['getSwitchCount'](), P = [], N = [], H = [], I = [];": "var Q = V['getSwitchCount'](), P = [], N = [], H = [], I = [];",
    "for (var p = 0x0; p < Q; p++) {": "for (var p = 0x0; p < Q; p++) {",
    "P[p] = V['getSwitchId'](p), N[p] = V['getSwitchName'](p), H[p] = V['getSwitchDescription'](p), I[p] = V['isSwitchOn'](p);": "P[p] = V['getSwitchId'](p), N[p] = V['getSwitchName'](p), H[p] = V['getSwitchDescription'](p), I[p] = V['isSwitchOn'](p);",
    "'id': P,": "'id': P,",
    "'name': N,": "'name': N,",
    "'description': H,": "'description': H,",
    "'val': I": "'val': I",
    "}, K['VariableTable'] = function (V) {": "}, K['VariableTable'] = function (V) {",
    "var Q = V['getVariableCount'](), P = [], N = [], H = [], I = [];": "var Q = V['getVariableCount'](), P = [], N = [], H = [], I = [];",
    "P[p] = V['getVariableId'](p), N[p] = V['getVariableName'](p), H[p] = V['getVariableDescription'](p), I[p] = V['getVariable'](p);": "P[p] = V['getVariableId'](p), N[p] = V['getVariableName'](p), H[p] = V['getVariableDescription'](p), I[p] = V['getVariable'](p);",
    "}, K['MapData'] = function (V) {": "}, K['MapData'] = function (V) {",
    "var Q = 0x0;": "var Q = 0x0;",
    "Q = V['getMapType']();": "Q = V['getMapType']();",
    "'mapName': V['getMapName'](),": "'mapName': V['getMapName'](),",
    "'mapWidth': V['getMapWidth'](),": "'mapWidth': V['getMapWidth'](),",
    "'mapHeight': V['getMapHeight'](),": "'mapHeight': V['getMapHeight'](),",
    "'chapterNumber': V['getChapterNumber'](),": "'chapterNumber': V['getChapterNumber'](),",
    "'sortieMaxCount': V['getSortieMaxCount'](),": "'sortieMaxCount': V['getSortieMaxCount'](),",
    "'mapColorIndex': V['getMapColorIndex'](),": "'mapColorIndex': V['getMapColorIndex'](),",
    "'reinforcementPosCount': V['getReinforcementPosCount'](),": "'reinforcementPosCount': V['getReinforcementPosCount'](),",
    "'localSwitchTable': K['SwitchTable'](V['getLocalSwitchTable']()),": "'localSwitchTable': K['SwitchTable'](V['getLocalSwitchTable']()),",
    "'mapType': Q,": "'mapType': Q,",
    "'isBattleSetupScreenDisplayable': V['isBattleSetupScreenDisplayable'](),": "'isBattleSetupScreenDisplayable': V['isBattleSetupScreenDisplayable'](),",
    "'isMapScroll': V['isMapScroll']()": "'isMapScroll': V['isMapScroll']()",
    "}, K['MapDataFull'] = function (V) {": "}, K['MapDataFull'] = function (V) {",
    "var P = V['getSortieMaxCount'](), N = [];": "var P = V['getSortieMaxCount'](), N = [];",
    "for (var H = 0x0; H < P; H++) {": "for (var H = 0x0; H < P; H++) {",
    "N[H] = [": "N[H] = [",
    "V['getSortiePosY'](H),": "V['getSortiePosY'](H),",
    "V['getSortiePosY'](H)": "V['getSortiePosY'](H)",
    "];": "];",
    "var I = V['getReinforcementPosCount'](), p = [];": "var I = V['getReinforcementPosCount'](), p = [];",
    "for (var H = 0x0; H < I; H++) {": "for (var H = 0x0; H < I; H++) {",
    "p[H] = K['ReinforcementPos'](V['getReinforcementPos'](H));": "p[H] = K['ReinforcementPos'](V['getReinforcementPos'](H));",
    "var L = V['getForceSortieCount'](), y = [];": "var L = V['getForceSortieCount'](), y = [];",
    "for (var H = 0x0; H < L; H++) {": "for (var H = 0x0; H < L; H++) {",
    "y[H] = K['ForceSortie'](V['getForceSortie'](H));": "y[H] = K['ForceSortie'](V['getForceSortie'](H));",
    "var u = {}, E = Object['keys'](UnitGroup);": "var u = {}, E = Object['keys'](UnitGroup);",
    "for (var H = 0x0; H < E['length']; H++) {": "for (var H = 0x0; H < E['length']; H++) {",
    "u[E[H]] = K['DataList'](K['Unit'], V['getListFromUnitGroup'](UnitGroup[E[H]])), u[UnitGroup[H]] = u[E[H]];": "u[E[H]] = K['DataList'](K['Unit'], V['getListFromUnitGroup'](UnitGroup[E[H]])), u[UnitGroup[H]] = u[E[H]];",
    "'sortiePos': N,": "'sortiePos': N,",
    "'reinforcementPos': p,": "'reinforcementPos': p,",
    "'forceSortieCount': L,": "'forceSortieCount': L,",
    "'forceSortie': y,": "'forceSortie': y,",
    "'sortieAggregation': K['Aggregation'](V['getSortieAggregation']()),": "'sortieAggregation': K['Aggregation'](V['getSortieAggregation']()),",
    "'isMapScroll': V['isMapScroll'](),": "'isMapScroll': V['isMapScroll'](),",
    "'shopDataList': K['DataList'](K['ShopData'], V['getShopDataList']()),": "'shopDataList': K['DataList'](K['ShopData'], V['getShopDataList']()),",
    "'groupUnits': u": "'groupUnits': u",
    "}, K['QuestReward'] = function (V) {": "}, K['QuestReward'] = function (V) {",
    "'type': V['getType'](),": "'type': V['getType'](),",
    "'text': V['getText'](),": "'text': V['getText'](),",
    "'value': V['getValue']()": "'value': V['getValue']()",
    "}, K['RestQuest'] = function (V) {": "}, K['RestQuest'] = function (V) {",
    "'freeMap': K['MapData'](V['getFreeMap']()),": "'freeMap': K['MapData'](V['getFreeMap']()),",
    "'enabledEvent': K['Event'](V['getEnabledEvent']()),": "'enabledEvent': K['Event'](V['getEnabledEvent']()),",
    "'disabledEvent': K['Event'](V['getDisabledEvent']()),": "'disabledEvent': K['Event'](V['getDisabledEvent']()),",
    "'isPrivateQuest': V['isPrivateQuest']()": "'isPrivateQuest': V['isPrivateQuest']()",
    "}, K['RestArea'] = function (V) {": "}, K['RestArea'] = function (V) {",
    "'areaName': V['getAreaName'](),": "'areaName': V['getAreaName'](),",
    "'isAreaDisplayable': V['isAreaDisplayable']()": "'isAreaDisplayable': V['isAreaDisplayable']()",
    "function c(V, Q) {": "function c(V, Q) {",
    "var P = Object['keys'](V);": "var P = Object['keys'](V);",
    "for (var N = 0x0; N < P['length']; N++) {": "for (var N = 0x0; N < P['length']; N++) {",
    "if (V[P[N]] === Q)": "if (V[P[N]] === Q)",
    "return P[N];": "return P[N];",
    "var k = 0x0, W = Object['keys'](K);": "var k = 0x0, W = Object['keys'](K);",
    "for (var a = 0x0; a < W['length']; a++) {": "for (var a = 0x0; a < W['length']; a++) {",
    "K[W[a]] instanceof Function && (K[W[a]] = function (V) {": "K[W[a]] instanceof Function && (K[W[a]] = function (V) {",
    "var Q = K[V];": "var Q = K[V];",
    "return function () {": "return function () {",
    "k > 0x64 && (CollectGarbage(), k = 0x0);": "k > 0x64 && (CollectGarbage(), k = 0x0);",
    "var P = Q['apply'](this, arguments);": "var P = Q['apply'](this, arguments);",
    "if (arguments[0x0] === null || arguments[0x0] === undefined)": "if (arguments[0x0] === null || arguments[0x0] === undefined)",
    "return arguments[0x0];": "return arguments[0x0];",
    "return { 'error': N };": "return { 'error': N };",
    "}(W[a]));": "}(W[a]));",
    "return K['cache'] = m, K['baseData'] = root['getBaseData'](), K;": "return K['cache'] = m, K['baseData'] = root['getBaseData'](), K;",
    "(function(){": "(function(){",
    "if(root.getCurrentScene() === SceneType.TITLE){": "if(root.getCurrentScene() === SceneType.TITLE){",
    "return {id:[],name:[],description:[],val:[]};": "return {id:[],name:[],description:[],val:[]};",
    "return gameInfoGeters.SwitchTable(root.getMetaSession().getGlobalSwitchTable());": "return gameInfoGeters.SwitchTable(root.getMetaSession().getGlobalSwitchTable());",
    "})()": "})()",
    "gameInfoGeters.DataList(gameInfoGeters.Item, gameInfoGeters.baseData.getWeaponList())": "gameInfoGeters.DataList(gameInfoGeters.Item, gameInfoGeters.baseData.getWeaponList())",
    "gameInfoGeters.DataList(gameInfoGeters.Item, gameInfoGeters.baseData.getItemList())": "gameInfoGeters.DataList(gameInfoGeters.Item, gameInfoGeters.baseData.getItemList())",
    "root.getMetaSession().getGold();": "root.getMetaSession().getGold();",
    "var items = [];": "var items = [];",
    "return [];": "return [];",
    "return root.getMetaSession().getStockItemArray();": "return root.getMetaSession().getStockItemArray();",
    "})();": "})();",
    "for(var i=0;i<itemObjs.length;i++){": "for(var i=0;i<itemObjs.length;i++){",
    "var data = gameInfoGeters.Item(itemObjs[i]);": "var data = gameInfoGeters.Item(itemObjs[i]);",
    "items.push(data);": "items.push(data);",
    "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(0));": "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(0));",
    "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(1));": "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(1));",
    "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(2));": "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(2));",
    "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(3));": "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(3));",
    "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(4));": "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(4));",
    "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(5));": "return gameInfoGeters.VariableTable(root.getMetaSession().getVariableTable(5));",
    "lastCHackUnitUpdateUnits = [];": "lastCHackUnitUpdateUnits = [];",
    "var externalData = root.getExternalData();": "var externalData = root.getExternalData();",
    "var currentSession = root.getCurrentSession();": "var currentSession = root.getCurrentSession();",
    "var playerList = [];": "var playerList = [];",
    "try{": "try{",
    "function lastCHackUnitUpdateUnitsPush(obj){": "function lastCHackUnitUpdateUnitsPush(obj){",
    "lastCHackUnitUpdateUnits.push(obj);": "lastCHackUnitUpdateUnits.push(obj);",
    "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getPlayerList()));": "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getPlayerList()));",
    "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getPlayerList());": "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getPlayerList());",
    "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getEnemyList()));": "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getEnemyList()));",
    "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getEnemyList());": "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getEnemyList());",
    "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getAllyList()));": "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getAllyList()));",
    "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getAllyList());": "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getAllyList());",
    "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getGuestList()));": "playerList.push.apply(playerList,gameInfoGeters.DataList(gameInfoGeters.Unit, currentSession.getGuestList()));",
    "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getGuestList());": "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, currentSession.getGuestList());",
    "}catch(e){": "}catch(e){",
    "playerList = gameInfoGeters.DataList(gameInfoGeters.Unit, root.getMetaSession().getTotalPlayerList());": "playerList = gameInfoGeters.DataList(gameInfoGeters.Unit, root.getMetaSession().getTotalPlayerList());",
    "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, root.getMetaSession().getTotalPlayerList());": "gameInfoGeters.DataList(lastCHackUnitUpdateUnitsPush, root.getMetaSession().getTotalPlayerList());",
    "root.getMetaSession().getBonus();": "root.getMetaSession().getBonus();",
    "_getUnitLocationXY 追加:": "_getUnitLocationXY 追加:",
    "_setUnitLocationXY 追加:": "_setUnitLocationXY 追加:",
    "ID：": "ID:",
    "({": "({",
    "})": "})",
    "))": "))",
    "ＨＰ": "HP",
    "101,102,103,104,105,106,107\nInit Sp": "101,102,103,104,105,106,107\nInit Sp",
    "": "",
    "is incorrect. Change to \"FTKR": "is incorrect. Change to \"FTKR",
    "\".": "\".",
    "Level Up!": "Level Up!",
    "? '": "? '",
    "【ver": "【ver",
    "】選択肢の機能拡張": "】選択肢の機能拡張",
    "選択肢ヘルプ": "選択肢ヘルプ",
    "MOG SceneMenu / BattleCommandsでファイル名を変更します": "MOG SceneMenu / BattleCommandsでファイル名を変更します",
    "Com_攻撃": "Com_攻撃",
    "Com_防御": "Com_防御",
    "Com_アイテム": "Com_アイテム",
    "Com_魔法": "Com_魔法",
    "Com_必殺技": "Com_必殺技",
    "メイン画面へ進む前に、\"Made with MV\"のスプラッシュ画面もしくはカスタマイズされたスプラッシュ画面を表示します。": "メイン画面へ進む前に、\"Made with MV\"のスプラッシュ画面もしくはカスタマイズされたスプラッシュ画面を表示します。",
    "イベントコマンド「戦闘背景の変更」を戦闘中でも行えるようになります。": "イベントコマンド「戦闘背景の変更」を戦闘中でも行えるようになります。",
    "\"weapon\", 2, 1": "\"weapon\", 2, 1",
    "\"item\", 35, 1": "\"item\", 35, 1",
    ",\n\"price\"": ",\n\"price\"",
    "100,\n\"target\"": "100,\n\"target\"",
    "\"weapon\", 3": "\"weapon\", 3",
    "\"weapon\", 3, 1": "\"weapon\", 3, 1",
    "\"item\", 33, 1": "\"item\", 33, 1",
    "\"weapon\", 4": "\"weapon\", 4",
    "\"weapon\", 4, 1": "\"weapon\", 4, 1",
    "\"item\", 37, 1": "\"item\", 37, 1",
    "\"weapon\", 5": "\"weapon\", 5",
    "\"weapon\", 5, 1": "\"weapon\", 5, 1",
    "\"item\", 39, 1": "\"item\", 39, 1",
    "\"weapon\", 6": "\"weapon\", 6",
    "\"weapon\", 6, 1": "\"weapon\", 6, 1",
    "\"item\", 41, 1": "\"item\", 41, 1",
    "\"weapon\", 7": "\"weapon\", 7",
    "\"weapon\", 7, 1": "\"weapon\", 7, 1",
    "\"item\", 43, 1": "\"item\", 43, 1",
    "\"weapon\", 8": "\"weapon\", 8",
    "\"weapon\", 8, 1": "\"weapon\", 8, 1",
    "\"item\", 45, 1": "\"item\", 45, 1",
    "\"weapon\", 9": "\"weapon\", 9",
    "\"weapon\", 9, 1": "\"weapon\", 9, 1",
    "\"item\", 47, 1": "\"item\", 47, 1",
    "\"weapon\", 10": "\"weapon\", 10",
    "\"weapon\", 10, 1": "\"weapon\", 10, 1",
    "\"item\", 49, 1": "\"item\", 49, 1",
    "\"weapon\", 11": "\"weapon\", 11",
    "\"weapon\", 11, 1": "\"weapon\", 11, 1",
    "\"item\", 51, 1": "\"item\", 51, 1",
    "\"weapon\", 12": "\"weapon\", 12",
    "\"weapon\", 22, 1": "\"weapon\", 22, 1",
    "\"weapon\", 23": "\"weapon\", 23",
    "\"weapon\", 23, 1": "\"weapon\", 23, 1",
    "\"item\", 54, 1": "\"item\", 54, 1",
    "\"weapon\", 24": "\"weapon\", 24",
    "\"weapon\", 24, 1": "\"weapon\", 24, 1",
    "\"item\", 56, 1": "\"item\", 56, 1",
    "\"weapon\", 25": "\"weapon\", 25",
    "\"weapon\", 25, 1": "\"weapon\", 25, 1",
    "\"weapon\", 26": "\"weapon\", 26",
    "\"weapon\", 26, 1": "\"weapon\", 26, 1",
    "\"item\", 58, 1": "\"item\", 58, 1",
    "\"weapon\", 27": "\"weapon\", 27",
    "\"weapon\", 27, 1": "\"weapon\", 27, 1",
    "\"item\", 60, 1": "\"item\", 60, 1",
    "\"weapon\", 28": "\"weapon\", 28",
    "\"weapon\", 28, 1": "\"weapon\", 28, 1",
    "\"item\", 62, 1": "\"item\", 62, 1",
    "\"weapon\", 29": "\"weapon\", 29",
    "\"weapon\", 29, 1": "\"weapon\", 29, 1",
    "\"weapon\", 30": "\"weapon\", 30",
    "\"weapon\", 30, 1": "\"weapon\", 30, 1",
    "\"item\", 64, 10": "\"item\", 64, 10",
    "\"weapon\", 31": "\"weapon\", 31",
    "\"weapon\", 31, 1": "\"weapon\", 31, 1",
    "\"item\", 51, 10": "\"item\", 51, 10",
    "\"weapon\", 32": "\"weapon\", 32",
    "\"armor\", 2, 1": "\"armor\", 2, 1",
    "\"armor\", 3": "\"armor\", 3",
    "\"armor\", 3, 1": "\"armor\", 3, 1",
    "\"armor\", 4": "\"armor\", 4",
    "\"armor\", 4, 1": "\"armor\", 4, 1",
    "\"armor\", 5": "\"armor\", 5",
    "\"armor\", 5, 1": "\"armor\", 5, 1",
    "\"item\", 64, 1": "\"item\", 64, 1",
    "\"armor\", 6": "\"armor\", 6",
    "\"armor\", 6, 1": "\"armor\", 6, 1",
    "\"armor\", 7": "\"armor\", 7",
    "\"armor\", 12, 1": "\"armor\", 12, 1",
    "\"armor\", 13": "\"armor\", 13",
    "\"armor\", 13, 1": "\"armor\", 13, 1",
    "\"armor\", 14": "\"armor\", 14",
    "\"armor\", 14, 1": "\"armor\", 14, 1",
    "\"armor\", 15": "\"armor\", 15",
    "\"armor\", 15, 1": "\"armor\", 15, 1",
    "\"armor\", 16": "\"armor\", 16",
    "\"armor\", 16, 1": "\"armor\", 16, 1",
    "\"armor\", 17": "\"armor\", 17",
    "\"armor\", 22, 1": "\"armor\", 22, 1",
    "\"armor\", 23": "\"armor\", 23",
    "\"armor\", 23, 1": "\"armor\", 23, 1",
    "\"armor\", 24": "\"armor\", 24",
    "\"armor\", 24, 1": "\"armor\", 24, 1",
    "\"armor\", 25": "\"armor\", 25",
    "\"armor\", 25, 1": "\"armor\", 25, 1",
    "\"armor\", 26": "\"armor\", 26",
    "\"armor\", 26, 1": "\"armor\", 26, 1",
    "\"armor\", 27": "\"armor\", 27",
    "\"item\", 32, 5": "\"item\", 32, 5",
    "\"item\", 34, 3": "\"item\", 34, 3",
    "\"item\", 35": "\"item\", 35",
    "\"item\", 31, 3": "\"item\", 31, 3",
    "\"item\", 33": "\"item\", 33",
    "\"item\", 36, 3": "\"item\", 36, 3",
    "\"item\", 37": "\"item\", 37",
    "\"item\", 53, 3": "\"item\", 53, 3",
    "\"item\", 54": "\"item\", 54",
    "\"item\", 38, 3": "\"item\", 38, 3",
    "\"item\", 39": "\"item\", 39",
    "\"item\", 55, 3": "\"item\", 55, 3",
    "\"item\", 56": "\"item\", 56",
    "\"item\", 40, 3": "\"item\", 40, 3",
    "\"item\", 41": "\"item\", 41",
    "\"item\", 42, 3": "\"item\", 42, 3",
    "\"item\", 43": "\"item\", 43",
    "\"item\", 57, 3": "\"item\", 57, 3",
    "\"item\", 58": "\"item\", 58",
    "\"item\", 44, 3": "\"item\", 44, 3",
    "\"item\", 45": "\"item\", 45",
    "\"item\", 59, 3": "\"item\", 59, 3",
    "\"item\", 60": "\"item\", 60",
    "\"item\", 46, 3": "\"item\", 46, 3",
    "\"item\", 47": "\"item\", 47",
    "\"item\", 48, 3": "\"item\", 48, 3",
    "\"item\", 49": "\"item\", 49",
    "\"item\", 61, 3": "\"item\", 61, 3",
    "\"item\", 62": "\"item\", 62",
    "\"item\", 63, 3": "\"item\", 63, 3",
    "\"item\", 64": "\"item\", 64",
    "\"item\", 50, 3": "\"item\", 50, 3",
    "\"item\", 51": "\"item\", 51",
    "命中率\",\"eva": "命中率\",\"eva",
    "回避率\",\"cri": "回避率\",\"cri",
    "会心率\",\"cev": "会心率\",\"cev",
    "会心回避率\",\"mev": "会心回避率\",\"mev",
    "魔法回避率\",\"mrf": "魔法回避率\",\"mrf",
    "魔法反射率\",\"cnt": "魔法反射率\",\"cnt",
    "反撃率\",\"hrg": "反撃率\",\"hrg",
    "HP再生率\",\"mrg": "HP再生率\",\"mrg",
    "MP再生率\",\"trg": "MP再生率\",\"trg",
    "tgr": "tgr",
    "狙われ率\",\"grd": "狙われ率\",\"grd",
    "防御効果率\",\"rec": "防御効果率\",\"rec",
    "回復効果率\",\"pha": "回復効果率\",\"pha",
    "薬の知識\",\"mcr": "薬の知識\",\"mcr",
    "MP消費率\",\"tcr": "MP消費率\",\"tcr",
    "TPチャージ率\",\"pdr": "TPチャージ率\",\"pdr",
    "物理ダメージ率\",\"mdr": "物理ダメージ率\",\"mdr",
    "魔法ダメージ率\",\"fdr": "魔法ダメージ率\",\"fdr",
    "床ダメージ率\",\"exr": "床ダメージ率\",\"exr",
    "\\\"text\\\"": "\\\"text\\\"",
    "\\\"face\\\",\\\"value\\\"": "\\\"face\\\",\\\"value\\\"",
    "\\\"\\\",\\\"x\\\"": "\\\"\\\",\\\"x\\\"",
    "\\\"0\\\",\\\"y\\\"": "\\\"0\\\",\\\"y\\\"",
    "\\\"8\\\",\\\"width\\\"": "\\\"8\\\",\\\"width\\\"",
    "\\\"width\\\"": "\\\"width\\\"",
    "\\\"text": "\\\"text",
    ",\\\"value\\": ",\\\"value\\",
    "\\\"": "\\\"",
    ",\\\"x\\": ",\\\"x\\",
    ",\\\"y\\": ",\\\"y\\",
    ",\\\"width\\": ",\\\"width\\",
    "\\\"32\\\"": "\\\"32\\\"",
    "\\\"name\\\",\\\"value\\\"": "\\\"name\\\",\\\"value\\\"",
    "\\\"32\\\",\\\"y\\\"": "\\\"32\\\",\\\"y\\\"",
    "\\\"0\\\",\\\"width\\\"": "\\\"0\\\",\\\"width\\\"",
    "\\\"width": "\\\"width",
    "\\\"state\\\",\\\"value\\\"": "\\\"state\\\",\\\"value\\\"",
    "\\\"hp\\\",\\\"value\\\"": "\\\"hp\\\",\\\"value\\\"",
    "\\\"height": "\\\"height",
    "\\\"mp\\\",\\\"value\\\"": "\\\"mp\\\",\\\"value\\\"",
    "\\\"tp\\\",\\\"value\\\"": "\\\"tp\\\",\\\"value\\\"",
    "Enabled Save WindowLayout": "Enabled Save WindowLayout",
    "Enabled Custom Window": "Enabled Custom Window",
    "Number Visible Rows": "Number Visible Rows",
    "Window Padding": "Window Padding",
    "Window Line Height": "Window Line Height",
    "Window Opacity": "Window Opacity",
    "Hide Window Frame": "Hide Window Frame",
    "Number Max Cols": "Number Max Cols",
    "Cursol Line Number": "Cursol Line Number",
    "Cursol Height Space": "Cursol Height Space",
    "statusList": "statusList",
    "Enable Custom Position": "Enable Custom Position",
    "Diff Position X": "Diff Position X",
    "Diff Position Y": "Diff Position Y",
    "Diff Column": "Diff Column",
    "Center Position X": "Center Position X",
    "Center Position Y": "Center Position Y",
    "Max Number of Vertical": "Max Number of Vertical",
    "PointerType": "PointerType",
    "形状タイプ": "形状タイプ",
    "PointerSwitch": "PointerSwitch",
    "スイッチ": "スイッチ",
    "CustomImage": "CustomImage",
    "独自画像": "独自画像",
    "DefaultType": "DefaultType",
    "デフォルト形状タイプ": "デフォルト形状タイプ",
    "ErasePointer": "ErasePointer",
    "キー入力で消去": "キー入力で消去",
    "PointerPath": "PointerPath",
    "ポインタファイルパス": "ポインタファイルパス",
    "url": "url",
    "default": "default",
    "MousePointer": "MousePointer",
    "GameCanvas": "GameCanvas",
    "span": "span",
    "absolute": "absolute",
    "0px": "0px",
    "px": "px",
    "resize": "resize",
    "Cannot find module '": "Cannot find module '",
    "MODULE": "MODULE",
    "OES": "OES",
    "floating point textures not available": "floating point textures not available",
    "MOZ": "MOZ",
    "WEBKIT": "WEBKIT",
    "experimental": "experimental",
    "This browser does not support webGL. Try using the canvas renderer": "This browser does not support webGL. Try using the canvas renderer",
    "Pixi": "Pixi",
    "Error": "Error",
    "Could not initialize shader.": "Could not initialize shader.",
    "gl": "gl",
    "Warning": "Warning",
    "float": "float",
    "vec2": "vec2",
    "vec3": "vec3",
    "vec4": "vec4",
    "int": "int",
    "sampler2D": "sampler2D",
    "ivec2": "ivec2",
    "ivec3": "ivec3",
    "ivec4": "ivec4",
    "bool": "bool",
    "bvec2": "bvec2",
    "bvec3": "bvec3",
    "bvec4": "bvec4",
    "mat2": "mat2",
    "mat3": "mat3",
    "mat4": "mat4",
    "this": "this",
    "value": "value",
    "return this": "return this",
    "= value;": "= value;",
    "var location = this": "var location = this",
    "uniform1f": "uniform1f",
    "location, value": "location, value",
    "uniform2f": "uniform2f",
    ", value": ", value",
    "uniform3f": "uniform3f",
    "uniform4f": "uniform4f",
    "uniform1i": "uniform1i",
    "uniform2i": "uniform2i",
    "uniform3i": "uniform3i",
    "uniform4i": "uniform4i",
    "uniformMatrix2fv": "uniformMatrix2fv",
    "location, false, value": "location, false, value",
    "uniformMatrix3fv": "uniformMatrix3fv",
    "uniformMatrix4fv": "uniformMatrix4fv",
    "uniform1fv": "uniform1fv",
    "uniform2fv": "uniform2fv",
    "uniform3fv": "uniform3fv",
    "uniform4fv": "uniform4fv",
    "uniform1iv": "uniform1iv",
    "uniform2iv": "uniform2iv",
    "uniform3iv": "uniform3iv",
    "uniform4iv": "uniform4iv",
    "precision": "precision",
    "float;": "float;",
    "use restrict": "use restrict",
    "Nexus 7": "Nexus 7",
    "BNTV250": "BNTV250",
    "Kindle Fire": "Kindle Fire",
    "Silk": "Silk",
    "GT": "GT",
    "FBAN": "FBAN",
    "Twitter": "Twitter",
    "isMobile": "isMobile",
    "Cannot call a class as a function": "Cannot call a class as a function",
    "detach": "detach",
    "handlers": "handlers",
    "has": "has",
    "MiniSignal": "MiniSignal",
    "First arg must be a MiniSignalBinding object.": "First arg must be a MiniSignalBinding object.",
    "dispatch": "dispatch",
    "First arg must be a Function.": "First arg must be a Function.",
    "once": "once",
    "detachAll": "detachAll",
    "Object": "Object",
    "cannot be called with null or undefined": "cannot be called with null or undefined",
    "abc": "abc",
    "de": "de",
    "abcdefghijklmnopqrst": "abcdefghijklmnopqrst",
    "source": "source",
    "protocol": "protocol",
    "authority": "authority",
    "userInfo": "userInfo",
    "user": "user",
    "password": "password",
    "host": "host",
    "port": "port",
    "relative": "relative",
    "directory": "directory",
    "file": "file",
    "query": "query",
    "anchor": "anchor",
    "queryKey": "queryKey",
    "strict": "strict",
    "loose": "loose",
    "Arguments to path": "Arguments to path",
    "must be strings": "must be strings",
    "ab": "ab",
    "setTimeout has not been defined": "setTimeout has not been defined",
    "clearTimeout has not been defined": "clearTimeout has not been defined",
    "browser": "browser",
    "process": "process",
    "is not supported": "is not supported",
    "Overflow": "Overflow",
    "input needs wider integers to process": "input needs wider integers to process",
    "Illegal input": "Illegal input",
    "0x80": "0x80",
    "not a basic code point": "not a basic code point",
    "= 0x80": "= 0x80",
    "Invalid input": "Invalid input",
    "not": "not",
    "invalid": "invalid",
    "overflow": "overflow",
    "xn": "xn",
    "punycode": "punycode",
    "object Array": "object Array",
    "symbol": "symbol",
    "mini": "mini",
    "parse": "parse",
    "No url passed to add resource to loader.": "No url passed to add resource to loader.",
    "Cannot add resources while the loader is running.": "Cannot add resources while the loader is running.",
    "Resource named \"": "Resource named \"",
    "\" already exists.": "\" already exists.",
    "withCredentials": "withCredentials",
    "Both name and url are required for constructing a resource.": "Both name and url are required for constructing a resource.",
    "anonymous": "anonymous",
    "progress": "progress",
    "abort": "abort",
    "Complete called again for an already completed resource.": "Complete called again for an already completed resource.",
    "image": "image",
    "audio": "audio",
    "Unsupported element": "Unsupported element",
    "GET": "GET",
    "Failed to load element using": "Failed to load element using",
    "Request failed. Status": "Request failed. Status",
    ", text": ", text",
    "Request was aborted by the user.": "Request was aborted by the user.",
    "Request timed out.": "Request timed out.",
    "Error trying to parse loaded json": "Error trying to parse loaded json",
    "div": "div",
    "Error trying to parse loaded xml": "Error trying to parse loaded xml",
    "application": "application",
    "isDataUrl": "isDataUrl",
    "isComplete": "isComplete",
    "isLoading": "isLoading",
    "arraybuffer": "arraybuffer",
    "blob": "blob",
    "document": "document",
    "json": "json",
    "Callback was already called.": "Callback was already called.",
    "Concurrency must not be zero": "Concurrency must not be zero",
    "task callback must be a function": "task callback must be a function",
    "content": "content",
    ";base64,": ";base64,",
    "querystring": "querystring",
    "Parameter 'url' must be a string, not": "Parameter 'url' must be a string, not",
    "ismobilejs": "ismobilejs",
    "keydown": "keydown",
    "button": "button",
    "HOOK DIV": "HOOK DIV",
    "focus": "focus",
    "mousemove": "mousemove",
    "postrender": "postrender",
    "255,0,0,0": "255,0,0,0",
    "transparent": "transparent",
    "click": "click",
    "focusout": "focusout",
    "displayObject": "displayObject",
    "aria": "aria",
    "mouseover": "mouseover",
    "mouseout": "mouseout",
    "accessibility": "accessibility",
    "accessibleTarget": "accessibleTarget",
    "AccessibilityManager": "AccessibilityManager",
    "ticker": "ticker",
    "view": "view",
    "screen": "screen",
    "pixi": "pixi",
    "this hasn't been initialised - super": "this hasn't been initialised - super",
    "hasn't been called": "hasn't been called",
    "Super expression must either be null or a function, not": "Super expression must either be null or a function, not",
    "lowp": "lowp",
    "mediump": "mediump",
    "highp": "highp",
    "added": "added",
    "addChildAt": "addChildAt",
    "The index": "The index",
    "supplied is out of bounds": "supplied is out of bounds",
    "The supplied DisplayObject must be a child of the caller": "The supplied DisplayObject must be a child of the caller",
    "The supplied index is out of bounds": "The supplied index is out of bounds",
    "getChildAt": "getChildAt",
    "Index": "Index",
    "does not exist.": "does not exist.",
    "removed": "removed",
    "removeChildren": "removeChildren",
    "numeric values are outside the acceptable range.": "numeric values are outside the acceptable range.",
    "eventemitter3": "eventemitter3",
    "setParent": "setParent",
    "Argument must be a Container": "Argument must be a Container",
    "worldTransform": "worldTransform",
    "localTransform": "localTransform",
    "pivot": "pivot",
    "skew": "skew",
    "rotation": "rotation",
    "worldVisible": "worldVisible",
    "mask": "mask",
    "filters": "filters",
    "graphics": "graphics",
    "attribute vec2 aVertexPosition;": "attribute vec2 aVertexPosition;",
    "attribute vec4 aColor;": "attribute vec4 aColor;",
    "uniform mat3 translationMatrix;": "uniform mat3 translationMatrix;",
    "uniform mat3 projectionMatrix;": "uniform mat3 projectionMatrix;",
    "uniform float alpha;": "uniform float alpha;",
    "uniform vec3 tint;": "uniform vec3 tint;",
    "varying vec4 vColor;": "varying vec4 vColor;",
    "void ma": "void ma",
    "= vec4": "= vec4",
    "projectionMatrix * translationMatrix * vec3": "projectionMatrix * translationMatrix * vec3",
    "aVertexPosition, 1": "aVertexPosition, 1",
    "vColor = aColor * vec4": "vColor = aColor * vec4",
    "tint * alpha, alpha": "tint * alpha, alpha",
    "= vColor;": "= vColor;",
    "earcut": "earcut",
    "glCore": "glCore",
    "Bounds": "Bounds",
    "DisplayObject": "DisplayObject",
    "Container": "Container",
    "Transform": "Transform",
    "TransformStatic": "TransformStatic",
    "TransformBase": "TransformBase",
    "Sprite": "Sprite",
    "CanvasSpriteRenderer": "CanvasSpriteRenderer",
    "CanvasTinter": "CanvasTinter",
    "SpriteRenderer": "SpriteRenderer",
    "Text": "Text",
    "TextStyle": "TextStyle",
    "TextMetrics": "TextMetrics",
    "Graphics": "Graphics",
    "GraphicsData": "GraphicsData",
    "GraphicsRenderer": "GraphicsRenderer",
    "CanvasGraphicsRenderer": "CanvasGraphicsRenderer",
    "Spritesheet": "Spritesheet",
    "Texture": "Texture",
    "BaseTexture": "BaseTexture",
    "RenderTexture": "RenderTexture",
    "BaseRenderTexture": "BaseRenderTexture",
    "VideoBaseTexture": "VideoBaseTexture",
    "TextureUvs": "TextureUvs",
    "CanvasRenderTarget": "CanvasRenderTarget",
    "Shader": "Shader",
    "WebGLManager": "WebGLManager",
    "ObjectRenderer": "ObjectRenderer",
    "RenderTarget": "RenderTarget",
    "Quad": "Quad",
    "SpriteMaskFilter": "SpriteMaskFilter",
    "Filter": "Filter",
    "Application": "Application",
    "autoDetectRenderer": "autoDetectRenderer",
    "IDENTITY": "IDENTITY",
    "TEMP": "TEMP",
    "Point": "Point",
    "ObservablePoint": "ObservablePoint",
    "Matrix": "Matrix",
    "GroupD8": "GroupD8",
    "Circle": "Circle",
    "Ellipse": "Ellipse",
    "Polygon": "Polygon",
    "Rectangle": "Rectangle",
    "RoundedRectangle": "RoundedRectangle",
    "top": "top",
    "bottom": "bottom",
    "EMPTY": "EMPTY",
    "backgroundColor": "backgroundColor",
    "Canvas": "Canvas",
    "imageSmoothingEnabled": "imageSmoothingEnabled",
    "webkitImageSmoothingEnabled": "webkitImageSmoothingEnabled",
    "mozImageSmoothingEnabled": "mozImageSmoothingEnabled",
    "oImageSmoothingEnabled": "oImageSmoothingEnabled",
    "msImageSmoothingEnabled": "msImageSmoothingEnabled",
    "prerender": "prerender",
    "multiply": "multiply",
    "lighter": "lighter",
    "overlay": "overlay",
    "darken": "darken",
    "lighten": "lighten",
    "hard": "hard",
    "soft": "soft",
    "difference": "difference",
    "exclusion": "exclusion",
    "hue": "hue",
    "saturate": "saturate",
    "luminosity": "luminosity",
    "dispose": "dispose",
    "WebGL": "WebGL",
    "webglcontextlost": "webglcontextlost",
    "webglcontextrestored": "webglcontextrestored",
    "notMultiplied": "notMultiplied",
    "WEBGL": "WEBGL",
    "context": "context",
    "enable": "enable",
    "disable": "disable",
    "CW": "CW",
    "CCW": "CCW",
    "projectionMatrix|uSampler": "projectionMatrix|uSampler",
    "blendMode": "blendMode",
    "defaultVertexSrc": "defaultVertexSrc",
    "attribute vec2 aTextureCoord;": "attribute vec2 aTextureCoord;",
    "uniform mat3 filterMatrix;": "uniform mat3 filterMatrix;",
    "varying vec2 vTextureCoord;": "varying vec2 vTextureCoord;",
    "varying vec2 vFilterCoord;": "varying vec2 vFilterCoord;",
    "projectionMatrix * vec3": "projectionMatrix * vec3",
    "vFilterCoord =": "vFilterCoord =",
    "filterMatrix * vec3": "filterMatrix * vec3",
    "aTextureCoord, 1": "aTextureCoord, 1",
    "vTextureCoord = aTextureCoord ;": "vTextureCoord = aTextureCoord ;",
    "defaultFragmentSrc": "defaultFragmentSrc",
    "uniform sampler2D uSampler;": "uniform sampler2D uSampler;",
    "uniform sampler2D filterSampler;": "uniform sampler2D filterSampler;",
    "vec4 masky = texture2D": "vec4 masky = texture2D",
    "filterSampler, vFilterCoord": "filterSampler, vFilterCoord",
    "vec4 sample = texture2D": "vec4 sample = texture2D",
    "uSampler, vTextureCoord": "uSampler, vTextureCoord",
    "vec4 color;": "vec4 color;",
    "color = vec4": "color = vec4",
    "else": "else",
    "= mix": "= mix",
    "sample, masky, 0": "sample, masky, 0",
    "*= sample": "*= sample",
    "projectionMatrix|uSampler|filterArea|filterClamp": "projectionMatrix|uSampler|filterArea|filterClamp",
    "uniform": "uniform",
    "uniform mat3 otherMatrix;\r\n\r\nvarying vec2 vMaskCoord;": "uniform mat3 otherMatrix;\r\n\r\nvarying vec2 vMaskCoord;",
    ";": ";",
    "vTextureCoord = aTextureCoord;": "vTextureCoord = aTextureCoord;",
    "vMaskCoord =": "vMaskCoord =",
    "otherMatrix * vec3": "otherMatrix * vec3",
    "varying vec2 vMaskCoord;": "varying vec2 vMaskCoord;",
    "uniform float alpha;\r\nuniform sampler2D mask;": "uniform float alpha;\r\nuniform sampler2D mask;",
    "check clip! this will stop the mask bleeding out from the edges\r\n    vec2 text = abs": "check clip! this will stop the mask bleeding out from the edges\r\n    vec2 text = abs",
    "vMaskCoord - 0": "vMaskCoord - 0",
    "text = step": "text = step",
    "float clip = 1": "float clip = 1",
    "- max": "- max",
    "vec4 original = texture2D": "vec4 original = texture2D",
    "mask, vMaskCoord": "mask, vMaskCoord",
    "original *=": "original *=",
    "masky": "masky",
    "* masky": "* masky",
    "* alpha * clip": "* alpha * clip",
    "= original;": "= original;",
    "bit": "bit",
    "precision mediump float;": "precision mediump float;",
    "float test = 0": "float test = 0",
    "Invalid value of `0` passed to `checkMaxIfStatementsInShader`": "Invalid value of `0` passed to `checkMaxIfStatementsInShader`",
    "if": "if",
    "test ==": "test ==",
    "Provided WebGL context does not have a stencil buffer, masks may not render correctly": "Provided WebGL context does not have a stencil buffer, masks may not render correctly",
    "sprite": "sprite",
    "The frameId \"": "The frameId \"",
    "\" does not exist in the texture cache": "\" does not exist in the texture cache",
    "tint": "tint",
    "texture": "texture",
    "destination": "destination",
    "copy": "copy",
    "varying float vTextureId;": "varying float vTextureId;",
    "uniform sampler2D uSamplers": "uniform sampler2D uSamplers",
    "float textureId = floor": "float textureId = floor",
    "vTextureId+0": "vTextureId+0",
    "= color * vColor;": "= color * vColor;",
    "precision highp float;": "precision highp float;",
    "attribute vec4 aColor;\r\nattribute float aTextureId;": "attribute vec4 aColor;\r\nattribute float aTextureId;",
    "varying vec4 vColor;\r\nvarying float vTextureId;": "varying vec4 vColor;\r\nvarying float vTextureId;",
    "vTextureId = aTextureId;\r\n    vColor = aColor;": "vTextureId = aTextureId;\r\n    vColor = aColor;",
    "textureId ==": "textureId ==",
    "color = texture2D": "color = texture2D",
    "uSamplers": "uSamplers",
    ", vTextureCoord": ", vTextureCoord",
    "style": "style",
    "|MÉq": "|MÉq",
    "alphabetic": "alphabetic",
    "Arial": "Arial",
    "normal": "normal",
    "miter": "miter",
    "align": "align",
    "breakWords": "breakWords",
    "dropShadow": "dropShadow",
    "dropShadowAlpha": "dropShadowAlpha",
    "dropShadowAngle": "dropShadowAngle",
    "dropShadowBlur": "dropShadowBlur",
    "dropShadowColor": "dropShadowColor",
    "dropShadowDistance": "dropShadowDistance",
    "fill": "fill",
    "fillGradientType": "fillGradientType",
    "fillGradientStops": "fillGradientStops",
    "fontFamily": "fontFamily",
    "fontStyle": "fontStyle",
    "fontVariant": "fontVariant",
    "fontWeight": "fontWeight",
    "letterSpacing": "letterSpacing",
    "leading": "leading",
    "lineJoin": "lineJoin",
    "miterLimit": "miterLimit",
    "padding": "padding",
    "stroke": "stroke",
    "strokeThickness": "strokeThickness",
    "textBaseline": "textBaseline",
    "trim": "trim",
    "wordWrap": "wordWrap",
    "wordWrapWidth": "wordWrapWidth",
    "svg": "svg",
    "Invalid image type in data URI.": "Invalid image type in data URI.",
    "base64": "base64",
    "Your browser doesn't support base64 conversions.": "Your browser doesn't support base64 conversions.",
    "Failed to load SVG using XHR.": "Failed to load SVG using XHR.",
    "The SVG image must have width and height defined": "The SVG image must have width and height defined",
    "in pixels": "in pixels",
    ", canvas API needs them.": ", canvas API needs them.",
    "canvas_": "canvas_",
    "BaseTexture added to the cache with an id": "BaseTexture added to the cache with an id",
    "that already had an entry": "that already had an entry",
    "Please use RenderTexture": "Please use RenderTexture",
    "instead of the ctor directly.": "instead of the ctor directly.",
    "BATCH": "BATCH",
    "attempt to use diamond": "attempt to use diamond",
    "UVs. If you are sure, set rotation manually": "UVs. If you are sure, set rotation manually",
    "HTMLCanvasElement": "HTMLCanvasElement",
    "Texture added to the cache with an id": "Texture added to the cache with an id",
    "frame": "frame",
    "Texture Error": "Texture Error",
    "frame does not fit inside the base Texture dimensions": "frame does not fit inside the base Texture dimensions",
    "rotate": "rotate",
    "No video source element specified.": "No video source element specified.",
    "play": "play",
    "canplay": "canplay",
    "video_": "video_",
    "webkit": "webkit",
    "playsinline": "playsinline",
    "autoUpdate": "autoUpdate",
    "video/": "video/",
    "FPS": "FPS",
    "minFPS": "minFPS",
    "remove": "remove",
    "chrome": "chrome",
    "PixiJS": "PixiJS",
    "- ✰": "- ✰",
    "http": "http",
    "background": "background",
    "; padding": "; padding",
    "5px 0;": "5px 0;",
    "; background": "; background",
    "- http": "- http",
    "Deprecation Warning": "Deprecation Warning",
    ";background": ";background",
    "font": "font",
    ";color": ";color",
    "SpriteBatch does not exist any more,": "SpriteBatch does not exist any more,",
    "please use the new ParticleContainer instead.": "please use the new ParticleContainer instead.",
    "The loader system was overhauled in PixiJS v3,": "The loader system was overhauled in PixiJS v3,",
    "please see the new PIXI": "please see the new PIXI",
    "class.": "class.",
    "You do not need to use a PIXI Stage any more, you can simply render any container.": "You do not need to use a PIXI Stage any more, you can simply render any container.",
    "DisplayObjectContainer has been shortened to Container, please use Container from now on.": "DisplayObjectContainer has been shortened to Container, please use Container from now on.",
    "The Strip class has been renamed to Mesh and moved to mesh": "The Strip class has been renamed to Mesh and moved to mesh",
    "please use mesh": "please use mesh",
    "from now on.": "from now on.",
    "The Rope class has been moved to mesh": "The Rope class has been moved to mesh",
    "The ParticleContainer class has been moved to particles": "The ParticleContainer class has been moved to particles",
    "please use particles": "please use particles",
    "The MovieClip class has been moved to extras": "The MovieClip class has been moved to extras",
    "please use extras": "please use extras",
    "The TilingSprite class has been moved to extras": "The TilingSprite class has been moved to extras",
    "The BitmapText class has been moved to extras": "The BitmapText class has been moved to extras",
    "The blendModes has been moved to BLEND": "The blendModes has been moved to BLEND",
    "please use BLEND": "please use BLEND",
    "The scaleModes has been moved to SCALE": "The scaleModes has been moved to SCALE",
    "please use SCALE": "please use SCALE",
    "The BaseTextureCache class has been moved to utils": "The BaseTextureCache class has been moved to utils",
    "please use utils": "please use utils",
    "The TextureCache class has been moved to utils": "The TextureCache class has been moved to utils",
    "The math namespace is deprecated, please access members already accessible on PIXI.": "The math namespace is deprecated, please access members already accessible on PIXI.",
    "AstractFilter has been renamed to Filter, please use PIXI": "AstractFilter has been renamed to Filter, please use PIXI",
    "TransformManual has been renamed to TransformBase, please update your pixi": "TransformManual has been renamed to TransformBase, please update your pixi",
    "PIXI": "PIXI",
    "has been deprecated, please use PIXI": "has been deprecated, please use PIXI",
    "TRANSFORM": "TRANSFORM",
    "GC": "GC",
    "WRAP": "WRAP",
    "SCALE": "SCALE",
    "PRECISION": "PRECISION",
    "DEFAULT": "DEFAULT",
    "PIXI.": "PIXI.",
    "has been deprecated,": "has been deprecated,",
    "please use PIXI": "please use PIXI",
    "The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.": "The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.",
    "generateTexture has moved to the renderer, please use renderer": "generateTexture has moved to the renderer, please use renderer",
    "graphics generate texture has moved to the renderer.": "graphics generate texture has moved to the renderer.",
    "Or to render a graphics to a texture using canvas please use generateCanvasTexture": "Or to render a graphics to a texture using canvas please use generateCanvasTexture",
    "is now deprecated, please use renderer": "is now deprecated, please use renderer",
    "renderTexture": "renderTexture",
    "setTexture is now deprecated, please use the texture property, e": "setTexture is now deprecated, please use the texture property, e",
    "= texture;": "= texture;",
    "setText is now deprecated, please use the text property, e": "setText is now deprecated, please use the text property, e",
    "myBitmapText": "myBitmapText",
    "= 'my text';": "= 'my text';",
    "myText": "myText",
    "is now deprecated, please use the TextMetrics": "is now deprecated, please use the TextMetrics",
    "is deprecated": "is deprecated",
    "setStyle is now deprecated, please use the style property, e": "setStyle is now deprecated, please use the style property, e",
    "= style;": "= style;",
    "determineFontProperties is now deprecated, please use TextMetrics": "determineFontProperties is now deprecated, please use TextMetrics",
    "method": "method",
    "getFontStyle is now deprecated, please use TextStyle": "getFontStyle is now deprecated, please use TextStyle",
    "instead": "instead",
    "text style property 'font' is now deprecated, please use the": "text style property 'font' is now deprecated, please use the",
    "'fontFamily', 'fontSize', 'fontStyle', 'fontVariant' and 'fontWeight' properties from now on": "'fontFamily', 'fontSize', 'fontStyle', 'fontVariant' and 'fontWeight' properties from now on",
    "'fontFamily','fontSize',fontStyle','fontVariant' and 'fontWeight' properties from now on": "'fontFamily','fontSize',fontStyle','fontVariant' and 'fontWeight' properties from now on",
    "italic": "italic",
    "oblique": "oblique",
    "small": "small",
    "setFrame is now deprecated, please use the frame property, e": "setFrame is now deprecated, please use the frame property, e",
    "myTexture": "myTexture",
    "= frame;": "= frame;",
    "is deprecated, please use Texture": "is deprecated, please use Texture",
    "Be aware that Texture": "Be aware that Texture",
    "does not automatically its BaseTexture from the BaseTextureCache.": "does not automatically its BaseTexture from the BaseTextureCache.",
    "For that, use BaseTexture": "For that, use BaseTexture",
    "is an undocumented alias, please use SpriteMaskFilter from now on.": "is an undocumented alias, please use SpriteMaskFilter from now on.",
    "utils": "utils",
    "is deprecated, please use utils": "is deprecated, please use utils",
    "is deprecated, please use CanvasTinter": "is deprecated, please use CanvasTinter",
    "from now on": "from now on",
    "is deprecated, please use PIXI": "is deprecated, please use PIXI",
    "renderer": "renderer",
    "is now deprecated,": "is now deprecated,",
    "please use renderer": "please use renderer",
    "& renderer": "& renderer",
    "UPLOADS": "UPLOADS",
    "has been removed. Please set": "has been removed. Please set",
    "on your renderer": "on your renderer",
    "has been removed. Please use": "has been removed. Please use",
    "The isJson property is deprecated, please use `resource": "The isJson property is deprecated, please use `resource",
    "=== Resource": "=== Resource",
    "`.": "`.",
    "The isXml property is deprecated, please use `resource": "The isXml property is deprecated, please use `resource",
    "The isImage property is deprecated, please use `resource": "The isImage property is deprecated, please use `resource",
    "The isAudio property is deprecated, please use `resource": "The isAudio property is deprecated, please use `resource",
    "The isVideo property is deprecated, please use `resource": "The isVideo property is deprecated, please use `resource",
    "The before": "The before",
    "method is deprecated, please use pre": "method is deprecated, please use pre",
    "The after": "The after",
    "method is deprecated, please use use": "method is deprecated, please use use",
    "defaultCursor": "defaultCursor",
    "Property defaultCursor has been replaced with 'cursor'.": "Property defaultCursor has been replaced with 'cursor'.",
    "defaultCursorStyle": "defaultCursorStyle",
    "Property defaultCursorStyle has been replaced with 'cursorStyles": "Property defaultCursorStyle has been replaced with 'cursorStyles",
    "'.": "'.",
    "currentCursorStyle": "currentCursorStyle",
    "Property currentCursorStyle has been removed.": "Property currentCursorStyle has been removed.",
    "See the currentCursorMode property, which works differently.": "See the currentCursorMode property, which works differently.",
    "extract": "extract",
    "totalFrames": "totalFrames",
    "textures": "textures",
    "currentFrame": "currentFrame",
    "info": "info",
    "size": "size",
    "char": "char",
    "id": "id",
    "xoffset": "xoffset",
    "yoffset": "yoffset",
    "xadvance": "xadvance",
    "kerning": "kerning",
    "first": "first",
    "second": "second",
    "amount": "amount",
    "maxWidth": "maxWidth",
    "maxLineHeight": "maxLineHeight",
    "textWidth": "textWidth",
    "textHeight": "textHeight",
    "tilingSprite": "tilingSprite",
    "repeat": "repeat",
    "clampMargin": "clampMargin",
    "tileScale": "tileScale",
    "tilePosition": "tilePosition",
    "cacheAsBitmap_": "cacheAsBitmap_",
    "AnimatedSprite": "AnimatedSprite",
    "TextureTransform": "TextureTransform",
    "TilingSprite": "TilingSprite",
    "TilingSpriteRenderer": "TilingSpriteRenderer",
    "BitmapText": "BitmapText",
    "uniform mat3 translationMatrix;\r\nuniform mat3 uTransform;": "uniform mat3 translationMatrix;\r\nuniform mat3 uTransform;",
    "vTextureCoord =": "vTextureCoord =",
    "uTransform * vec3": "uTransform * vec3",
    "uniform vec4 uColor;": "uniform vec4 uColor;",
    "uniform mat3 uMapCoord;\r\nuniform vec4 uClampFrame;\r\nuniform vec2 uClampOffset;": "uniform mat3 uMapCoord;\r\nuniform vec4 uClampFrame;\r\nuniform vec2 uClampOffset;",
    "vec2 coord = mod": "vec2 coord = mod",
    "vTextureCoord - uClampOffset, vec2": "vTextureCoord - uClampOffset, vec2",
    "+ uClampOffset;\r\n    coord =": "+ uClampOffset;\r\n    coord =",
    "uMapCoord * vec3": "uMapCoord * vec3",
    "coord, 1": "coord, 1",
    "coord = clamp": "coord = clamp",
    "coord, uClampFrame": "coord, uClampFrame",
    "uClampFrame": "uClampFrame",
    "uSampler, coord": "uSampler, coord",
    "= sample * uColor;": "= sample * uColor;",
    "blur": "blur",
    "quality": "quality",
    "blurX": "blurX",
    "blurY": "blurY",
    "varying vec2 vBlurTexCoords": "varying vec2 vBlurTexCoords",
    "+= texture2D": "+= texture2D",
    "uSampler, vBlurTexCoords": "uSampler, vBlurTexCoords",
    "uniform float strength;": "uniform float strength;",
    "aVertexPosition": "aVertexPosition",
    ", 1": ", 1",
    "vBlurTexCoords": "vBlurTexCoords",
    "= aTextureCoord + vec2": "= aTextureCoord + vec2",
    "* strength, 0": "* strength, 0",
    "* strength": "* strength",
    "uniform float m": "uniform float m",
    "uniform float uAlpha;": "uniform float uAlpha;",
    "vec4 c = texture2D": "vec4 c = texture2D",
    "uAlpha == 0": "uAlpha == 0",
    "= c;\r\n        return;": "= c;\r\n        return;",
    "Un": "Un",
    "alpha before applying the color matrix. See issue": "alpha before applying the color matrix. See issue",
    "vec4 result;\r\n\r\n    result": "vec4 result;\r\n\r\n    result",
    "* c": "* c",
    "result": "result",
    "+=": "+=",
    "+= m": "+= m",
    "vec3 rgb = mix": "vec3 rgb = mix",
    "uAlpha": "uAlpha",
    "Premultiply alpha again.\r\n    rgb *= result": "Premultiply alpha again.\r\n    rgb *= result",
    "rgb, result": "rgb, result",
    "matrix": "matrix",
    "alpha": "alpha",
    "uniform vec2 scale;": "uniform vec2 scale;",
    "uniform sampler2D mapSampler;\r\n\r\nuniform vec4 filterClamp;": "uniform sampler2D mapSampler;\r\n\r\nuniform vec4 filterClamp;",
    "vec4 map =  texture2D": "vec4 map =  texture2D",
    "mapSampler, vFilterCoord": "mapSampler, vFilterCoord",
    "map": "map",
    "*= scale;": "*= scale;",
    "= texture2D": "= texture2D",
    "uSampler, clamp": "uSampler, clamp",
    "vTextureCoord": "vTextureCoord",
    "+ map": "+ map",
    "filterClamp": "filterClamp",
    "varying vec2 v": "varying vec2 v",
    "uniform vec4 filterArea;": "uniform vec4 filterArea;",
    "vec2 mapCoord": "vec2 mapCoord",
    "vec2 coord": "vec2 coord",
    "coord *= filterArea": "coord *= filterArea",
    "coord += filterArea": "coord += filterArea",
    "return coord;": "return coord;",
    "vec2 unmapCoord": "vec2 unmapCoord",
    "coord": "coord",
    "filterArea": "filterArea",
    "void texcoords": "void texcoords",
    "vec2 fragCoord, vec2 resolution,\r\n               out vec2 v": "vec2 fragCoord, vec2 resolution,\r\n               out vec2 v",
    "out vec2 v": "out vec2 v",
    "vec2 inverseVP = 1": "vec2 inverseVP = 1",
    "/ resolution": "/ resolution",
    "v": "v",
    "fragCoord + vec2": "fragCoord + vec2",
    "* inverseVP;\r\n    v": "* inverseVP;\r\n    v",
    "= vec2": "= vec2",
    "fragCoord * inverseVP": "fragCoord * inverseVP",
    "vTextureCoord = aTextureCoord;\r\n\r\n   vec2 fragCoord = vTextureCoord * filterArea": "vTextureCoord = aTextureCoord;\r\n\r\n   vec2 fragCoord = vTextureCoord * filterArea",
    "texcoords": "texcoords",
    "fragCoord, filterArea": "fragCoord, filterArea",
    "Basic FXAA implementation based on the code on geeks3d": "Basic FXAA implementation based on the code on geeks3d",
    "with the\r\n modification that the texture2DLod stuff was removed since it's\r\n unsupported by WebGL.": "with the\r\n modification that the texture2DLod stuff was removed since it's\r\n unsupported by WebGL.",
    "From": "From",
    "https": "https",
    "Copyright": "Copyright",
    "2011 by Armin Ronacher.\r\n \r\n Some rights reserved.\r\n \r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions are\r\n met": "2011 by Armin Ronacher.\r\n \r\n Some rights reserved.\r\n \r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions are\r\n met",
    "* Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n \r\n * Redistributions in binary form must reproduce the above\r\n copyright notice, this list of conditions and the following\r\n disclaimer in the documentation and": "* Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n \r\n * Redistributions in binary form must reproduce the above\r\n copyright notice, this list of conditions and the following\r\n disclaimer in the documentation and",
    "other materials provided\r\n with the distribution.\r\n \r\n * The names of the contributors may not be used to endorse or\r\n promote products derived from this software without specific\r\n prior written permission.\r\n \r\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES": "other materials provided\r\n with the distribution.\r\n \r\n * The names of the contributors may not be used to endorse or\r\n promote products derived from this software without specific\r\n prior written permission.\r\n \r\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES",
    "INCLUDING, BUT NOT\r\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION": "INCLUDING, BUT NOT\r\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION",
    "HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT": "HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
    "INCLUDING NEGLIGENCE OR OTHERWISE": "INCLUDING NEGLIGENCE OR OTHERWISE",
    "ARISING IN ANY WAY OUT OF THE USE\r\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */": "ARISING IN ANY WAY OUT OF THE USE\r\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */",
    "FXAA": "FXAA",
    "/ 8": "/ 8",
    "version for mobile, where dependent": "version for mobile, where dependent",
    "reads can be a bottleneck\r\nvec4 fxaa": "reads can be a bottleneck\r\nvec4 fxaa",
    "sampler2D tex, vec2 fragCoord, vec2 resolution,\r\n          vec2 v": "sampler2D tex, vec2 fragCoord, vec2 resolution,\r\n          vec2 v",
    "vec2 v": "vec2 v",
    "vec4 color;\r\n    mediump vec2 inverseVP = vec2": "vec4 color;\r\n    mediump vec2 inverseVP = vec2",
    "vec3 rgbNW = texture2D": "vec3 rgbNW = texture2D",
    "tex, v": "tex, v",
    "vec3 rgbNE = texture2D": "vec3 rgbNE = texture2D",
    "vec3 rgbSW = texture2D": "vec3 rgbSW = texture2D",
    "vec3 rgbSE = texture2D": "vec3 rgbSE = texture2D",
    "vec4 texColor = texture2D": "vec4 texColor = texture2D",
    "vec3 rgbM  = texColor": "vec3 rgbM  = texColor",
    "vec3 luma = vec3": "vec3 luma = vec3",
    "float lumaNW = dot": "float lumaNW = dot",
    "rgbNW, luma": "rgbNW, luma",
    "float lumaNE = dot": "float lumaNE = dot",
    "rgbNE, luma": "rgbNE, luma",
    "float lumaSW = dot": "float lumaSW = dot",
    "rgbSW, luma": "rgbSW, luma",
    "float lumaSE = dot": "float lumaSE = dot",
    "rgbSE, luma": "rgbSE, luma",
    "float lumaM  = dot": "float lumaM  = dot",
    "rgbM,  luma": "rgbM,  luma",
    "float lumaMin = m": "float lumaMin = m",
    ", m": ", m",
    "float lumaMax = max": "float lumaMax = max",
    "lumaM, max": "lumaM, max",
    "lumaNW, lumaNE": "lumaNW, lumaNE",
    ", max": ", max",
    "lumaSW, lumaSE": "lumaSW, lumaSE",
    "mediump vec2 dir;\r\n    dir": "mediump vec2 dir;\r\n    dir",
    "+ lumaNE": "+ lumaNE",
    "lumaSW + lumaSE": "lumaSW + lumaSE",
    "dir": "dir",
    "lumaNW + lumaSW": "lumaNW + lumaSW",
    "lumaNE + lumaSE": "lumaNE + lumaSE",
    "float dirReduce = max": "float dirReduce = max",
    "lumaNW + lumaNE + lumaSW + lumaSE": "lumaNW + lumaNE + lumaSW + lumaSE",
    "* FXAA": "* FXAA",
    "float rcpDirMin = 1": "float rcpDirMin = 1",
    ", abs": ", abs",
    "+ dirReduce": "+ dirReduce",
    "dir = m": "dir = m",
    ",\r\n              max": ",\r\n              max",
    "dir * rcpDirMin": "dir * rcpDirMin",
    "* inverseVP;\r\n    \r\n    vec3 rgbA = 0": "* inverseVP;\r\n    \r\n    vec3 rgbA = 0",
    "texture2D": "texture2D",
    "tex, fragCoord * inverseVP + dir *": "tex, fragCoord * inverseVP + dir *",
    "/ 3": "/ 3",
    "- 0": "- 0",
    "+\r\n                       texture2D": "+\r\n                       texture2D",
    "vec3 rgbB = rgbA * 0": "vec3 rgbB = rgbA * 0",
    "+ 0": "+ 0",
    "+\r\n                                     texture2D": "+\r\n                                     texture2D",
    "tex, fragCoord * inverseVP + dir * 0": "tex, fragCoord * inverseVP + dir * 0",
    "float lumaB = dot": "float lumaB = dot",
    "rgbB, luma": "rgbB, luma",
    "lumaB": "lumaB",
    "lumaMin": "lumaMin",
    "||": "||",
    "lumaMax": "lumaMax",
    "rgbA, texColor": "rgbA, texColor",
    "else\r\n        color = vec4": "else\r\n        color = vec4",
    "rgbB, texColor": "rgbB, texColor",
    "return color;": "return color;",
    "void main": "void main",
    "vec2 fragCoord = vTextureCoord * filterArea": "vec2 fragCoord = vTextureCoord * filterArea",
    "vec4 color;\r\n\r\n    color = fxaa": "vec4 color;\r\n\r\n    color = fxaa",
    "uSampler, fragCoord, filterArea": "uSampler, fragCoord, filterArea",
    "= color;": "= color;",
    "lumaB  lumaMax": "lumaB  lumaMax",
    "FXAAFilter": "FXAAFilter",
    "NoiseFilter": "NoiseFilter",
    "DisplacementFilter": "DisplacementFilter",
    "BlurFilter": "BlurFilter",
    "BlurXFilter": "BlurXFilter",
    "BlurYFilter": "BlurYFilter",
    "ColorMatrixFilter": "ColorMatrixFilter",
    "VoidFilter": "VoidFilter",
    "varying vec4 vColor;\r\n\r\nuniform float uNoise;\r\nuniform float uSeed;": "varying vec4 vColor;\r\n\r\nuniform float uNoise;\r\nuniform float uSeed;",
    "float rand": "float rand",
    "vec2 co": "vec2 co",
    "return fract": "return fract",
    "* 43758": "* 43758",
    "vec4 color = texture2D": "vec4 color = texture2D",
    "float randomValue = rand": "float randomValue = rand",
    "* uSeed": "* uSeed",
    "float diff =": "float diff =",
    "randomValue - 0": "randomValue - 0",
    "* uNoise;": "* uNoise;",
    "+= diff;": "+= diff;",
    "Premultiply alpha again.": "Premultiply alpha again.",
    "*= color": "*= color",
    "noise": "noise",
    "seed": "seed",
    "void": "void",
    "pointerId": "pointerId",
    "MOUSE": "MOUSE",
    "ontouchstart": "ontouchstart",
    "inherit": "inherit",
    "touch": "touch",
    "pointermove": "pointermove",
    "pointerdown": "pointerdown",
    "pointerleave": "pointerleave",
    "pointerover": "pointerover",
    "pointercancel": "pointercancel",
    "pointerup": "pointerup",
    "mousedown": "mousedown",
    "mouseup": "mouseup",
    "touchstart": "touchstart",
    "touchcancel": "touchcancel",
    "touchend": "touchend",
    "touchmove": "touchmove",
    "mouse": "mouse",
    "pen": "pen",
    "rightdown": "rightdown",
    "rightup": "rightup",
    "rightclick": "rightclick",
    "rightupoutside": "rightupoutside",
    "mouseupoutside": "mouseupoutside",
    "pointertap": "pointertap",
    "tap": "tap",
    "pointerupoutside": "pointerupoutside",
    "touchendoutside": "touchendoutside",
    "pointerout": "pointerout",
    "interaction": "interaction",
    "flags": "flags",
    "over": "over",
    "rightDown": "rightDown",
    "leftDown": "leftDown",
    "InteractionData": "InteractionData",
    "InteractionManager": "InteractionManager",
    "interactiveTarget": "interactiveTarget",
    "InteractionTrackingData": "InteractionTrackingData",
    "InteractionEvent": "InteractionEvent",
    "page": "page",
    "resource": "resource",
    "bitmapFontParser": "bitmapFontParser",
    "parseBitmapFontData": "parseBitmapFontData",
    "spritesheetParser": "spritesheetParser",
    "getResourcePath": "getResourcePath",
    "textureParser": "textureParser",
    "Resource": "Resource",
    "loader": "loader",
    "complete": "complete",
    "fnt": "fnt",
    "mesh": "mesh",
    "leftWidth": "leftWidth",
    "rightWidth": "rightWidth",
    "topHeight": "topHeight",
    "bottomHeight": "bottomHeight",
    "Mesh": "Mesh",
    "MeshRenderer": "MeshRenderer",
    "CanvasMeshRenderer": "CanvasMeshRenderer",
    "Plane": "Plane",
    "NineSlicePlane": "NineSlicePlane",
    "Rope": "Rope",
    "* uColor;": "* uColor;",
    "uvs": "uvs",
    "ParticleContainer": "ParticleContainer",
    "ParticleRenderer": "ParticleRenderer",
    "particle": "particle",
    "attribute float aColor;": "attribute float aColor;",
    "attribute vec2 aPositionCoord;": "attribute vec2 aPositionCoord;",
    "attribute vec2 aScale;": "attribute vec2 aScale;",
    "attribute float aRotation;": "attribute float aRotation;",
    "varying float vColor;": "varying float vColor;",
    "vec2 v = aVertexPosition;": "vec2 v = aVertexPosition;",
    "* cos": "* cos",
    "aRotation": "aRotation",
    "* s": "* s",
    "v = v + aPositionCoord;": "v = v + aPositionCoord;",
    "v, 1": "v, 1",
    "vColor = aColor;": "vColor = aColor;",
    "* vColor * uColor;": "* vColor * uColor;",
    "== 0": "== 0",
    "discard;": "discard;",
    "ms": "ms",
    "moz": "moz",
    "RequestAnimationFrame": "RequestAnimationFrame",
    "CancelAnimationFrame": "CancelAnimationFrame",
    "CancelRequestAnimationFrame": "CancelRequestAnimationFrame",
    "is not a function": "is not a function",
    "prepare": "prepare",
    "BasePrepare": "BasePrepare",
    "CountLimiter": "CountLimiter",
    "TimeLimiter": "TimeLimiter",
    "tilemap": "tilemap",
    "varying vec4 vFrame;": "varying vec4 vFrame;",
    "uniform vec4 shadowColor;": "uniform vec4 shadowColor;",
    "uniform vec2 uSamplerSize": "uniform vec2 uSamplerSize",
    "vec2 textureCoord = clamp": "vec2 textureCoord = clamp",
    "vTextureCoord, vFrame": "vTextureCoord, vFrame",
    "vFrame": "vFrame",
    "vTextureId + 0": "vTextureId + 0",
    "attribute vec4 aFrame;\nattribute vec2 aAnim;\nattribute float aTextureId;": "attribute vec4 aFrame;\nattribute vec2 aAnim;\nattribute float aTextureId;",
    "uniform vec2 animationFrame;": "uniform vec2 animationFrame;",
    "vec2 anim = aAnim * animationFrame;\n   vTextureCoord = aTextureCoord + anim;\n   vFrame = aFrame + vec4": "vec2 anim = aAnim * animationFrame;\n   vTextureCoord = aTextureCoord + anim;\n   vFrame = aFrame + vec4",
    "anim, anim": "anim, anim",
    "vTextureId = aTextureId;": "vTextureId = aTextureId;",
    "vTextureId": "vTextureId",
    "color = shadowColor;": "color = shadowColor;",
    ", textureCoord * uSamplerSize": ", textureCoord * uSamplerSize",
    "attribute vec2 aAnim;\nattribute float aTextureId;\nattribute float aSize;": "attribute vec2 aAnim;\nattribute float aTextureId;\nattribute float aSize;",
    "uniform vec2 samplerSize;\nuniform vec2 animationFrame;\nuniform float projectionScale;": "uniform vec2 samplerSize;\nuniform vec2 animationFrame;\nuniform float projectionScale;",
    "varying float vSize;": "varying float vSize;",
    "aVertexPosition + aSize * 0": "aVertexPosition + aSize * 0",
    "= aSize * projectionScale;\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\n   vTextureId = aTextureId;\n   vSize = aSize;": "= aSize * projectionScale;\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\n   vTextureId = aTextureId;\n   vSize = aSize;",
    "uniform vec2 pointScale;": "uniform vec2 pointScale;",
    "float margin = 0": "float margin = 0",
    "/ vSize;\n   vec2 pointCoord =": "/ vSize;\n   vec2 pointCoord =",
    "* pointScale + 0": "* pointScale + 0",
    "vec2 clamped = vec2": "vec2 clamped = vec2",
    "clamp": "clamp",
    "pointCoord": "pointCoord",
    "margin, 1": "margin, 1",
    "- margin": "- margin",
    ", clamp": ", clamp",
    "vec2 textureCoord = pointCoord * vSize + vTextureCoord;\n   float textureId = vTextureId;\n   vec4 color;": "vec2 textureCoord = pointCoord * vSize + vTextureCoord;\n   float textureId = vTextureId;\n   vec4 color;",
    "uniform vec4 uTextureClamp;": "uniform vec4 uTextureClamp;",
    "vTextureCoord, uTextureClamp": "vTextureCoord, uTextureClamp",
    "uTextureClamp": "uTextureClamp",
    "uniform mat3 uTransform;": "uniform mat3 uTransform;",
    "vec2 textureCoord = vTextureCoord;": "vec2 textureCoord = vTextureCoord;",
    "uniform mat3 uMapCoord;\nuniform vec4 uClampFrame;\nuniform vec2 uClampOffset;": "uniform mat3 uMapCoord;\nuniform vec4 uClampFrame;\nuniform vec2 uClampOffset;",
    "vec2 textureCoord = mod": "vec2 textureCoord = mod",
    "+ uClampOffset;": "+ uClampOffset;",
    "textureCoord =": "textureCoord =",
    "textureCoord, 1": "textureCoord, 1",
    "textureCoord = clamp": "textureCoord = clamp",
    "textureCoord, uClampFrame": "textureCoord, uClampFrame",
    "uniform mat3 mapMatrix;": "uniform mat3 mapMatrix;",
    "varying vec2 vMapCoord;": "varying vec2 vMapCoord;",
    "vMapCoord =": "vMapCoord =",
    "mapMatrix * vec3": "mapMatrix * vec3",
    "uniform sampler2D uSampler": "uniform sampler2D uSampler",
    "vec4 source = texture2D": "vec4 source = texture2D",
    "uSampler": "uSampler",
    ", textureCoord": ", textureCoord",
    "* uColor;\n    vec4 target = texture2D": "* uColor;\n    vec4 target = texture2D",
    ", vMapCoord": ", vMapCoord",
    "hardlight": "hardlight",
    "return;": "return;",
    "premultiplied\n    vec3 Cb = source": "premultiplied\n    vec3 Cb = source",
    "Cs;": "Cs;",
    "Cs = target": "Cs = target",
    "/ target": "/ target",
    "vec3 multiply = Cb * Cs * 2": "vec3 multiply = Cb * Cs * 2",
    "vec3 Cs2 = Cs * 2": "vec3 Cs2 = Cs * 2",
    "- 1": "- 1",
    "vec3 screen = Cb + Cs2 - Cb * Cs2;\n    vec3 B;": "vec3 screen = Cb + Cs2 - Cb * Cs2;\n    vec3 B;",
    "Cb": "Cb",
    "= multiply": "= multiply",
    "= screen": "= screen",
    "vec4 res;\n    res": "vec4 res;\n    res",
    "- source": "- source",
    "* Cs + source": "* Cs + source",
    "* B;\n    res": "* B;\n    res",
    "= source": "= source",
    "+ target": "+ target",
    "res": "res",
    "* res": "* res",
    "= 0": "= 0",
    "vec3 Cb2 = Cb * 2": "vec3 Cb2 = Cb * 2",
    "vec3 screen = Cb2 + Cs - Cb2 * Cs;\n    vec3 B;": "vec3 screen = Cb2 + Cs - Cb2 * Cs;\n    vec3 B;",
    "Cs": "Cs",
    "picture": "picture",
    "array": "array",
    "removeEventListener": "removeEventListener",
    "addEventListener": "addEventListener",
    "detachEvent": "detachEvent",
    "attachEvent": "attachEvent",
    "999+": "999+",
    "fps": "fps",
    "show": "show",
    "block": "block",
    "now": "now",
    "webkitNow": "webkitNow",
    "textContent": "textContent",
    "innerText": "innerText",
    "5px": "5px",
    "dark": "dark",
    "toggleOn": "toggleOn",
    "theme": "theme",
    "heat": "heat",
    "graph": "graph",
    "history": "history",
    "position zIndex left top right bottom margin": "position zIndex left top right bottom margin",
    "95px": "95px",
    "30px": "30px",
    "5px 10px": "5px 10px",
    "24px": "24px",
    "Consolas, Andale Mono, monospace": "Consolas, Andale Mono, monospace",
    "12px": "12px",
    "32px": "32px",
    "sans": "sans",
    "100%": "100%",
    "1px solid": "1px solid",
    "1px 1px 0": "1px 1px 0",
    "1px 1px 0 rgba": "1px 1px 0 rgba",
    "255,255,255,": "255,255,255,",
    "0 rgba": "0 rgba",
    "0 0 0 1px rgba": "0 0 0 1px rgba",
    "0,0,0,": "0,0,0,",
    "0 5px": "0 5px",
    "40px": "40px",
    "42px": "42px",
    "emptied": "emptied",
    "webkitbeginfullscreen": "webkitbeginfullscreen",
    "webkitendfullscreen": "webkitendfullscreen",
    "seeking": "seeking",
    "paused": "paused",
    "muted": "muted",
    "playbackRate": "playbackRate",
    "loop": "loop",
    "seeked": "seeked",
    "timeupdate": "timeupdate",
    "IIV": "IIV",
    "iphone": "iphone",
    "is not guaranteed to work in emulated environments": "is not guaranteed to work in emulated environments",
    "nativeplay": "nativeplay",
    "nativepause": "nativepause",
    "This is not a class": "This is not a class",
    "CriOS": "CriOS",
    "passive": "passive",
    "GameFont": "GameFont",
    "baseTexture": "baseTexture",
    "rect": "rect",
    "smooth": "smooth",
    "paintOpacity": "paintOpacity",
    "Italic": "Italic",
    "round": "round",
    "requestCompleted": "requestCompleted",
    "purged": "purged",
    "decrypting": "decrypting",
    "decryptCompleted": "decryptCompleted",
    "pending": "pending",
    "Loading Error": "Loading Error",
    "Failed to load": "Failed to load",
    "Retry": "Retry",
    "head": "head",
    "\"; src": "\"; src",
    "10px \"": "10px \"",
    "abcdefghijklmnopqrstuvwxyz": "abcdefghijklmnopqrstuvwxyz",
    ", sans": ", sans",
    "40px sans": "40px sans",
    "boxWidth": "boxWidth",
    "boxHeight": "boxHeight",
    "color=\"yellow\"": "color=\"yellow\"",
    "color=\"white\"": "color=\"white\"",
    "saturation": "saturation",
    "ErrorPrinter": "ErrorPrinter",
    "1px 1px 3px": "1px 1px 3px",
    "20px": "20px",
    "GameVideo": "GameVideo",
    "UpperCanvas": "UpperCanvas",
    "modeTextBack": "modeTextBack",
    "119px": "119px",
    "58px": "58px",
    "modeText": "modeText",
    "41px": "41px",
    "monospace": "monospace",
    "WebGL mode": "WebGL mode",
    "Canvas mode": "Canvas mode",
    "1px": "1px",
    "8px": "8px",
    "up": "up",
    "down": "down",
    "debug": "debug",
    "menu": "menu",
    "dir4": "dir4",
    "dir8": "dir8",
    "date": "date",
    "keyup": "keyup",
    "wheelX": "wheelX",
    "wheelY": "wheelY",
    "wheel": "wheel",
    "bitmap": "bitmap",
    "opacity": "opacity",
    "Argument must be an array": "Argument must be an array",
    "tileWidth": "tileWidth",
    "tileHeight": "tileHeight",
    "ShaderTilemap": "ShaderTilemap",
    "squareShader": "squareShader",
    "Deprecation warning. Please update YEP": "Deprecation warning. Please update YEP",
    "ScreenSprite is not a sprite, it has graphics inside.": "ScreenSprite is not a sprite, it has graphics inside.",
    "windowskin": "windowskin",
    "contents": "contents",
    "margin": "margin",
    "contentsOpacity": "contentsOpacity",
    "openness": "openness",
    "rain": "rain",
    "storm": "storm",
    "snow": "snow",
    "suspended": "suspended",
    "visibilitychange": "visibilitychange",
    "hidden": "hidden",
    "volume": "volume",
    "pitch": "pitch",
    "pan": "pan",
    "equalpower": "equalpower",
    "OggS": "OggS",
    "vorb": "vorb",
    "ftyp": "ftyp",
    "moov": "moov",
    "mvhd": "mvhd",
    "udta": "udta",
    "meta": "meta",
    "LOOP": "LOOP",
    "LOOPSTART": "LOOPSTART",
    "LOOPLENGTH": "LOOPLENGTH",
    "loadeddata": "loadeddata",
    "Object too deep": "Object too deep",
    "object Object": "object Object",
    "Array": "Array",
    "5250474d56000000": "5250474d56000000",
    "Header is wrong": "Header is wrong",
    "ogg": "ogg",
    "m4a": "m4a",
    "RPGMV": "RPGMV",
    "Actors": "Actors",
    "Classes": "Classes",
    "Skills": "Skills",
    "Items": "Items",
    "Weapons": "Weapons",
    "Armors": "Armors",
    "Enemies": "Enemies",
    "Troops": "Troops",
    "States": "States",
    "Animations": "Animations",
    "Tilesets": "Tilesets",
    "CommonEvents": "CommonEvents",
    "System": "System",
    "MapInfos": "MapInfos",
    "Test_": "Test_",
    "Event": "Event",
    "data/": "data/",
    "Map": "Map",
    "btest": "btest",
    "etest": "etest",
    "Save data too big!": "Save data too big!",
    "commandRemember": "commandRemember",
    "fs": "fs",
    "bak": "bak",
    "utf8": "utf8",
    "save/": "save/",
    "config": "config",
    "global": "global",
    "RPG Config": "RPG Config",
    "RPG Global": "RPG Global",
    "RPG File": "RPG File",
    "empty": "empty",
    "audio/": "audio/",
    "masterVolume": "masterVolume",
    "bgm": "bgm",
    "bgm/": "bgm/",
    "bgs": "bgs",
    "me": "me",
    "se": "se",
    "currencyUnit": "currencyUnit",
    "basic": "basic",
    "command": "command",
    "message": "message",
    "possession": "possession",
    "expTotal": "expTotal",
    "expNext": "expNext",
    "saveMessage": "saveMessage",
    "loadMessage": "loadMessage",
    "partyName": "partyName",
    "emerge": "emerge",
    "preemptive": "preemptive",
    "surprise": "surprise",
    "escapeStart": "escapeStart",
    "escapeFailure": "escapeFailure",
    "victory": "victory",
    "defeat": "defeat",
    "obtainExp": "obtainExp",
    "obtainGold": "obtainGold",
    "obtainItem": "obtainItem",
    "levelUp": "levelUp",
    "obtainSkill": "obtainSkill",
    "useItem": "useItem",
    "criticalToEnemy": "criticalToEnemy",
    "criticalToActor": "criticalToActor",
    "actorDamage": "actorDamage",
    "actorRecovery": "actorRecovery",
    "actorGain": "actorGain",
    "actorLoss": "actorLoss",
    "actorDrain": "actorDrain",
    "actorNoDamage": "actorNoDamage",
    "actorNoHit": "actorNoHit",
    "enemyDamage": "enemyDamage",
    "enemyRecovery": "enemyRecovery",
    "enemyGain": "enemyGain",
    "enemyLoss": "enemyLoss",
    "enemyDrain": "enemyDrain",
    "enemyNoDamage": "enemyNoDamage",
    "enemyNoHit": "enemyNoHit",
    "evasion": "evasion",
    "magicEvasion": "magicEvasion",
    "magicReflection": "magicReflection",
    "counterAttack": "counterAttack",
    "substitute": "substitute",
    "buffAdd": "buffAdd",
    "debuffAdd": "debuffAdd",
    "buffRemove": "buffRemove",
    "actionFailure": "actionFailure",
    "showfps": "showfps",
    "Your browser does not support WebGL.": "Your browser does not support WebGL.",
    "Your browser does not allow to read local files.": "Your browser does not allow to read local files.",
    "noaudio": "noaudio",
    "Your browser does not support Web Audio API.": "Your browser does not support Web Audio API.",
    "darwin": "darwin",
    "menubar": "menubar",
    "Game": "Game",
    "UnknownError": "UnknownError",
    "turn": "turn",
    "action": "action",
    "turnEnd": "turnEnd",
    "battleEnd": "battleEnd",
    "input": "input",
    "aborting": "aborting",
    "inputting": "inputting",
    "waiting": "waiting",
    "undecided": "undecided",
    "pushBaseLine": "pushBaseLine",
    "popBaseLine": "popBaseLine",
    "js": "js",
    "acting": "acting",
    "done": "done",
    "guard": "guard",
    "spell": "spell",
    "thrust": "thrust",
    "swing": "swing",
    "missile": "missile",
    "damage": "damage",
    "evade": "evade",
    "whiten": "whiten",
    "blink": "blink",
    "collapse": "collapse",
    "bossCollapse": "bossCollapse",
    "instantCollapse": "instantCollapse",
    "The map data is not available": "The map data is not available",
    "boat": "boat",
    "ship": "ship",
    "airship": "airship",
    "walk": "walk",
    "Common event calls exceeded the limit": "Common event calls exceeded the limit",
    "transfer": "transfer",
    "scroll": "scroll",
    "route": "route",
    "animation": "animation",
    "balloon": "balloon",
    "gather": "gather",
    "movies/": "movies/",
    "Window": "Window",
    "Balloon": "Balloon",
    "Shadow1": "Shadow1",
    "Shadow2": "Shadow2",
    "Damage": "Damage",
    "Weapons1": "Weapons1",
    "Weapons2": "Weapons2",
    "Weapons3": "Weapons3",
    "ButtonSet": "ButtonSet",
    "Failed to load GameFont": "Failed to load GameFont",
    "newGame": "newGame",
    "continue": "continue",
    "options": "options",
    "status": "status",
    "formation": "formation",
    "save": "save",
    "gameEnd": "gameEnd",
    "toTitle": "toTitle",
    "buy": "buy",
    "sell": "sell",
    "switch": "switch",
    "Enter": "Enter",
    "ON / OFF": "ON / OFF",
    "Left": "Left",
    "Right": "Right",
    "+1": "+1",
    "Pageup": "Pageup",
    "Pagedown": "Pagedown",
    "+10": "+10",
    "fight": "fight",
    "attack": "attack",
    "GameOver": "GameOver",
    "chant": "chant",
    "dying": "dying",
    "appear": "appear",
    "disappear": "disappear",
    "Wasteland": "Wasteland",
    "DirtField": "DirtField",
    "Desert": "Desert",
    "Lava1": "Lava1",
    "Lava2": "Lava2",
    "Snowfield": "Snowfield",
    "Clouds": "Clouds",
    "PoisonSwamp": "PoisonSwamp",
    "Forest": "Forest",
    "Cliff": "Cliff",
    "Lava": "Lava",
    "Grassland": "Grassland",
    "Ship": "Ship",
    "SimHei, Heiti TC, sans": "SimHei, Heiti TC, sans",
    "Dotum, AppleGothic, sans": "Dotum, AppleGothic, sans",
    "Volume": "Volume",
    "Page": "Page",
    "OK": "OK",
    "カナ": "カナ",
    "決定": "決定",
    "英数": "英数",
    "かな": "かな",
    "effect": "effect",
    "movement": "movement",
    "Method not found": "Method not found",
    "performActionStart": "performActionStart",
    "waitForMovement": "waitForMovement",
    "performAction": "performAction",
    "showAnimation": "showAnimation",
    "waitForNewLine": "waitForNewLine",
    "popupDamage": "popupDamage",
    "performCounter": "performCounter",
    "performReflection": "performReflection",
    "performSubstitute": "performSubstitute",
    "performMiss": "performMiss",
    "performEvasion": "performEvasion",
    "performMagicEvasion": "performMagicEvasion",
    "performDamage": "performDamage",
    "performRecovery": "performRecovery",
    "performCollapse": "performCollapse",
    "waitForEffect": "waitForEffect",
    "variable": "variable",
    "\\\"FileName\\\"": "\\\"FileName\\\"",
    "\\\"giftikubi1\\\",\\\"CachePolicy\\\"": "\\\"giftikubi1\\\",\\\"CachePolicy\\\"",
    "\\\"0\\\",\\\"LoopTimes\\\"": "\\\"0\\\",\\\"LoopTimes\\\"",
    "\\\"0\\\",\\\"StopSwitch\\\"": "\\\"0\\\",\\\"StopSwitch\\\"",
    "\\\"0\\\"": "\\\"0\\\"",
    ",": ",",
    "\\\"kurigif\\\",\\\"CachePolicy\\\"": "\\\"kurigif\\\",\\\"CachePolicy\\\"",
    "\\\"tikubisyokusyu\\\",\\\"CachePolicy\\\"": "\\\"tikubisyokusyu\\\",\\\"CachePolicy\\\"",
    "\\\"fera1\\\",\\\"CachePolicy\\\"": "\\\"fera1\\\",\\\"CachePolicy\\\"",
    "\\\"fera2\\\",\\\"CachePolicy\\\"": "\\\"fera2\\\",\\\"CachePolicy\\\"",
    "\\\"ferasyasei\\\",\\\"CachePolicy\\\"": "\\\"ferasyasei\\\",\\\"CachePolicy\\\"",
    "\\\"1\\\",\\\"StopSwitch\\\"": "\\\"1\\\",\\\"StopSwitch\\\"",
    "\\\"kiri1\\\",\\\"CachePolicy\\\"": "\\\"kiri1\\\",\\\"CachePolicy\\\"",
    "\\\"kiri2\\\",\\\"CachePolicy\\\"": "\\\"kiri2\\\",\\\"CachePolicy\\\"",
    "\\\"kuri3\\\",\\\"CachePolicy\\\"": "\\\"kuri3\\\",\\\"CachePolicy\\\"",
    "\\\"zenritusen\\\",\\\"CachePolicy\\\"": "\\\"zenritusen\\\",\\\"CachePolicy\\\"",
    "\\\"tekoki\\\",\\\"CachePolicy\\\"": "\\\"tekoki\\\",\\\"CachePolicy\\\"",
    "\\\"yubi1\\\",\\\"CachePolicy\\\"": "\\\"yubi1\\\",\\\"CachePolicy\\\"",
    "\\\"yubi2\\\",\\\"CachePolicy\\\"": "\\\"yubi2\\\",\\\"CachePolicy\\\"",
    "\\\"yubi3\\\",\\\"CachePolicy\\\"": "\\\"yubi3\\\",\\\"CachePolicy\\\"",
    "\\\"namename1\\\",\\\"CachePolicy\\\"": "\\\"namename1\\\",\\\"CachePolicy\\\"",
    "\\\"namename2\\\",\\\"CachePolicy\\\"": "\\\"namename2\\\",\\\"CachePolicy\\\"",
    "\\\"tekoki tome\\\",\\\"CachePolicy\\\"": "\\\"tekoki tome\\\",\\\"CachePolicy\\\"",
    "prestart": "prestart",
    "\"数字が小さい順にタッチしてね!!": "\"数字が小さい順にタッチしてね!!",
    ",\"end": ",\"end",
    ", \"timeup": ", \"timeup",
    "\"合計がお題と同じになるようにタッチしてね!!": "\"合計がお題と同じになるようにタッチしてね!!",
    "秒\", \"timeup\"": "秒\", \"timeup\"",
    "Item3\",\"volume": "Item3\",\"volume",
    "90\",\"pitch": "90\",\"pitch",
    "150\",\"pan": "150\",\"pan",
    "Buzzer2\",\"volume": "Buzzer2\",\"volume",
    "100\",\"pan": "100\",\"pan",
    "Cursor2\",\"volume": "Cursor2\",\"volume",
    "Cancel1\",\"volume": "Cancel1\",\"volume",
    "Magic3\",\"volume": "Magic3\",\"volume",
    "120\",\"pan": "120\",\"pan",
    "Applause1\",\"volume": "Applause1\",\"volume",
    "Applause2\",\"volume": "Applause2\",\"volume",
    "80\",\"pan": "80\",\"pan",
    "A\",\"B": "A\",\"B",
    "\\\"menuCommand\\\"": "\\\"menuCommand\\\"",
    "\\\"アイテム\\\",\\\"loadFile\\\"": "\\\"アイテム\\\",\\\"loadFile\\\"",
    "\\\"Item\\\"": "\\\"Item\\\"",
    "\\\"装備\\\",\\\"loadFile\\\"": "\\\"装備\\\",\\\"loadFile\\\"",
    "\\\"Equip\\\"": "\\\"Equip\\\"",
    "\\\"スキル\\\",\\\"loadFile\\\"": "\\\"スキル\\\",\\\"loadFile\\\"",
    "\\\"Skill\\\"": "\\\"Skill\\\"",
    "\\\"ステータス\\\",\\\"loadFile\\\"": "\\\"ステータス\\\",\\\"loadFile\\\"",
    "\\\"Status\\\"": "\\\"Status\\\"",
    "\\\"並び替え\\\",\\\"loadFile\\\"": "\\\"並び替え\\\",\\\"loadFile\\\"",
    "\\\"Formation\\\"": "\\\"Formation\\\"",
    "\\\"オプション\\\",\\\"loadFile\\\"": "\\\"オプション\\\",\\\"loadFile\\\"",
    "\\\"Options\\\"": "\\\"Options\\\"",
    "\\\"セーブ\\\",\\\"loadFile\\\"": "\\\"セーブ\\\",\\\"loadFile\\\"",
    "\\\"Save\\\"": "\\\"Save\\\"",
    "\\\"ゲーム終了\\\",\\\"loadFile\\\"": "\\\"ゲーム終了\\\",\\\"loadFile\\\"",
    "\\\"GameEnd\\\"": "\\\"GameEnd\\\"",
    "\\\"Com_攻撃\\\",\\\"loadFile\\\"": "\\\"Com_攻撃\\\",\\\"loadFile\\\"",
    "\\\"Com": "\\\"Com",
    "\\\"Com_防御\\\",\\\"loadFile\\\"": "\\\"Com_防御\\\",\\\"loadFile\\\"",
    "\\\"Com_アイテム\\\",\\\"loadFile\\\"": "\\\"Com_アイテム\\\",\\\"loadFile\\\"",
    "\\\"Com_魔法\\\",\\\"loadFile\\\"": "\\\"Com_魔法\\\",\\\"loadFile\\\"",
    "\\\"Com_必殺技\\\",\\\"loadFile\\\"": "\\\"Com_必殺技\\\",\\\"loadFile\\\"",
    "ChoicePos\",\"ChoiceVariableId": "ChoicePos\",\"ChoiceVariableId",
    "ChoiceVariableId\",\"ChoiceRect": "ChoiceVariableId\",\"ChoiceRect",
    "ChoiceHelp": "ChoiceHelp",
    "hit": "hit",
    "start": "start",
    "read": "read",
    "end": "end",
    "CSS_画像": "CSS_画像",
    "CSS": "CSS",
    "BGI OFFSET X": "BGI OFFSET X",
    "BGI OFFSET Y": "BGI OFFSET Y",
    "BGI WIDTH": "BGI WIDTH",
    "BGI HEIGHT": "BGI HEIGHT",
    "BGI SCALE": "BGI SCALE",
    "CSS_カスタム": "CSS_カスタム",
    "NAME": "NAME",
    "表示名": "表示名",
    "REFERENCES": "REFERENCES",
    "参照先": "参照先",
    "CURRENT": "CURRENT",
    "現在値": "現在値",
    "MAX": "MAX",
    "最大値": "最大値",
    "COLOR": "COLOR",
    "CSS_カスタム画像変更": "CSS_カスタム画像変更",
    "CSS_ウィンドウ設定変更": "CSS_ウィンドウ設定変更",
    "アクター": "アクター",
    "ACTOR": "ACTOR",
    "パーティー": "パーティー",
    "PARTY": "PARTY",
    "バトル": "バトル",
    "BATTLE": "BATTLE",
    "ENABLED": "ENABLED",
    "カスタム機能": "カスタム機能",
    "NUMVISIBLEROUS": "NUMVISIBLEROUS",
    "表示行数": "表示行数",
    "FONTSIZE": "FONTSIZE",
    "フォントサイズ": "フォントサイズ",
    "PADDING": "PADDING",
    "余白": "余白",
    "LINEHEIGHT": "LINEHEIGHT",
    "行高さ": "行高さ",
    "OPACITY": "OPACITY",
    "背景透明度": "背景透明度",
    "HIDEFRAME": "HIDEFRAME",
    "枠非表示": "枠非表示",
    "MAXCOLS": "MAXCOLS",
    "表示列数": "表示列数",
    "CURSORHEIGHT": "CURSORHEIGHT",
    "カーソル行数": "カーソル行数",
    "HSPACE": "HSPACE",
    "表示行間隔": "表示行間隔",
    "abnormal": "abnormal",
    "sleep": "sleep",
    "dead": "dead",
    "IPARAM": "IPARAM",
    "STREVAL": "STREVAL",
    "EVAL": "EVAL",
    "TEXT": "TEXT",
    "NOTEQUIP": "NOTEQUIP",
    "EQUIP": "EQUIP",
    "EDIFFAOP": "EDIFFAOP",
    "EXDIFF": "EXDIFF",
    "ESDIFF": "ESDIFF",
    "EDIFF": "EDIFF",
    "AOPDIFF": "AOPDIFF",
    "AOPBASE": "AOPBASE",
    "PDIFF": "PDIFF",
    "PBASE": "PBASE",
    "IIMAGE": "IIMAGE",
    "EXPARAM": "EXPARAM",
    "ESPARAM": "ESPARAM",
    "EPARAM": "EPARAM",
    "EAOP": "EAOP",
    "AOP": "AOP",
    "AGAUGE": "AGAUGE",
    "CGAUGE": "CGAUGE",
    "XPARAM": "XPARAM",
    "SPARAM": "SPARAM",
    "PARAM": "PARAM",
    "CUSTOM": "CUSTOM",
    "GAUGE": "GAUGE",
    "STATE2": "STATE2",
    "FACE": "FACE",
    "IMAGE": "IMAGE",
    "IICON": "IICON",
    "INAME": "INAME",
    "IDESC": "IDESC",
    "ITYPE": "ITYPE",
    "IETYPE": "IETYPE",
    "ISCOPE": "ISCOPE",
    "IELEMENT": "IELEMENT",
    "INUMBER": "INUMBER",
    "MAPNAME": "MAPNAME",
    "ECHARA": "ECHARA",
    "CHARA": "CHARA",
    "SV": "SV",
    "NICKNAME": "NICKNAME",
    "LEVEL": "LEVEL",
    "CLASS": "CLASS",
    "STATE": "STATE",
    "PROFILE": "PROFILE",
    "MESSAGE": "MESSAGE",
    "LINE": "LINE",
    "SPARAM Name": "SPARAM Name",
    "passiveCommands": "passiveCommands",
    "Face Image Width": "Face Image Width",
    "Face Image Height": "Face Image Height",
    "Face Position X": "Face Position X",
    "Chara Image Width": "Chara Image Width",
    "Chara Image Height": "Chara Image Height",
    "Chara Position X": "Chara Position X",
    "Chara Direction": "Chara Direction",
    "Sv Image Width": "Sv Image Width",
    "Sv Image Height": "Sv Image Height",
    "Enabled Sv Motion": "Enabled Sv Motion",
    "Sv Image Motion": "Sv Image Motion",
    "Enabled State Motion": "Enabled State Motion",
    "Sv Position X": "Sv Position X",
    "Enable CSS States": "Enable CSS States",
    "Animation Wait": "Animation Wait",
    "Enable Overlap": "Enable Overlap",
    "Enable Auto Scale": "Enable Auto Scale",
    "Overlap Rate": "Overlap Rate",
    "State Icon Padding": "State Icon Padding",
    "Disp Decimals Param": "Disp Decimals Param",
    "Format PDIFF Plus": "Format PDIFF Plus",
    "Format PDIFF Minus": "Format PDIFF Minus",
    "Enabled Escapecharacters By PDIFF": "Enabled Escapecharacters By PDIFF",
    "Equip Right Arrow": "Equip Right Arrow",
    "Format EDIFF Plus": "Format EDIFF Plus",
    "Format EDIFF Minus": "Format EDIFF Minus",
    "Enabled Escapecharacters By EDIFF": "Enabled Escapecharacters By EDIFF",
    "Format AOPDIFF Plus": "Format AOPDIFF Plus",
    "Format AOPDIFF Minus": "Format AOPDIFF Minus",
    "Enabled Escapecharacters By AOPDIFF": "Enabled Escapecharacters By AOPDIFF",
    "Format EDIFFAOP Plus": "Format EDIFFAOP Plus",
    "Format EDIFFAOP Minus": "Format EDIFFAOP Minus",
    "Enabled Escapecharacters By EDIFFAOP": "Enabled Escapecharacters By EDIFFAOP",
    "Gauge Param Digit": "Gauge Param Digit",
    "Image Position X": "Image Position X",
    "Display LevelUp Message": "Display LevelUp Message",
    "Custom 0 Display Name": "Custom 0 Display Name",
    "Custom 0 Unit": "Custom 0 Unit",
    "Custom 0 References": "Custom 0 References",
    "Custom 1 Display Name": "Custom 1 Display Name",
    "Custom 1 Unit": "Custom 1 Unit",
    "Custom 1 References": "Custom 1 References",
    "Custom 2 Display Name": "Custom 2 Display Name",
    "Custom 2 Unit": "Custom 2 Unit",
    "Custom 2 References": "Custom 2 References",
    "Custom 3 Display Name": "Custom 3 Display Name",
    "Custom 3 Unit": "Custom 3 Unit",
    "Custom 3 References": "Custom 3 References",
    "Custom 4 Display Name": "Custom 4 Display Name",
    "Custom 4 Unit": "Custom 4 Unit",
    "Custom 4 References": "Custom 4 References",
    "Custom 5 Display Name": "Custom 5 Display Name",
    "Custom 5 Unit": "Custom 5 Unit",
    "Custom 5 References": "Custom 5 References",
    "Custom 6 Display Name": "Custom 6 Display Name",
    "Custom 6 Unit": "Custom 6 Unit",
    "Custom 6 References": "Custom 6 References",
    "Custom 7 Display Name": "Custom 7 Display Name",
    "Custom 7 Unit": "Custom 7 Unit",
    "Custom 7 References": "Custom 7 References",
    "Custom 8 Display Name": "Custom 8 Display Name",
    "Custom 8 Unit": "Custom 8 Unit",
    "Custom 8 References": "Custom 8 References",
    "Custom 9 Display Name": "Custom 9 Display Name",
    "Custom 9 Unit": "Custom 9 Unit",
    "Custom 9 References": "Custom 9 References",
    "Custom 10 Display Name": "Custom 10 Display Name",
    "Custom 10 Unit": "Custom 10 Unit",
    "Custom 10 References": "Custom 10 References",
    "Custom 11 Display Name": "Custom 11 Display Name",
    "Custom 11 Unit": "Custom 11 Unit",
    "Custom 11 References": "Custom 11 References",
    "Custom 12 Display Name": "Custom 12 Display Name",
    "Custom 12 Unit": "Custom 12 Unit",
    "Custom 12 References": "Custom 12 References",
    "Custom 13 Display Name": "Custom 13 Display Name",
    "Custom 13 Unit": "Custom 13 Unit",
    "Custom 13 References": "Custom 13 References",
    "Custom 14 Display Name": "Custom 14 Display Name",
    "Custom 14 Unit": "Custom 14 Unit",
    "Custom 14 References": "Custom 14 References",
    "Custom 15 Display Name": "Custom 15 Display Name",
    "Custom 15 Unit": "Custom 15 Unit",
    "Custom 15 References": "Custom 15 References",
    "Custom 16 Display Name": "Custom 16 Display Name",
    "Custom 16 Unit": "Custom 16 Unit",
    "Custom 16 References": "Custom 16 References",
    "Custom 17 Display Name": "Custom 17 Display Name",
    "Custom 17 Unit": "Custom 17 Unit",
    "Custom 17 References": "Custom 17 References",
    "Custom 18 Display Name": "Custom 18 Display Name",
    "Custom 18 Unit": "Custom 18 Unit",
    "Custom 18 References": "Custom 18 References",
    "Custom 19 Display Name": "Custom 19 Display Name",
    "Custom 19 Unit": "Custom 19 Unit",
    "Custom 19 References": "Custom 19 References",
    "Gauge 0 Display Name": "Gauge 0 Display Name",
    "Gauge 0 References": "Gauge 0 References",
    "Gauge 0 Current": "Gauge 0 Current",
    "Gauge 0 Max": "Gauge 0 Max",
    "Gauge 0 Color1": "Gauge 0 Color1",
    "Gauge 0 Color2": "Gauge 0 Color2",
    "Gauge 1 Display Name": "Gauge 1 Display Name",
    "Gauge 1 References": "Gauge 1 References",
    "Gauge 1 Current": "Gauge 1 Current",
    "Gauge 1 Max": "Gauge 1 Max",
    "Gauge 1 Color1": "Gauge 1 Color1",
    "Gauge 1 Color2": "Gauge 1 Color2",
    "Gauge 2 Display Name": "Gauge 2 Display Name",
    "Gauge 2 References": "Gauge 2 References",
    "Gauge 2 Current": "Gauge 2 Current",
    "Gauge 2 Max": "Gauge 2 Max",
    "Gauge 2 Color1": "Gauge 2 Color1",
    "Gauge 2 Color2": "Gauge 2 Color2",
    "Gauge 3 Display Name": "Gauge 3 Display Name",
    "Gauge 3 References": "Gauge 3 References",
    "Gauge 3 Current": "Gauge 3 Current",
    "Gauge 3 Max": "Gauge 3 Max",
    "Gauge 3 Color1": "Gauge 3 Color1",
    "Gauge 3 Color2": "Gauge 3 Color2",
    "Gauge 4 Display Name": "Gauge 4 Display Name",
    "Gauge 4 References": "Gauge 4 References",
    "Gauge 4 Current": "Gauge 4 Current",
    "Gauge 4 Max": "Gauge 4 Max",
    "Gauge 4 Color1": "Gauge 4 Color1",
    "Gauge 4 Color2": "Gauge 4 Color2",
    "Gauge 5 Display Name": "Gauge 5 Display Name",
    "Gauge 5 References": "Gauge 5 References",
    "Gauge 5 Current": "Gauge 5 Current",
    "Gauge 5 Max": "Gauge 5 Max",
    "Gauge 5 Color1": "Gauge 5 Color1",
    "Gauge 5 Color2": "Gauge 5 Color2",
    "Gauge 6 Display Name": "Gauge 6 Display Name",
    "Gauge 6 References": "Gauge 6 References",
    "Gauge 6 Current": "Gauge 6 Current",
    "Gauge 6 Max": "Gauge 6 Max",
    "Gauge 6 Color1": "Gauge 6 Color1",
    "Gauge 6 Color2": "Gauge 6 Color2",
    "Gauge 7 Display Name": "Gauge 7 Display Name",
    "Gauge 7 References": "Gauge 7 References",
    "Gauge 7 Current": "Gauge 7 Current",
    "Gauge 7 Max": "Gauge 7 Max",
    "Gauge 7 Color1": "Gauge 7 Color1",
    "Gauge 7 Color2": "Gauge 7 Color2",
    "Gauge 8 Display Name": "Gauge 8 Display Name",
    "Gauge 8 References": "Gauge 8 References",
    "Gauge 8 Current": "Gauge 8 Current",
    "Gauge 8 Max": "Gauge 8 Max",
    "Gauge 8 Color1": "Gauge 8 Color1",
    "Gauge 8 Color2": "Gauge 8 Color2",
    "Gauge 9 Display Name": "Gauge 9 Display Name",
    "Gauge 9 References": "Gauge 9 References",
    "Gauge 9 Current": "Gauge 9 Current",
    "Gauge 9 Max": "Gauge 9 Max",
    "Gauge 9 Color1": "Gauge 9 Color1",
    "Gauge 9 Color2": "Gauge 9 Color2",
    "XPARAM Name": "XPARAM Name",
    "Auto Battle Message": "Auto Battle Message",
    "Normal": "Normal",
    "Stretch": "Stretch",
    "eventId": "eventId",
    "count": "count",
    "delay": "delay",
    "moveX": "moveX",
    "moveY": "moveY",
    "pattern": "pattern",
    "back": "back",
    "bx": "bx",
    "by": "by",
    "extend": "extend",
    "fixed": "fixed",
    "anchorX": "anchorX",
    "anchorY": "anchorY",
    "slideCount": "slideCount",
    "FS": "FS",
    "CommonPopupCoreを導入してください。": "CommonPopupCoreを導入してください。",
    "Info Disable Switch Id": "Info Disable Switch Id",
    "Get Gold Text": "Get Gold Text",
    "Lost Gold Text": "Lost Gold Text",
    "Get Item Text": "Get Item Text",
    "Lost Item Text": "Lost Item Text",
    "Get Item Text Num": "Get Item Text Num",
    "Lost Item Text Num": "Lost Item Text Num",
    "Get Skill Text": "Get Skill Text",
    "Lost Skill Text": "Lost Skill Text",
    "Exp Up Text": "Exp Up Text",
    "Exp Down Text": "Exp Down Text",
    "Lv Up Text": "Lv Up Text",
    "Lv Down Text": "Lv Down Text",
    "Param Up Text": "Param Up Text",
    "Param Down Text": "Param Down Text",
    "Info Font Size": "Info Font Size",
    "Info Count": "Info Count",
    "Info Delay": "Info Delay",
    "Info MoveWait": "Info MoveWait",
    "Info MoveFade": "Info MoveFade",
    "Gold Icon Index": "Gold Icon Index",
    "Actor Icon Start Index": "Actor Icon Start Index",
    "Use Battle Info": "Use Battle Info",
    "Use Rewards Info": "Use Rewards Info",
    "Info Position": "Info Position",
    "Info Slide Action": "Info Slide Action",
    "Info Sup X": "Info Sup X",
    "Info Sup Y": "Info Sup Y",
    "Info Pattern": "Info Pattern",
    "Info Width": "Info Width",
    "Reward Popup Delay": "Reward Popup Delay",
    "Abp Up Text": "Abp Up Text",
    "Abp Down Text": "Abp Down Text",
    "Class Lv Up Text": "Class Lv Up Text",
    "Class Lv Down Text": "Class Lv Down Text",
    "Formation Lv Up Text": "Formation Lv Up Text",
    "Formation Lv Max Text": "Formation Lv Max Text",
    "Battle Show List": "Battle Show List",
    "ShowInfo": "ShowInfo",
    "インフォ表示": "インフォ表示",
    "params": "params",
    "param": "param",
    "skill": "skill",
    "exp": "exp",
    "level": "level",
    "VXandAceHybridClass": "VXandAceHybridClass",
    "abp": "abp",
    "classLevel": "classLevel",
    "BattleFormation": "BattleFormation",
    "formationLevel": "formationLevel",
    "max": "max",
    "baseY": "baseY",
    "breathH": "breathH",
    "mirrorRate": "mirrorRate",
    "scale": "scale",
    "noMirror": "noMirror",
    "maxPageRow": "maxPageRow",
    "Plugin Commands": "Plugin Commands",
    "Event Comment": "Event Comment",
    "条件エラー": "条件エラー",
    "close": "close",
    "update": "update",
    "choice": "choice",
    "processCancel": "processCancel",
    "Cost Padding": "Cost Padding",
    "Command Alignment": "Command Alignment",
    "TP Format": "TP Format",
    "TP Font Size": "TP Font Size",
    "TP Text Color": "TP Text Color",
    "TP Icon": "TP Icon",
    "MP Format": "MP Format",
    "MP Font Size": "MP Font Size",
    "MP Text Color": "MP Text Color",
    "MP Icon": "MP Icon",
    "HP Format": "HP Format",
    "HP Font Size": "HP Font Size",
    "HP Text Color": "HP Text Color",
    "HP Icon": "HP Icon",
    "before": "before",
    "pre": "pre",
    "post": "post",
    "after": "after",
    "NOTHING": "NOTHING",
    "NULL": "NULL",
    "UNDEFINED": "UNDEFINED",
    "Effect Type": "Effect Type",
    "Effect Color": "Effect Color",
    "square": "square",
    "random": "random",
    "triangle": "triangle",
    "inside": "inside",
    "Shape Type": "Shape Type",
    "Split Radial": "Split Radial",
    "received": "received",
    "Split Y": "Split Y",
    "joined": "joined",
    "outside": "outside",
    "Scatter Direction": "Scatter Direction",
    "Break Duration": "Break Duration",
    "Interval Duration": "Interval Duration",
    "Move Duration": "Move Duration",
    "rgb": "rgb",
    "MV": "MV",
    "setType": "setType",
    "setCharacter": "setCharacter",
    "setColor": "setColor",
    "type": "type",
    "character": "character",
    "color": "color",
    "MZ": "MZ",
    "endless loop error": "endless loop error",
    "is not string or object": "is not string or object",
    "any": "any",
    "Predict mode is disable": "Predict mode is disable",
    "boolean": "boolean",
    "Unknow type": "Unknow type",
    "false": "false",
    "innerWidth": "innerWidth",
    "innerHeight": "innerHeight",
    "purgeCount": "purgeCount",
    "is over all has item count": "is over all has item count",
    "Weapon": "Weapon",
    "Armor": "Armor",
    "Type": "Type",
    "is unknown.": "is unknown.",
    "is not found": "is not found",
    "select": "select",
    "changeNumber": "changeNumber",
    "keyItem": "keyItem",
    "alchemy": "alchemy",
    "maxLines": "maxLines",
    "lineHeight": "lineHeight",
    "fontSize": "fontSize",
    "backColor": "backColor",
    "backOpacity": "backOpacity",
    "cornerRadius": "cornerRadius",
    "textAlign": "textAlign",
    "showIcon": "showIcon",
    "headerText": "headerText",
    "headerHeight": "headerHeight",
    "headerFontSize": "headerFontSize",
    "headerColor": "headerColor",
    "fsStart": "fsStart",
    "fsStop": "fsStop",
    "Fast Forward Enabled?": "Fast Forward Enabled?",
    "Log Type": "Log Type",
    "Max Lines": "Max Lines",
    "Message Speed": "Message Speed",
    "View Duration": "View Duration",
    "Start Messages On Log?": "Start Messages On Log?",
    "Log Command": "Log Command",
    "Log Max Size": "Log Max Size",
    "Item Name Only?": "Item Name Only?",
    "Not Display Skils": "Not Display Skils",
    "Log Window Y": "Log Window Y",
    "Log Window Width": "Log Window Width",
    "Line Height": "Line Height",
    "Font Size": "Font Size",
    "Indent Width": "Indent Width",
    "Animation Next Delay": "Animation Next Delay",
    "Animation Short Count": "Animation Short Count",
    "addText": "addText",
    "PX": "PX",
    "itemRectForText": "itemRectForText",
    "updateArrows": "updateArrows",
    "performActionEnd": "performActionEnd",
    "addItemName": "addItemName",
    "battleLog": "battleLog",
    "InvalidIfTest": "InvalidIfTest",
    "テストプレー時無効": "テストプレー時無効",
    "InvalidIfWeb": "InvalidIfWeb",
    "Web版で無効": "Web版で無効",
    "ThroughType": "ThroughType",
    "無視種別": "無視種別",
    "Breath Frequency": "Breath Frequency",
    "Breath Rhythem": "Breath Rhythem",
    "0,0,1,2,3,4,5,5,4,3,2,1": "0,0,1,2,3,4,5,5,4,3,2,1",
    "ExpansionX": "ExpansionX",
    "ExpansionY": "ExpansionY",
    "Enemy Size": "Enemy Size",
    "mistImage": "mistImage",
    "mistNumber": "mistNumber",
    "mistTopSide": "mistTopSide",
    "mistRangeSide": "mistRangeSide",
    "mistTopFront": "mistTopFront",
    "mistRangeFront": "mistRangeFront",
    "mistScale": "mistScale",
    "mistOpacityMax": "mistOpacityMax",
    "startMist": "startMist",
    "stopMist": "stopMist",
    "onMistMirror": "onMistMirror",
    "offMistMirror": "offMistMirror",
    "yAutoBattle": "yAutoBattle",
    "AutoBattle": "AutoBattle",
    "Invalidate Auto Battle Switch": "Invalidate Auto Battle Switch",
    "Show X": "Show X",
    "Show Y": "Show Y",
    "Auto Battle Speed": "Auto Battle Speed",
    "Show Window": "Show Window",
    "Auto Battle Use Skill": "Auto Battle Use Skill",
    "Window Hide Switch": "Window Hide Switch",
    "Auto Battle Key": "Auto Battle Key",
    "Auto Battle Usable Message": "Auto Battle Usable Message",
    "This is a static class": "This is a static class",
    "Text Back Color": "Text Back Color",
    "Text Back FileName": "Text Back FileName",
    "CommonPopup": "CommonPopup",
    "Delete all m4a files?": "Delete all m4a files?",
    "Are you sure?": "Are you sure?",
    "This cannot be undone. Are you really, REALLY sure?": "This cannot be undone. Are you really, REALLY sure?",
    "All m4a files have been deleted.": "All m4a files have been deleted.",
    "Error occured while deleting m4a files.": "Error occured while deleting m4a files.",
    "win32": "win32",
    "del": "del",
    "find .": "find .",
    "\"*": "\"*",
    "stbvorbis": "stbvorbis",
    "Hud X": "Hud X",
    "Hud Y": "Hud Y",
    "Hud Space X": "Hud Space X",
    "Hud Space Y": "Hud Space Y",
    "Vertical Mode": "Vertical Mode",
    "Max Battle Members": "Max Battle Members",
    "Hud Slide X": "Hud Slide X",
    "Hud Slide Y": "Hud Slide Y",
    "Layout2 Visible": "Layout2 Visible",
    "Layout2 X": "Layout2 X",
    "Layout2 Y": "Layout2 Y",
    "Screen Layout": "Screen Layout",
    "Screen X": "Screen X",
    "Screen Y": "Screen Y",
    "Turn Visible": "Turn Visible",
    "Turn X": "Turn X",
    "Turn Y": "Turn Y",
    "Turn Rotation Speed": "Turn Rotation Speed",
    "Turn Zoom Animation": "Turn Zoom Animation",
    "Face Visible": "Face Visible",
    "Face Shake Animation": "Face Shake Animation",
    "Face Zoom Animation": "Face Zoom Animation",
    "Face Frame Animation": "Face Frame Animation",
    "Face X": "Face X",
    "Face Y": "Face Y",
    "Face Priority": "Face Priority",
    "Name Visible": "Name Visible",
    "Name Font Size": "Name Font Size",
    "Name Bold Size": "Name Bold Size",
    "Name Font Italic": "Name Font Italic",
    "Name Align": "Name Align",
    "Name X": "Name X",
    "Name Y": "Name Y",
    "HP Meter Visible": "HP Meter Visible",
    "HP Meter X": "HP Meter X",
    "HP Meter Y": "HP Meter Y",
    "HP Meter Angle": "HP Meter Angle",
    "HP Meter Flow Anime": "HP Meter Flow Anime",
    "HP Number Visible": "HP Number Visible",
    "HP Number X": "HP Number X",
    "HP Number Y": "HP Number Y",
    "MaxHP Number Visible": "MaxHP Number Visible",
    "MaxHP Number X": "MaxHP Number X",
    "MaxHP Number Y": "MaxHP Number Y",
    "HP Number Align type": "HP Number Align type",
    "MP Meter Visible": "MP Meter Visible",
    "MP Meter X": "MP Meter X",
    "MP Meter Y": "MP Meter Y",
    "MP Meter Angle": "MP Meter Angle",
    "MP Meter Flow Anime": "MP Meter Flow Anime",
    "MP Number Visible": "MP Number Visible",
    "MP Number X": "MP Number X",
    "MP Number Y": "MP Number Y",
    "MaxMP Number Visible": "MaxMP Number Visible",
    "MaxMP Number X": "MaxMP Number X",
    "MaxMP Number Y": "MaxMP Number Y",
    "MP Number Align type": "MP Number Align type",
    "MP Number Diagonal": "MP Number Diagonal",
    "TP Meter Visible": "TP Meter Visible",
    "TP Meter X": "TP Meter X",
    "TP Meter Y": "TP Meter Y",
    "TP Meter Angle": "TP Meter Angle",
    "TP Meter Flow Anime": "TP Meter Flow Anime",
    "TP Number Visible": "TP Number Visible",
    "TP Number X": "TP Number X",
    "TP Number Y": "TP Number Y",
    "MaxTP Number Visible": "MaxTP Number Visible",
    "MaxTP Number X": "MaxTP Number X",
    "MaxTP Number Y": "MaxTP Number Y",
    "TP Number Align type": "TP Number Align type",
    "TP Number Diagonal": "TP Number Diagonal",
    "ATB Meter Visible": "ATB Meter Visible",
    "ATB Meter X": "ATB Meter X",
    "ATB Meter Y": "ATB Meter Y",
    "ATB Meter Angle": "ATB Meter Angle",
    "ATB Meter Flow Anime": "ATB Meter Flow Anime",
    "States Visible": "States Visible",
    "States X": "States X",
    "States Y": "States Y",
    "States Mode": "States Mode",
    "States Max": "States Max",
    "States Align": "States Align",
    "Command Auto Adjust": "Command Auto Adjust",
    "W Command X": "W Command X",
    "W Command Y": "W Command Y",
    "Layout Command": "Layout Command",
    "L Command X": "L Command X",
    "L Command Y": "L Command Y",
    "W Command Width": "W Command Width",
    "W Command Height": "W Command Height",
    "W Command Slide X": "W Command Slide X",
    "W Command Slide Y": "W Command Slide Y",
    "W Party X": "W Party X",
    "W Party Y": "W Party Y",
    "Layout Party": "Layout Party",
    "L Party X": "L Party X",
    "L Party Y": "L Party Y",
    "W Party Width": "W Party Width",
    "W Party Height": "W Party Height",
    "W Party Slide X": "W Party Slide X",
    "W Party Slide Y": "W Party Slide Y",
    "W Help X": "W Help X",
    "W Help Y": "W Help Y",
    "Layout Help": "Layout Help",
    "L Help X": "L Help X",
    "L Help Y": "L Help Y",
    "W Help Width": "W Help Width",
    "W Help Height": "W Help Height",
    "W Help Slide X": "W Help Slide X",
    "W Help Slide Y": "W Help Slide Y",
    "W Skill X": "W Skill X",
    "W Skill Y": "W Skill Y",
    "Layout Skill": "Layout Skill",
    "L Skill X": "L Skill X",
    "L Skill Y": "L Skill Y",
    "W Skill Width": "W Skill Width",
    "W Skill Height": "W Skill Height",
    "W Skill maxCols": "W Skill maxCols",
    "W Skill Slide X": "W Skill Slide X",
    "W Skill Slide Y": "W Skill Slide Y",
    "W Item X": "W Item X",
    "W Item Y": "W Item Y",
    "Layout Item": "Layout Item",
    "L Item X": "L Item X",
    "L Item Y": "L Item Y",
    "W Item Width": "W Item Width",
    "W Item Height": "W Item Height",
    "W Item maxCols": "W Item maxCols",
    "W Item Slide X": "W Item Slide X",
    "W Item Slide Y": "W Item Slide Y",
    "W Actor X": "W Actor X",
    "W Actor Y": "W Actor Y",
    "Layout Actor": "Layout Actor",
    "L Actor X": "L Actor X",
    "L Actor Y": "L Actor Y",
    "W Actor Width": "W Actor Width",
    "W Actor Height": "W Actor Height",
    "W Actor maxCols": "W Actor maxCols",
    "W Actor Slide X": "W Actor Slide X",
    "W Actor Slide Y": "W Actor Slide Y",
    "W Enemy X": "W Enemy X",
    "W Enemy Y": "W Enemy Y",
    "Layout Enemy": "Layout Enemy",
    "L Enemy X": "L Enemy X",
    "L Enemy Y": "L Enemy Y",
    "W Enemy Width": "W Enemy Width",
    "W Enemy Height": "W Enemy Height",
    "W Enemy maxCols": "W Enemy maxCols",
    "W Enemy Slide X": "W Enemy Slide X",
    "W Enemy Slide Y": "W Enemy Slide Y",
    "Custom Position": "Custom Position",
    "img": "img",
    "bhud": "bhud",
    "face breath effect": "face breath effect",
    "Layout": "Layout",
    "Layout2": "Layout2",
    "Turn": "Turn",
    "ATB": "ATB",
    "Face_": "Face_",
    "Full ATB Gauge": "Full ATB Gauge",
    "VE - Active Time Battle": "VE - Active Time Battle",
    "Mode": "Mode",
    "Layout X": "Layout X",
    "Layout Y": "Layout Y",
    "Com X": "Com X",
    "Com Y": "Com Y",
    "Arrow": "Arrow",
    "Arrow X": "Arrow X",
    "Arrow Y": "Arrow Y",
    "Row Max": "Row Max",
    "Zoom Animation": "Zoom Animation",
    "Zoom Rate": "Zoom Rate",
    "Zoom Speed": "Zoom Speed",
    "Zoom Loop": "Zoom Loop",
    "Slide Animation": "Slide Animation",
    "Slide X": "Slide X",
    "Slide Y": "Slide Y",
    "Com Name": "Com Name",
    "Com Name X": "Com Name X",
    "Com Name Y": "Com Name Y",
    "Com Font Size": "Com Font Size",
    "Ring Range": "Ring Range",
    "Pi Range": "Pi Range",
    "Ring Motion": "Ring Motion",
    "Side Input": "Side Input",
    "Cursor": "Cursor",
    "Cursor X": "Cursor X",
    "Cursor Y": "Cursor Y",
    "Cursor Slide": "Cursor Slide",
    "Face": "Face",
    "Com_": "Com_",
    "typing": "typing",
    "characterName": "characterName",
    "characterIndex": "characterIndex",
    "numberColor": "numberColor",
    "numberOutlineColor": "numberOutlineColor",
    "selectColor": "selectColor",
    "selectOutlineColor": "selectOutlineColor",
    "helpLines": "helpLines",
    "helpTexts": "helpTexts",
    "helpCalcTexts": "helpCalcTexts",
    "stateText": "stateText",
    "giveupText": "giveupText",
    "penalty": "penalty",
    "vnResultTime": "vnResultTime",
    "vnResultSuccess": "vnResultSuccess",
    "seTouchSuccess": "seTouchSuccess",
    "seTouchMiss": "seTouchMiss",
    "seCalcSelectOn": "seCalcSelectOn",
    "seCalcSelectOff": "seCalcSelectOff",
    "seTouchStart": "seTouchStart",
    "seTouchEnd": "seTouchEnd",
    "seTimeup": "seTimeup",
    "startBunnyTouch": "startBunnyTouch",
    "startBunnyCalc": "startBunnyCalc",
    "EventName": "EventName",
    "SwitchList": "SwitchList",
    "deleteM4a": "deleteM4a",
    "child": "child",
    "MapName": "MapName",
    "light": "light",
    "Skip Key": "Skip Key",
    "Show Trace": "Show Trace",
    "MessageSkip": "MessageSkip",
    "skip key bind": "skip key bind",
    "UT": "UT",
    "F1": "F1",
    "F2": "F2",
    "F3": "F3",
    "F4": "F4",
    "F5": "F5",
    "F6": "F6",
    "F7": "F7",
    "F8": "F8",
    "F9": "F9",
    "F10": "F10",
    "F11": "F11",
    "F12": "F12",
    "commonKey": "commonKey",
    "freeMove": "freeMove",
    "Default Shift X": "Default Shift X",
    "Default Shift Y": "Default Shift Y",
    "typingCommand": "typingCommand",
    "typingColor": "typingColor",
    "typingSe": "typingSe",
    "typingSeVolume": "typingSeVolume",
    "typingSePitch": "typingSePitch",
    "typingSePan": "typingSePan",
    "shift": "shift",
    "escape": "escape",
    "KA": "KA",
    "KI": "KI",
    "KU": "KU",
    "KE": "KE",
    "KO": "KO",
    "SA": "SA",
    "SU": "SU",
    "SE": "SE",
    "SO": "SO",
    "TA": "TA",
    "TE": "TE",
    "TO": "TO",
    "NA": "NA",
    "NI": "NI",
    "NU": "NU",
    "NE": "NE",
    "NO": "NO",
    "HA": "HA",
    "HI": "HI",
    "HE": "HE",
    "HO": "HO",
    "MA": "MA",
    "MI": "MI",
    "MU": "MU",
    "ME": "ME",
    "MO": "MO",
    "YA": "YA",
    "YU": "YU",
    "YE": "YE",
    "YO": "YO",
    "RA": "RA",
    "RI": "RI",
    "RU": "RU",
    "RE": "RE",
    "RO": "RO",
    "WA": "WA",
    "WI": "WI",
    "WE": "WE",
    "WHO": "WHO",
    "WO": "WO",
    "VA": "VA",
    "VI": "VI",
    "VU": "VU",
    "VE": "VE",
    "VO": "VO",
    "LA": "LA",
    "LI": "LI",
    "LU": "LU",
    "LE": "LE",
    "LO": "LO",
    "GA": "GA",
    "GI": "GI",
    "GU": "GU",
    "GE": "GE",
    "GO": "GO",
    "ZA": "ZA",
    "ZU": "ZU",
    "ZE": "ZE",
    "ZO": "ZO",
    "DA": "DA",
    "DI": "DI",
    "DU": "DU",
    "DE": "DE",
    "DO": "DO",
    "BA": "BA",
    "BI": "BI",
    "BU": "BU",
    "BE": "BE",
    "BO": "BO",
    "PI": "PI",
    "PU": "PU",
    "PE": "PE",
    "PO": "PO",
    "LTU": "LTU",
    "LYA": "LYA",
    "LYU": "LYU",
    "LYO": "LYO",
    "KYA": "KYA",
    "KYU": "KYU",
    "KYO": "KYO",
    "GYA": "GYA",
    "GYU": "GYU",
    "GYO": "GYO",
    "THI": "THI",
    "TWU": "TWU",
    "DHI": "DHI",
    "DWU": "DWU",
    "NYA": "NYA",
    "NYU": "NYU",
    "NYO": "NYO",
    "HYA": "HYA",
    "HYU": "HYU",
    "HYO": "HYO",
    "BYA": "BYA",
    "BYU": "BYU",
    "BYO": "BYO",
    "PYA": "PYA",
    "PYU": "PYU",
    "PYO": "PYO",
    "FA": "FA",
    "FI": "FI",
    "FE": "FE",
    "FO": "FO",
    "MYA": "MYA",
    "MYU": "MYU",
    "MYO": "MYO",
    "RYA": "RYA",
    "RYU": "RYU",
    "RYO": "RYO",
    "SI": "SI",
    "SHI": "SHI",
    "CI": "CI",
    "typingSI": "typingSI",
    "TI": "TI",
    "CHI": "CHI",
    "typingTI": "typingTI",
    "TU": "TU",
    "TSU": "TSU",
    "typingTU": "typingTU",
    "HU": "HU",
    "FU": "FU",
    "typingHU": "typingHU",
    "NN": "NN",
    "N,NN": "N,NN",
    "typingNN": "typingNN",
    "JI": "JI",
    "ZI": "ZI",
    "typingJI": "typingJI",
    "SHA": "SHA",
    "SYA": "SYA",
    "typingSHA": "typingSHA",
    "SHU": "SHU",
    "SYU": "SYU",
    "SHE": "SHE",
    "SYE": "SYE",
    "SHO": "SHO",
    "SYO": "SYO",
    "CHA": "CHA",
    "CYA": "CYA",
    "typingCHA": "typingCHA",
    "CHU": "CHU",
    "CYU": "CYU",
    "TYU": "TYU",
    "CHE": "CHE",
    "CYE": "CYE",
    "TYE": "TYE",
    "CHO": "CHO",
    "CYO": "CYO",
    "TYO": "TYO",
    "JA": "JA",
    "JYA": "JYA",
    "ZYA": "ZYA",
    "typingJA": "typingJA",
    "JU": "JU",
    "JYU": "JYU",
    "ZYU": "ZYU",
    "JE": "JE",
    "JYE": "JYE",
    "ZYE": "ZYE",
    "JO": "JO",
    "JYO": "JYO",
    "ZYO": "ZYO",
    "typingTime": "typingTime",
    "typingMiss": "typingMiss",
    "gif": "gif",
    "png": "png",
    "other": "other",
    "2d": "2d",
    "rpgmvp": "rpgmvp",
    "enemies": "enemies",
    "sv": "sv",
    "system": "system",
    "easing": "easing",
    "sx": "sx",
    "sy": "sy",
    "MNE_": "MNE_",
    "PositionX": "PositionX",
    "SwitchNumber": "SwitchNumber",
    "Text Align": "Text Align",
    "Finish Command": "Finish Command",
    "Remove Text": "Remove Text",
    "Remove Icon": "Remove Icon",
    "Empty Text": "Empty Text",
    "Empty Icon": "Empty Icon",
    "Non": "Non",
    "Types": "Types",
    "MAXHP": "MAXHP",
    "MAX HP": "MAX HP",
    "MAXMP": "MAXMP",
    "MAX MP": "MAX MP",
    "MAXSP": "MAXSP",
    "MAX SP": "MAX SP",
    "ATK": "ATK",
    "STR": "STR",
    "DEF": "DEF",
    "MAT": "MAT",
    "INT": "INT",
    "SPI": "SPI",
    "MDF": "MDF",
    "RES": "RES",
    "AGI": "AGI",
    "SPD": "SPD",
    "LUK": "LUK",
    "CUSTOM PARAMETER FORMULA ERROR": "CUSTOM PARAMETER FORMULA ERROR",
    "equip": "equip",
    "optimize": "optimize",
    "clear": "clear",
    "NON": "NON",
    "test": "test",
    "object": "object",
    "Invalid GIF 87a": "Invalid GIF 87a",
    "header.": "header.",
    "Invalid block size": "Invalid block size",
    "Invalid graphics extension block.": "Invalid graphics extension block.",
    "Unknown graphic control label": "Unknown graphic control label",
    "0x": "0x",
    "Unknown gif block": "Unknown gif block",
    "Frame index out of range.": "Frame index out of range.",
    "Warning, gif stream longer than expected.": "Warning, gif stream longer than expected.",
    "Warning, gif stream shorter than expected.": "Warning, gif stream shorter than expected.",
    "string": "string",
    "object ArrayBuffer": "object ArrayBuffer",
    "incorrect header check": "incorrect header check",
    "unknown compression method": "unknown compression method",
    "invalid window size": "invalid window size",
    "unknown header flags set": "unknown header flags set",
    "header crc mismatch": "header crc mismatch",
    "invalid block type": "invalid block type",
    "invalid stored block lengths": "invalid stored block lengths",
    "too many length or distance symbols": "too many length or distance symbols",
    "invalid code lengths set": "invalid code lengths set",
    "invalid bit length repeat": "invalid bit length repeat",
    "invalid code": "invalid code",
    "missing end": "missing end",
    "invalid literal": "invalid literal",
    "set": "set",
    "invalid distances set": "invalid distances set",
    "code": "code",
    "invalid distance code": "invalid distance code",
    "invalid distance too far back": "invalid distance too far back",
    "incorrect data check": "incorrect data check",
    "incorrect length check": "incorrect length check",
    "must be non": "must be non",
    "need dictionary": "need dictionary",
    "stream end": "stream end",
    "file error": "file error",
    "stream error": "stream error",
    "data error": "data error",
    "insufficient memory": "insufficient memory",
    "buffer error": "buffer error",
    "incompatible version": "incompatible version",
    "pako deflate": "pako deflate",
    "from Nodeca project": "from Nodeca project",
    "pako inflate": "pako inflate",
    "The input is not a PNG file!": "The input is not a PNG file!",
    "IHDR": "IHDR",
    "IDAT": "IDAT",
    "acTL": "acTL",
    "fcTL": "fcTL",
    "fdAT": "fdAT",
    "pHYs": "pHYs",
    "cHRM": "cHRM",
    "tEXt": "tEXt",
    "iTXt": "iTXt",
    "PLTE": "PLTE",
    "hIST": "hIST",
    "tRNS": "tRNS",
    "gAMA": "gAMA",
    "sRGB": "sRGB",
    "bKGD": "bKGD",
    "IEND": "IEND",
    "init": "init",
    "common": "common",
    "function": "function",
    "children": "children",
    "pressedDistance": "pressedDistance",
    "TextDecoration": "TextDecoration",
    "NRP": "NRP",
    "ALIGN": "ALIGN",
    "BG": "BG",
    "FONT": "FONT",
    "WINDOW": "WINDOW",
    "undefined": "undefined",
    "0, 0, 0, 0": "0, 0, 0, 0",
    "OC": "OC",
    "OW": "OW",
    "bold": "bold",
    "every": "every",
    "everystop": "everystop",
    "add": "add",
    "true": "true",
    "reset": "reset",
    "alloff": "alloff",
    "get": "get",
    "join": "join",
    "byebye": "byebye",
    "timeevent": "timeevent",
    "ReturnToFirstCell": "ReturnToFirstCell",
    "movies": "movies",
    "video": "video",
    "webm": "webm",
    "mp4": "mp4",
    "bgmVolume": "bgmVolume",
    "meVolume": "meVolume",
    "seVolume": "seVolume",
    "voiceVolume": "voiceVolume",
    "requesting": "requesting",
    "canplaythrough": "canplaythrough",
    "ended": "ended",
    "error": "error",
    "loaded": "loaded",
    "load": "load",
    "GameVariableTouchX": "GameVariableTouchX",
    "left": "left",
    "pictures": "pictures",
    "img/": "img/",
    "numberMaxDigits": "numberMaxDigits",
    "numberFontSize": "numberFontSize",
    "numberSeparator": "numberSeparator",
    "MP_": "MP_",
    "TRUE": "TRUE",
    "MovieVolumeType": "MovieVolumeType",
    "Set the plugin parameter": "Set the plugin parameter",
    "Set the plugin parameter .": "Set the plugin parameter .",
    "data": "data",
    "sp": "sp",
    "desc": "desc",
    "var": "var",
    "gold": "gold",
    "stypeId": "stypeId",
    "STS GET SP": "STS GET SP",
    "STS SP 入手": "STS SP 入手",
    "right": "right",
    "IconSet": "IconSet",
    "LW": "LW",
    "learn skill": "learn skill",
    "ok": "ok",
    "cancel": "cancel",
    "pagedown": "pagedown",
    "pageup": "pageup",
    "STS": "STS",
    "cacheLimit": "cacheLimit",
    "screenWidth": "screenWidth",
    "screenHeight": "screenHeight",
    "renderingMode": "renderingMode",
    "alwaysDash": "alwaysDash",
    "changeWindowWidthTo": "changeWindowWidthTo",
    "changeWindowHeightTo": "changeWindowHeightTo",
    "canvas": "canvas",
    "webgl": "webgl",
    "Show Made With MV": "Show Made With MV",
    "Made with MV Image": "Made with MV Image",
    "Show Custom Splash": "Show Custom Splash",
    "Custom Image": "Custom Image",
    "Fade Out Time": "Fade Out Time",
    "Fade In Time": "Fade In Time",
    "Wait Time": "Wait Time",
    "Player's starting position is not set": "Player's starting position is not set",
    "use strict": "use strict",
    "RememberBattleBack": "RememberBattleBack",
    "remember": "remember",
    "battleback": "battleback",
    "pointer": "pointer",
    "weapon": "weapon",
    "item": "item",
    "price": "price",
    "target": "target",
    "armor": "armor",
    "Made with MV": "Made with MV",
    "Skill Tree Id": "Skill Tree Id",
    "Show Skill Command": "Show Skill Command",
    "Command Name": "Command Name",
    "Skill Menu Switch ID": "Skill Menu Switch ID",
    "Enable Confirmation": "Enable Confirmation",
    "Learned Actor Var ID": "Learned Actor Var ID",
    "Learned Skill Var ID": "Learned Skill Var ID",
    "Reset When Forgotten Skill": "Reset When Forgotten Skill",
    "Enabled Skill Count": "Enabled Skill Count",
    "Default Max Count": "Default Max Count",
    "Skill Learned Icon": "Skill Learned Icon",
    "SP Display Name": "SP Display Name",
    "Default Max Sp": "Default Max Sp",
    "Default Required SP": "Default Required SP",
    "Get Level Up Sp": "Get Level Up Sp",
    "Cost Sp Icon": "Cost Sp Icon",
    "Hide Sp Cost 0": "Hide Sp Cost 0",
    "Display Get Sp": "Display Get Sp",
    "Enable Class Sp": "Enable Class Sp",
    "NonBattleMember Sp Rate": "NonBattleMember Sp Rate",
    "Skill Frame Type": "Skill Frame Type",
    "Enabled Skill Frame": "Enabled Skill Frame",
    "Skill Frame Width": "Skill Frame Width",
    "Skill Frame Height": "Skill Frame Height",
    "Skill Icon Offset X": "Skill Icon Offset X",
    "Skill Icon Offset Y": "Skill Icon Offset Y",
    "Skill Name Format": "Skill Name Format",
    "Skill Text Offset X": "Skill Text Offset X",
    "Skill Text Offset Y": "Skill Text Offset Y",
    "Frame Color isLearned": "Frame Color isLearned",
    "Frame Color isLearn OK": "Frame Color isLearn OK",
    "Frame Color isReqSkill NG": "Frame Color isReqSkill NG",
    "Frame Color isRequired NG": "Frame Color isRequired NG",
    "Count Frame Type": "Count Frame Type",
    "Default Frame Image Index": "Default Frame Image Index",
    "Draw Count Frame": "Draw Count Frame",
    "Count Frame Width": "Count Frame Width",
    "Count Frame Height": "Count Frame Height",
    "Count Frame Thick": "Count Frame Thick",
    "Count Frame Offset X": "Count Frame Offset X",
    "Count Frame Offset Y": "Count Frame Offset Y",
    "Count Frame Format": "Count Frame Format",
    "Skill Count Offset X": "Skill Count Offset X",
    "Skill Count Offset Y": "Skill Count Offset Y",
    "Draw Line Type": "Draw Line Type",
    "Tree Line Thick": "Tree Line Thick",
    "Add Frame To Line": "Add Frame To Line",
    "Fit Line Color To Frame": "Fit Line Color To Frame",
    "Actor Status Text1": "Actor Status Text1",
    "Actor Status Text2": "Actor Status Text2",
    "Actor Status Text3": "Actor Status Text3",
    "Actor Status Space": "Actor Status Space",
    "Actor Status Space In Text": "Actor Status Space In Text",
    "Actor Status Width Rate": "Actor Status Width Rate",
    "Skill Status Title Format": "Skill Status Title Format",
    "Adjust Skill Desc Width": "Adjust Skill Desc Width",
    "Prioritize Skill Desc": "Prioritize Skill Desc",
    "Display Tree Type Frame": "Display Tree Type Frame",
    "Cost Title Format": "Cost Title Format",
    "Cost Item Format": "Cost Item Format",
    "Cost Number Format": "Cost Number Format",
    "Cost Number Width": "Cost Number Width",
    "Cost Max Count Format": "Cost Max Count Format",
    "Skill Tree Max Cols": "Skill Tree Max Cols",
    "Skill Tree Height Space": "Skill Tree Height Space",
    "Preskill Title Format": "Preskill Title Format",
    "Preskill Item Format": "Preskill Item Format",
    "Conf Title Format": "Conf Title Format",
    "Confirmation Ok Format": "Confirmation Ok Format",
    "Confirmation Cancel Format": "Confirmation Cancel Format",
    "Learn SE Name": "Learn SE Name",
    "Learn SE Volume": "Learn SE Volume",
    "Learn SE Pitch": "Learn SE Pitch",
    "Learn SE Pan": "Learn SE Pan",
    "Cost Gold Icon": "Cost Gold Icon",
    "Cost Variables Icon": "Cost Variables Icon",
    "width": "width",
    "text": "text",
    "name": "name",
    "state": "state",
    "hp": "hp",
    "height": "height",
    "mp": "mp",
    "tp": "tp",
    "MousePointerExtend": "MousePointerExtend",
    "YEP": "YEP",
    "Allows for the equipment system to be more flexible to\nallow for unique equipment slots per class.": "Allows for the equipment system to be more flexible to\nallow for unique equipment slots per class.",
    "center": "center",
    "Finish": "Finish",
    "Remove": "Remove",
    "PixiApngAndGif": "PixiApngAndGif",
    "ApngPicture": "ApngPicture",
    "APNGピクチャプラグイン": "APNGピクチャプラグイン",
    "giftikubi1": "giftikubi1",
    "kurigif": "kurigif",
    "tikubisyokusyu": "tikubisyokusyu",
    "fera1": "fera1",
    "fera2": "fera2",
    "ferasyasei": "ferasyasei",
    "kiri1": "kiri1",
    "kiri2": "kiri2",
    "kuri3": "kuri3",
    "zenritusen": "zenritusen",
    "tekoki": "tekoki",
    "yubi1": "yubi1",
    "yubi2": "yubi2",
    "yubi3": "yubi3",
    "namename1": "namename1",
    "namename2": "namename2",
    "tekoki tome": "tekoki tome",
    "EasingPicture": "EasingPicture",
    "op": "op",
    "01 yui t1": "01 yui t1",
    "01 yui t2": "01 yui t2",
    "syasei": "syasei",
    "Damage3": "Damage3",
    "02 airisu t2": "02 airisu t2",
    "Damage4": "Damage4",
    "main": "main",
    "ooana": "ooana",
    "d1": "d1",
    "Damage5": "Damage5",
    "02 airisu t1": "02 airisu t1",
    "Ice1": "Ice1",
    "Move5": "Move5",
    "sheets seijoui": "sheets seijoui",
    "base": "base",
    "PerituneMaterial": "PerituneMaterial",
    "10 haido t1": "10 haido t1",
    "10 haido t2": "10 haido t2",
    "guild": "guild",
    "hospital": "hospital",
    "church": "church",
    "douguya": "douguya",
    "shop": "shop",
    "huzoku": "huzoku",
    "shrine": "shrine",
    "yado": "yado",
    "school": "school",
    "20 syana t1": "20 syana t1",
    "huuzoku": "huuzoku",
    "back piston3": "back piston3",
    "d2": "d2",
    "d3": "d3",
    "Explosion2": "Explosion2",
    "d4": "d4",
    "d5": "d5",
    "d6": "d6",
    "d7": "d7",
    "25 akuma 1": "25 akuma 1",
    "d8": "d8",
    "piston": "piston",
    "d9": "d9",
    "25 akuma 2": "25 akuma 2",
    "d10": "d10",
    "d11": "d11",
    "25 akuma": "25 akuma",
    "aomuke omankobubun": "aomuke omankobubun",
    "tikubi migibubun": "tikubi migibubun",
    "tikubi hidaribubun": "tikubi hidaribubun",
    "comand score": "comand score",
    "comand kando": "comand kando",
    "comand item": "comand item",
    "comand taii": "comand taii",
    "comand owari": "comand owari",
    "botepiston3": "botepiston3",
    "seijoui3": "seijoui3",
    "botepiston1": "botepiston1",
    "piston1": "piston1",
    "botepiston2": "botepiston2",
    "seijoui2": "seijoui2",
    "score zettyou": "score zettyou",
    "hukidasi heart": "hukidasi heart",
    "comand nakadasi": "comand nakadasi",
    "comand umaseru": "comand umaseru",
    "score umu": "score umu",
    "score nakadasi": "score nakadasi",
    "back botepiston3": "back botepiston3",
    "back botepiston1": "back botepiston1",
    "back piston1": "back piston1",
    "back botepiston2": "back botepiston2",
    "back piston2": "back piston2",
    "sheets kijoui": "sheets kijoui",
    "kijoui botepiston3": "kijoui botepiston3",
    "kijoui piston3": "kijoui piston3",
    "kijoui botepiston1": "kijoui botepiston1",
    "kijoui piston1": "kijoui piston1",
    "kijoui botepiston2": "kijoui botepiston2",
    "kijoui piston2": "kijoui piston2",
    "home": "home",
    "Heal1": "Heal1",
    "パーティ": "パーティ",
    "17 kei t2": "17 kei t2",
    "09 tetora t2": "09 tetora t2",
    "04 envi t1": "04 envi t1",
    "12 raiden t1": "12 raiden t1",
    "11 mikado t1": "11 mikado t1",
    "18 sandora t1": "18 sandora t1",
    "06 reona t1": "06 reona t1",
    "21 marin t2": "21 marin t2",
    "23 yoru t1": "23 yoru t1",
    "24 riina t1": "24 riina t1",
    "08 rena t2": "08 rena t2",
    "13 sinonome t1": "13 sinonome t1",
    "07 keren t1": "07 keren t1",
    "22 sora t1": "22 sora t1",
    "14 gigi t1": "14 gigi t1",
    "05 san t1": "05 san t1",
    "03 noeru t1": "03 noeru t1",
    "19 serena t1": "19 serena t1",
    "16 sharurotto t1": "16 sharurotto t1",
    "15 syenmu t1": "15 syenmu t1",
    "2 airisu": "2 airisu",
    "02 P2": "02 P2",
    "02 p1": "02 p1",
    "kutyakutya": "kutyakutya",
    "02 rape1": "02 rape1",
    "02 rape2": "02 rape2",
    "02 rape3": "02 rape3",
    "02 syussan1": "02 syussan1",
    "02 syussan2": "02 syussan2",
    "02 syussan3": "02 syussan3",
    "02 saimin1": "02 saimin1",
    "02 saimin2": "02 saimin2",
    "02 saimin3": "02 saimin3",
    "02 kekkon1": "02 kekkon1",
    "02 kekkon3": "02 kekkon3",
    "02 kekkon2": "02 kekkon2",
    "02 musume1": "02 musume1",
    "02 musume2": "02 musume2",
    "02 musume3": "02 musume3",
    "02 uu1": "02 uu1",
    "02 uu2": "02 uu2",
    "02 uu3": "02 uu3",
    "Equip2": "Equip2",
    "09 tetora t1": "09 tetora t1",
    "9 tetora": "9 tetora",
    "p tetora 2": "p tetora 2",
    "p tetora 1": "p tetora 1",
    "09 r1": "09 r1",
    "09 r2": "09 r2",
    "09 r3": "09 r3",
    "09 u1": "09 u1",
    "09 u2": "09 u2",
    "09 u3": "09 u3",
    "09 s1": "09 s1",
    "09 s2": "09 s2",
    "09 s3": "09 s3",
    "09 k1": "09 k1",
    "09 k2": "09 k2",
    "09 k3": "09 k3",
    "09 m1": "09 m1",
    "09 m3": "09 m3",
    "09 m2": "09 m2",
    "09 uu1": "09 uu1",
    "09 uu2": "09 uu2",
    "09 uu3": "09 uu3",
    "17 kei t1": "17 kei t1",
    "17 kei": "17 kei",
    "p kei 2": "p kei 2",
    "p kei 1": "p kei 1",
    "17 r1": "17 r1",
    "17 r2": "17 r2",
    "17 r3": "17 r3",
    "17 u1": "17 u1",
    "17 u2": "17 u2",
    "17 u3": "17 u3",
    "17 s1": "17 s1",
    "17 s2": "17 s2",
    "17 s3": "17 s3",
    "17 k1": "17 k1",
    "17 k3": "17 k3",
    "17 m1": "17 m1",
    "17 m2": "17 m2",
    "17 m3": "17 m3",
    "17 uu1": "17 uu1",
    "17 uu2": "17 uu2",
    "17 uu3": "17 uu3",
    "04 envi t2": "04 envi t2",
    "4 envi": "4 envi",
    "p envi2": "p envi2",
    "p envi1": "p envi1",
    "04 rape1": "04 rape1",
    "04 rape2": "04 rape2",
    "04 rape3": "04 rape3",
    "04 u1": "04 u1",
    "04 u2": "04 u2",
    "04 u3": "04 u3",
    "04 s1": "04 s1",
    "04 s2": "04 s2",
    "04 s3": "04 s3",
    "04 k1": "04 k1",
    "04 k3": "04 k3",
    "04 k2": "04 k2",
    "04 m1": "04 m1",
    "04 m2": "04 m2",
    "04 m3": "04 m3",
    "04 uu1": "04 uu1",
    "04 uu2": "04 uu2",
    "04 uu3": "04 uu3",
    "20 syana": "20 syana",
    "p megido 2": "p megido 2",
    "p megido 1": "p megido 1",
    "20 r1": "20 r1",
    "20 r2": "20 r2",
    "20 r3": "20 r3",
    "20 u1": "20 u1",
    "20 u2": "20 u2",
    "20 u3": "20 u3",
    "20 s1": "20 s1",
    "20 s2": "20 s2",
    "20 k1": "20 k1",
    "20 k3": "20 k3",
    "20 k2": "20 k2",
    "20 m1": "20 m1",
    "20 m2": "20 m2",
    "20 uu1": "20 uu1",
    "20 uu2": "20 uu2",
    "20 uu3": "20 uu3",
    "12 raiden": "12 raiden",
    "p raiden 2": "p raiden 2",
    "p raiden 1": "p raiden 1",
    "12 r1": "12 r1",
    "12 r3": "12 r3",
    "12 r2": "12 r2",
    "12 u1": "12 u1",
    "12 u2": "12 u2",
    "12 u3": "12 u3",
    "12 s1": "12 s1",
    "12 s3": "12 s3",
    "12 s2": "12 s2",
    "12  k1": "12  k1",
    "12 k3": "12 k3",
    "12 k2": "12 k2",
    "12 m1": "12 m1",
    "12 m2": "12 m2",
    "12 m3": "12 m3",
    "12 uu1": "12 uu1",
    "12 uu2": "12 uu2",
    "12 uu3": "12 uu3",
    "11 mikado": "11 mikado",
    "p mikado 2": "p mikado 2",
    "p mikado 1": "p mikado 1",
    "07 r1": "07 r1",
    "07 r2": "07 r2",
    "07 r3": "07 r3",
    "07 u1": "07 u1",
    "07 u2": "07 u2",
    "07 u3": "07 u3",
    "07 s1": "07 s1",
    "07 s2": "07 s2",
    "07 s3": "07 s3",
    "07 k1": "07 k1",
    "07 k2": "07 k2",
    "07 k3": "07 k3",
    "07 m1": "07 m1",
    "07 m2": "07 m2",
    "07 uu1": "07 uu1",
    "07 uu2": "07 uu2",
    "07 uu3": "07 uu3",
    "10 haido": "10 haido",
    "p hiado 2": "p hiado 2",
    "p haido 1": "p haido 1",
    "10 r1": "10 r1",
    "10 r2": "10 r2",
    "10 r3": "10 r3",
    "10 u1": "10 u1",
    "10 u2": "10 u2",
    "10 u3": "10 u3",
    "10 s1": "10 s1",
    "10 s2": "10 s2",
    "10 s3": "10 s3",
    "10 k1": "10 k1",
    "10 k3": "10 k3",
    "10 k2": "10 k2",
    "10 m1": "10 m1",
    "10 m2": "10 m2",
    "10 m3": "10 m3",
    "10 uu1": "10 uu1",
    "10 uu2": "10 uu2",
    "10 uu3": "10 uu3",
    "18 sandora t2": "18 sandora t2",
    "18 sandora": "18 sandora",
    "p sandora 2": "p sandora 2",
    "p sandora 1": "p sandora 1",
    "18 r1": "18 r1",
    "18 r2": "18 r2",
    "18 r3": "18 r3",
    "18 u1": "18 u1",
    "18 u2": "18 u2",
    "18 u3": "18 u3",
    "18 s1": "18 s1",
    "18 s2": "18 s2",
    "18 s3": "18 s3",
    "18 k1": "18 k1",
    "18 k3": "18 k3",
    "18 k2": "18 k2",
    "18 m1": "18 m1",
    "18 m3": "18 m3",
    "18 m2": "18 m2",
    "18 uu1": "18 uu1",
    "18 uu3": "18 uu3",
    "18 uu4": "18 uu4",
    "06 reona t2": "06 reona t2",
    "6 reona": "6 reona",
    "p reona 2": "p reona 2",
    "p reona 1": "p reona 1",
    "06 r1": "06 r1",
    "06 r3": "06 r3",
    "06 r2": "06 r2",
    "06 u1": "06 u1",
    "06 u2": "06 u2",
    "06 u3": "06 u3",
    "06 s1": "06 s1",
    "06 s2": "06 s2",
    "06 s3": "06 s3",
    "06 k1": "06 k1",
    "06 k3": "06 k3",
    "06 k2": "06 k2",
    "06 m1": "06 m1",
    "06 m3": "06 m3",
    "06 m2": "06 m2",
    "06 uu1": "06 uu1",
    "06 uu2": "06 uu2",
    "06 uu3": "06 uu3",
    "21 marin t1": "21 marin t1",
    "21 marin": "21 marin",
    "p marin 2": "p marin 2",
    "p marin 1": "p marin 1",
    "21 r1": "21 r1",
    "21 r2": "21 r2",
    "21 r3": "21 r3",
    "21 u1": "21 u1",
    "21 u2": "21 u2",
    "21 u3": "21 u3",
    "21 s1": "21 s1",
    "21 s2": "21 s2",
    "21 s3": "21 s3",
    "21 k1": "21 k1",
    "21 k2": "21 k2",
    "21 k3": "21 k3",
    "21 m1": "21 m1",
    "21 m2": "21 m2",
    "21 m3": "21 m3",
    "21 uu1": "21 uu1",
    "21 uu2": "21 uu2",
    "21 uu3": "21 uu3",
    "23 yoru t2": "23 yoru t2",
    "23 yoru": "23 yoru",
    "p yoru 2": "p yoru 2",
    "p yoru 1": "p yoru 1",
    "23 r1": "23 r1",
    "23 r2": "23 r2",
    "23 r3": "23 r3",
    "23 u1": "23 u1",
    "23 u2": "23 u2",
    "23 u3": "23 u3",
    "23 s1": "23 s1",
    "23 s2": "23 s2",
    "23 s3": "23 s3",
    "23 k1": "23 k1",
    "23 k3": "23 k3",
    "23 k2": "23 k2",
    "23 m1": "23 m1",
    "23 m2": "23 m2",
    "23 m3": "23 m3",
    "23 uu1": "23 uu1",
    "23 uu2": "23 uu2",
    "23 uu3": "23 uu3",
    "24 riina t2": "24 riina t2",
    "24 riina": "24 riina",
    "p riina 2": "p riina 2",
    "p riina 1": "p riina 1",
    "24 r1": "24 r1",
    "24 r2": "24 r2",
    "24 r3": "24 r3",
    "24 u1": "24 u1",
    "24 u2": "24 u2",
    "24 u3": "24 u3",
    "24 s1": "24 s1",
    "24 s2": "24 s2",
    "24 s3": "24 s3",
    "24 k1": "24 k1",
    "24 k3": "24 k3",
    "24 k2": "24 k2",
    "24 m1": "24 m1",
    "24 m3": "24 m3",
    "24 m2": "24 m2",
    "24 uu1": "24 uu1",
    "24 uu2": "24 uu2",
    "24 uu3": "24 uu3",
    "8 rena": "8 rena",
    "p rena 2": "p rena 2",
    "p rena 1": "p rena 1",
    "08 r1": "08 r1",
    "08 r2": "08 r2",
    "08 r3": "08 r3",
    "08 u1": "08 u1",
    "08 u2": "08 u2",
    "08 u3": "08 u3",
    "08 s1": "08 s1",
    "08 s2": "08 s2",
    "08 s3": "08 s3",
    "08 k1": "08 k1",
    "08 k2": "08 k2",
    "08 m1": "08 m1",
    "08 m2": "08 m2",
    "08 m3": "08 m3",
    "08 uu1": "08 uu1",
    "08 uu2": "08 uu2",
    "08 uu3": "08 uu3",
    "13 sinonome t2": "13 sinonome t2",
    "13 sinonome": "13 sinonome",
    "p sinonome 2": "p sinonome 2",
    "p sinonome 1": "p sinonome 1",
    "13 r1": "13 r1",
    "13 r2": "13 r2",
    "13 r3": "13 r3",
    "13 u1": "13 u1",
    "13 u2": "13 u2",
    "13 u3": "13 u3",
    "13 s1": "13 s1",
    "13 s2": "13 s2",
    "13 s3": "13 s3",
    "13 k1": "13 k1",
    "13 k2": "13 k2",
    "13 k3": "13 k3",
    "13 m1": "13 m1",
    "13 m2": "13 m2",
    "13 m3": "13 m3",
    "13 uu1": "13 uu1",
    "13 uu2": "13 uu2",
    "13 uu3": "13 uu3",
    "7 keren": "7 keren",
    "p keren 2": "p keren 2",
    "p keren 1": "p keren 1",
    "11 r1": "11 r1",
    "11 r3": "11 r3",
    "11 r2": "11 r2",
    "11 u1": "11 u1",
    "11 u2": "11 u2",
    "11 u3": "11 u3",
    "11 s1": "11 s1",
    "11 s2": "11 s2",
    "11 s3": "11 s3",
    "11 k1": "11 k1",
    "11 k2": "11 k2",
    "11 k3": "11 k3",
    "11 m1": "11 m1",
    "11 m3": "11 m3",
    "11 uu1": "11 uu1",
    "11 uu2": "11 uu2",
    "11 uu3": "11 uu3",
    "22 sora t2": "22 sora t2",
    "22 sora": "22 sora",
    "p sora 2": "p sora 2",
    "p sora 1": "p sora 1",
    "22 r1": "22 r1",
    "22 r2": "22 r2",
    "22 r3": "22 r3",
    "22 u1": "22 u1",
    "22 u2": "22 u2",
    "22 u3": "22 u3",
    "22 s1": "22 s1",
    "22 s2": "22 s2",
    "22 s3": "22 s3",
    "22 k1": "22 k1",
    "22 k3": "22 k3",
    "22 k2": "22 k2",
    "22 m1": "22 m1",
    "22 m2": "22 m2",
    "22 m3": "22 m3",
    "22 uu1": "22 uu1",
    "22 uu2": "22 uu2",
    "22 uu3": "22 uu3",
    "14 gigi t2": "14 gigi t2",
    "14 gigi": "14 gigi",
    "p gigi 2": "p gigi 2",
    "p gigi 1": "p gigi 1",
    "14 r1": "14 r1",
    "14 r2": "14 r2",
    "14 u1": "14 u1",
    "14 u2": "14 u2",
    "14 u3": "14 u3",
    "14 s1": "14 s1",
    "14 s2": "14 s2",
    "14 k1": "14 k1",
    "14 k2": "14 k2",
    "14 m1": "14 m1",
    "14 m2": "14 m2",
    "14 uu1": "14 uu1",
    "14 uu2": "14 uu2",
    "14 uu3": "14 uu3",
    "5 san": "5 san",
    "p san 2": "p san 2",
    "p san 1": "p san 1",
    "05 rape1": "05 rape1",
    "05 rape2": "05 rape2",
    "05 rape3": "05 rape3",
    "05 u1": "05 u1",
    "05 u2": "05 u2",
    "05 u3": "05 u3",
    "05 s1": "05 s1",
    "05 s2": "05 s2",
    "05 s3": "05 s3",
    "05 k1": "05 k1",
    "05 k2": "05 k2",
    "05 k3": "05 k3",
    "05 m1": "05 m1",
    "05 m2": "05 m2",
    "05 m3": "05 m3",
    "05 uu1": "05 uu1",
    "05 uu2": "05 uu2",
    "05 uu3": "05 uu3",
    "03 noeru t2": "03 noeru t2",
    "3 noeru": "3 noeru",
    "p noeru 2": "p noeru 2",
    "p noeru 1": "p noeru 1",
    "03 r1": "03 r1",
    "03 r3": "03 r3",
    "03 r2": "03 r2",
    "03 u1": "03 u1",
    "03 u2": "03 u2",
    "03 u3": "03 u3",
    "03 s1": "03 s1",
    "03 s2": "03 s2",
    "03 s3": "03 s3",
    "03 k1": "03 k1",
    "03 k2": "03 k2",
    "03 k3": "03 k3",
    "03 m1": "03 m1",
    "03 m2": "03 m2",
    "03 m3": "03 m3",
    "03 uu1": "03 uu1",
    "03 uu2": "03 uu2",
    "03 uu3": "03 uu3",
    "Huera": "Huera",
    "e11": "e11",
    "e12": "e12",
    "e21": "e21",
    "e22": "e22",
    "e41": "e41",
    "e42": "e42",
    "e51": "e51",
    "e52": "e52",
    "e61": "e61",
    "e62": "e62",
    "e63": "e63",
    "e64": "e64",
    "e71": "e71",
    "e72": "e72",
    "e81": "e81",
    "e83": "e83",
    "e101": "e101",
    "e103": "e103",
    "e111": "e111",
    "e112": "e112",
    "e113": "e113",
    "e121": "e121",
    "e122": "e122",
    "e123": "e123",
    "e131": "e131",
    "e133": "e133",
    "e132": "e132",
    "e134": "e134",
    "e141": "e141",
    "e142": "e142",
    "e143": "e143",
    "e144": "e144",
    "e145": "e145",
    "e152": "e152",
    "e161": "e161",
    "e162": "e162",
    "e163": "e163",
    "e171": "e171",
    "e172": "e172",
    "e173": "e173",
    "e181": "e181",
    "e182": "e182",
    "e183": "e183",
    "e191": "e191",
    "e192": "e192",
    "e193": "e193",
    "e201": "e201",
    "e202": "e202",
    "e203": "e203",
    "e204": "e204",
    "e205": "e205",
    "e206": "e206",
    "e207": "e207",
    "e211": "e211",
    "e212": "e212",
    "e213": "e213",
    "e214": "e214",
    "e215": "e215",
    "e216": "e216",
    "e221": "e221",
    "e222": "e222",
    "e223": "e223",
    "e231": "e231",
    "e233": "e233",
    "e232": "e232",
    "e241": "e241",
    "e242": "e242",
    "e243": "e243",
    "e251": "e251",
    "e252": "e252",
    "e253": "e253",
    "02 mago1": "02 mago1",
    "02 mago3": "02 mago3",
    "m tetora": "m tetora",
    "m kei": "m kei",
    "m envi": "m envi",
    "m megido": "m megido",
    "m raiden": "m raiden",
    "m mikado": "m mikado",
    "m haido": "m haido",
    "m sandora": "m sandora",
    "m reona": "m reona",
    "m marin": "m marin",
    "m yoru": "m yoru",
    "m riina": "m riina",
    "m rena": "m rena",
    "m sinonome": "m sinonome",
    "m keren": "m keren",
    "m sora": "m sora",
    "m gigi": "m gigi",
    "m san": "m san",
    "m noeru": "m noeru",
    "m serena": "m serena",
    "m syarurotto": "m syarurotto",
    "m syenmu": "m syenmu",
    "19 serena t2": "19 serena t2",
    "19 serena": "19 serena",
    "p serena 2": "p serena 2",
    "p serena 1": "p serena 1",
    "19 r1": "19 r1",
    "19 r2": "19 r2",
    "19 r3": "19 r3",
    "19 u1": "19 u1",
    "19 u2": "19 u2",
    "19 u3": "19 u3",
    "19 s1": "19 s1",
    "19 s2": "19 s2",
    "19 s3": "19 s3",
    "19 k1": "19 k1",
    "19 k2": "19 k2",
    "19 k3": "19 k3",
    "19 m1": "19 m1",
    "19 m2": "19 m2",
    "19 m3": "19 m3",
    "19 uu1": "19 uu1",
    "19 uu2": "19 uu2",
    "19 uu3": "19 uu3",
    "16 sharurotto t2": "16 sharurotto t2",
    "16 sharurotto": "16 sharurotto",
    "p syarurotto 2": "p syarurotto 2",
    "p syarurotto 1": "p syarurotto 1",
    "16 r1": "16 r1",
    "16 r2": "16 r2",
    "16 r3": "16 r3",
    "16 u1": "16 u1",
    "16 u2": "16 u2",
    "16 u3": "16 u3",
    "16 s1": "16 s1",
    "16 s2": "16 s2",
    "16 s3": "16 s3",
    "16 k1": "16 k1",
    "16 k3": "16 k3",
    "16 k2": "16 k2",
    "16 m1": "16 m1",
    "16 m2": "16 m2",
    "16 m3": "16 m3",
    "16 uu1": "16 uu1",
    "16 uu2": "16 uu2",
    "16 uu3": "16 uu3",
    "15 syenmu t2": "15 syenmu t2",
    "15 syenmu": "15 syenmu",
    "p syenmu 2": "p syenmu 2",
    "p syenmu 1": "p syenmu 1",
    "15 r1": "15 r1",
    "15 r2": "15 r2",
    "15 r3": "15 r3",
    "15 u1": "15 u1",
    "15 u2": "15 u2",
    "15 u3": "15 u3",
    "15 s1": "15 s1",
    "15 s2": "15 s2",
    "15 s3": "15 s3",
    "15 k1": "15 k1",
    "15 k2": "15 k2",
    "15 k3": "15 k3",
    "15 m1": "15 m1",
    "15 m2": "15 m2",
    "15 m3": "15 m3",
    "15 uu1": "15 uu1",
    "15 uu2": "15 uu2",
    "15 uu3": "15 uu3",
    "p yui2": "p yui2",
    "p yui1": "p yui1",
    "01 a2": "01 a2",
    "01 b1": "01 b1",
    "01 b2": "01 b2",
    "01 c1": "01 c1",
    "01 c2": "01 c2",
    "01 d1": "01 d1",
    "01 d2": "01 d2",
    "01 d3": "01 d3",
    "01 e1": "01 e1",
    "01 e2": "01 e2",
    "01 e3": "01 e3",
    "01 u1": "01 u1",
    "01 u3": "01 u3",
    "01 u4": "01 u4",
    "z d": "z d",
    "z k": "z k",
    "01 w1": "01 w1",
    "01 w2": "01 w2",
    "01 w3": "01 w3",
    "01 w4": "01 w4",
    "01 w5": "01 w5",
    "01 f1": "01 f1",
    "01 f2": "01 f2",
    "01 s1": "01 s1",
    "01 z1": "01 z1",
    "01 s2": "01 s2",
    "01 z2": "01 z2",
    "01 s3": "01 s3",
    "01 z3": "01 z3",
    "01 s4": "01 s4",
    "01 s5": "01 s5",
    "comand tomeru": "comand tomeru",
    "comando nuku": "comando nuku",
    "comand ugokasu": "comand ugokasu",
    "comand sounyuu": "comand sounyuu",
    "botenuku3": "botenuku3",
    "nuku3": "nuku3",
    "botenuku1": "botenuku1",
    "nuku": "nuku",
    "botenuku2": "botenuku2",
    "nuku2": "nuku2",
    "back botenuku3": "back botenuku3",
    "back nuku3": "back nuku3",
    "back botenuku1": "back botenuku1",
    "back nuku1": "back nuku1",
    "back botenuku2": "back botenuku2",
    "back nuku2": "back nuku2",
    "kijoui botenuku3": "kijoui botenuku3",
    "kijoui nuku3": "kijoui nuku3",
    "kijoui botenuku1": "kijoui botenuku1",
    "kijoui nuku1": "kijoui nuku1",
    "kijoui botenuku2": "kijoui botenuku2",
    "kijoui nuku2": "kijoui nuku2",
    "botenakadasi3": "botenakadasi3",
    "nakadasi3": "nakadasi3",
    "botenakadasi1": "botenakadasi1",
    "nakadasi": "nakadasi",
    "botenakadasi2": "botenakadasi2",
    "nakadasi2": "nakadasi2",
    "back botenakadasi3": "back botenakadasi3",
    "back nakadasi3": "back nakadasi3",
    "back botenakadasi1": "back botenakadasi1",
    "back nakadasi1": "back nakadasi1",
    "back botenakadasi2": "back botenakadasi2",
    "back nakadasi2": "back nakadasi2",
    "kijoui botenakadasi3": "kijoui botenakadasi3",
    "kijoui nakadasi3": "kijoui nakadasi3",
    "kijoui botenakadasi1": "kijoui botenakadasi1",
    "kijoui nakadasi1": "kijoui nakadasi1",
    "kijoui botenakadasi12": "kijoui botenakadasi12",
    "kijoui nakadasi2": "kijoui nakadasi2",
    "aomuke teman": "aomuke teman",
    "matahiraki omankobubun": "matahiraki omankobubun",
    "matahiraki teman": "matahiraki teman",
    "tikubi migite": "tikubi migite",
    "tikubi hidarite": "tikubi hidarite",
    "umu3": "umu3",
    "umu2": "umu2",
    "umu1": "umu1",
    "back umu3": "back umu3",
    "back umu2": "back umu2",
    "back umu1": "back umu1",
    "kijoui umu3": "kijoui umu3",
    "kijoui umu2": "kijoui umu2",
    "kijoui umu1": "kijoui umu1",
    "taiji1": "taiji1",
    "taiji2": "taiji2",
    "taiji3": "taiji3",
    "taiji4": "taiji4",
    "taiji5": "taiji5",
    "taiji6": "taiji6",
    "taiji7": "taiji7",
    "taiji8": "taiji8",
    "taiji9": "taiji9",
    "taiji10": "taiji10",
    "taiji11": "taiji11",
    "20puru tatie egao": "20puru tatie egao",
    "16koa tatie egao": "16koa tatie egao",
    "22yuna tatie huan": "22yuna tatie huan",
    "23 ui tatie egao": "23 ui tatie egao",
    "24 koko tatie egao": "24 koko tatie egao",
    "26 mai tatie huan": "26 mai tatie huan",
    "20puru uri1": "20puru uri1",
    "20puru uri3": "20puru uri3",
    "20puru uri2": "20puru uri2",
    "16koa uri1": "16koa uri1",
    "16koa uri3": "16koa uri3",
    "16koa uri2": "16koa uri2",
    "22yuna uri1": "22yuna uri1",
    "22yuna uri2": "22yuna uri2",
    "22yuna uri3": "22yuna uri3",
    "23 ui uri1": "23 ui uri1",
    "23 ui uri3": "23 ui uri3",
    "23 ui uri2": "23 ui uri2",
    "24 koko uri1": "24 koko uri1",
    "24 koko uri2": "24 koko uri2",
    "24 koko uri3": "24 koko uri3",
    "26 mai uri1": "26 mai uri1",
    "26 mai uri3": "26 mai uri3",
    "26 mai uri2": "26 mai uri2",
    "Ship3": "Ship3",
    "Vehicle": "Vehicle",
    "Dragon": "Dragon",
    "Ship1": "Ship1",
    "Defeat1": "Defeat1",
    "Mystery": "Mystery",
    "Ship2": "Ship2",
    "Cursor2": "Cursor2",
    "Decision1": "Decision1",
    "Cancel2": "Cancel2",
    "Buzzer1": "Buzzer1",
    "Equip1": "Equip1",
    "Sword4": "Sword4",
    "Sword5": "Sword5",
    "Battle2": "Battle2",
    "Run": "Run",
    "Paralyze3": "Paralyze3",
    "Magic3": "Magic3",
    "Collapse4": "Collapse4",
    "Collapse2": "Collapse2",
    "Collapse3": "Collapse3",
    "Recovery": "Recovery",
    "Miss": "Miss",
    "Evasion1": "Evasion1",
    "Evasion2": "Evasion2",
    "Reflection": "Reflection",
    "Shop1": "Shop1",
    "Item3": "Item3",
    "Victory2": "Victory2",
    "Sts Data": "Sts Data",
    "1 yui": "1 yui",
    "3 noerru": "3 noerru",
    "slime": "slime",
    "rabbit": "rabbit",
    "dog": "dog",
    "rat": "rat",
    "sheep": "sheep",
    "cow": "cow",
    "incect2": "incect2",
    "cat2": "cat2",
    "bunny": "bunny",
    "shika": "shika",
    "bee": "bee",
    "slime2": "slime2",
    "harpy": "harpy",
    "shojo": "shojo",
    "dragon": "dragon",
    "cat": "cat",
    "tentacle": "tentacle",
    "tensi": "tensi",
    "rabbit2": "rabbit2",
    "undead": "undead",
    "demon2": "demon2",
    "oni": "oni",
    "muscler": "muscler",
    "medusa2": "medusa2",
    "yukionnna": "yukionnna",
    "spider": "spider",
    "sitai": "sitai",
    "crow": "crow",
    "lamia": "lamia",
    "skull": "skull",
    "kyonsi": "kyonsi",
    "wolf": "wolf",
    "zombie": "zombie",
    "killar": "killar",
    "demon": "demon",
    "lamia2": "lamia2",
    "incect": "incect",
    "shojo2": "shojo2",
    "kaonasi": "kaonasi",
    "horse": "horse",
    "lamia3": "lamia3",
    "inu": "inu",
    "tensi2": "tensi2",
    "medusa": "medusa",
    "boss": "boss",
    "* 4 - b": "* 4 - b",
    "* 2": "* 2",
    "* 3": "* 3",
    "* 8 - b": "* 8 - b",
    "* 12 - b": "* 12 - b",
    "1500 + a": "1500 + a",
    "* 10 - b": "* 10 - b",
    "* 14": "* 14",
    "* 14 - b": "* 14 - b",
    "200 + a": "200 + a",
    "* 6 - b": "* 6 - b",
    "100 + a": "100 + a",
    "* 2 - b": "* 2 - b",
    "* 3 - b": "* 3 - b",
    "* 5 - b": "* 5 - b",
    "* 8": "* 8",
    "* 4": "* 4",
    "* 9 - b": "* 9 - b",
    "* 5": "* 5",
    "* 7 - b": "* 7 - b",
    "500 + a": "500 + a",
    "1200 + a": "1200 + a",
    "*2": "*2",
    "4000 + a": "4000 + a",
    "400 + a": "400 + a",
    "950 + a": "950 + a",
    "2000 + a": "2000 + a",
    "1000 + a": "1000 + a",
    "3000 + a": "3000 + a",
    "* 11 - b": "* 11 - b",
    "- b": "- b",
    "* 6": "* 6",
    "300 + a": "300 + a",
    "* 1": "* 1",
    "50 + a": "50 + a",
    "800 + a": "800 + a",
    "900 + a": "900 + a",
    "* 3 + a": "* 3 + a",
    "+ b": "+ b",
    "70000 + a": "70000 + a",
    "150 + a": "150 + a",
    "* 20": "* 20",
    "* 1 - b": "* 1 - b",
    "* 5 + a": "* 5 + a",
    "* 9 + a": "* 9 + a",
    "110 + a": "110 + a",
    "FTKR": "FTKR",
    "v1": "v1",
    "wasmBinary": "wasmBinary",
    "arguments": "arguments",
    "thisProgram": "thisProgram",
    "quit": "quit",
    "preRun": "preRun",
    "postRun": "postRun",
    "ENVIRONMENT": "ENVIRONMENT",
    "WEB": "WEB",
    "WORKER": "WORKER",
    "NODE": "NODE",
    "SHELL": "SHELL",
    "Module": "Module",
    "value is not valid. must be one of": "value is not valid. must be one of",
    "WEB|WORKER|NODE|SHELL.": "WEB|WORKER|NODE|SHELL.",
    "normalize": "normalize",
    "readFileSync": "readFileSync",
    "readBinary": "readBinary",
    "argv": "argv",
    "exports": "exports",
    "uncaughtException": "uncaughtException",
    "unhandledRejection": "unhandledRejection",
    "exit": "exit",
    "inspect": "inspect",
    "Emscripten Module object": "Emscripten Module object",
    "binary": "binary",
    "readAsync": "readAsync",
    "setWindowTitle": "setWindowTitle",
    "print": "print",
    "printErr": "printErr",
    "i1": "i1",
    "i8": "i8",
    "i16": "i16",
    "i32": "i32",
    "i64": "i64",
    "double": "double",
    "Finished up all reserved function pointers. Use a higher value for RESERVED": "Finished up all reserved function pointers. Use a higher value for RESERVED",
    "dynCall_": "dynCall_",
    "Assertion failed": "Assertion failed",
    "Cannot call unknown function": "Cannot call unknown function",
    ", make sure it is exported": ", make sure it is exported",
    "stringToC": "stringToC",
    "arrayToC": "arrayToC",
    "invalid type for setValue": "invalid type for setValue",
    "invalid type for getValue": "invalid type for getValue",
    "utf": "utf",
    "no stack trace available": "no stack trace available",
    "extraStackTrace": "extraStackTrace",
    "buffer": "buffer",
    "HEAP8": "HEAP8",
    "HEAP16": "HEAP16",
    "HEAP32": "HEAP32",
    "HEAPU8": "HEAPU8",
    "HEAPU16": "HEAPU16",
    "HEAPU32": "HEAPU32",
    "HEAPF32": "HEAPF32",
    "HEAPF64": "HEAPF64",
    "Cannot enlarge memory arrays. Either": "Cannot enlarge memory arrays. Either",
    "compile with": "compile with",
    "TOTAL": "TOTAL",
    "with X higher than the current value": "with X higher than the current value",
    "ALLOW": "ALLOW",
    "which allows increasing the size at runtime, or": "which allows increasing the size at runtime, or",
    "if you want malloc to return NULL": "if you want malloc to return NULL",
    "instead of this abort, compile with": "instead of this abort, compile with",
    "ABORTING": "ABORTING",
    "reallocBuffer": "reallocBuffer",
    "usingWasm": "usingWasm",
    "byteLength": "byteLength",
    "should be larger than TOTAL": "should be larger than TOTAL",
    "was": "was",
    "wasmMemory": "wasmMemory",
    "Runtime error": "Runtime error",
    "expected the system to be little": "expected the system to be little",
    "dynCall": "dynCall",
    "writeStringToMemory is deprecated and should not be called! Use stringToUTF8": "writeStringToMemory is deprecated and should not be called! Use stringToUTF8",
    "instead!": "instead!",
    "monitorRunDependencies": "monitorRunDependencies",
    "preloadedImages": "preloadedImages",
    "preloadedAudios": "preloadedAudios",
    "native": "native",
    "locateFile": "locateFile",
    "the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here": "the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here",
    "on the web, we need the wasm binary to be preloaded and set on Module": "on the web, we need the wasm binary to be preloaded and set on Module",
    ". emcc": ". emcc",
    "will do that for you when generating HTML": "will do that for you when generating HTML",
    "but not JS": "but not JS",
    "same": "same",
    "failed to load wasm binary file at '": "failed to load wasm binary file at '",
    "arrayBuffer": "arrayBuffer",
    "no native wasm support detected": "no native wasm support detected",
    "no native wasm Memory in use": "no native wasm Memory in use",
    "memory": "memory",
    "env": "env",
    "asm": "asm",
    "wasm": "wasm",
    "instantiateWasm": "instantiateWasm",
    "callback failed with error": "callback failed with error",
    "instance": "instance",
    "module": "module",
    "failed to asynchronously prepare wasm": "failed to asynchronously prepare wasm",
    "wasm streaming compile failed": "wasm streaming compile failed",
    "falling back to ArrayBuffer instantiation": "falling back to ArrayBuffer instantiation",
    "asmPreload": "asmPreload",
    "asmjs": "asmjs",
    "table": "table",
    "wasmTableSize": "wasmTableSize",
    "wasmMaxTableSize": "wasmMaxTableSize",
    "anyfunc": "anyfunc",
    "wasmTable": "wasmTable",
    "memoryBase": "memoryBase",
    "STATIC": "STATIC",
    "tableBase": "tableBase",
    "no binaryen method succeeded. consider enabling more options, like interpreting, if you want that": "no binaryen method succeeded. consider enabling more options, like interpreting, if you want that",
    ", at": ", at",
    "unknown filename": "unknown filename",
    "unknown function": "unknown function",
    "Character code": "Character code",
    "at offset": "at offset",
    "not in 0x00": "not in 0x00",
    "longjmp": "longjmp",
    "setThrew": "setThrew",
    "establishStackSpace": "establishStackSpace",
    "getTempRet0": "getTempRet0",
    "runPostSets": "runPostSets",
    "setTempRet0": "setTempRet0",
    "stackAlloc": "stackAlloc",
    "stackRestore": "stackRestore",
    "stackSave": "stackSave",
    "ccall": "ccall",
    "cwrap": "cwrap",
    "ExitStatus": "ExitStatus",
    "Program terminated with exit": "Program terminated with exit",
    "calledRun": "calledRun",
    "onRuntimeInitialized": "onRuntimeInitialized",
    "setStatus": "setStatus",
    "Running": "Running",
    "run": "run",
    "noExitRuntime": "noExitRuntime",
    "onExit": "onExit",
    "onAbort": "onAbort",
    ". Build with": ". Build with",
    "ASSERTIONS=1 for more info.": "ASSERTIONS=1 for more info.",
    "preInit": "preInit",
    "stb": "stb",
    "stbvorbis decode failed": "stbvorbis decode failed",
    "asmjs version is not available": "asmjs version is not available",
    "HTTP status": "HTTP status",
    "on stbvorbis": "on stbvorbis",
    "Deploy stbvorbis": "Deploy stbvorbis",
    "at the same place as stbvorbis": "at the same place as stbvorbis",
    "-1": "-1"
}